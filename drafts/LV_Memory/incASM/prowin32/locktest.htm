<!doctype html><html lang='en'><head>
<meta http-equiv='Content-Type' content='text/html; charset=utf-8'/>
<meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=2.0, user-scalable=yes'>
<meta name='robots' content='ALL,FOLLOW'/>
<meta name='description' content='&euro;ASM file locktest.htm'/>
<meta name='version' content='20250318'/>
<meta name='author' content='Pavel vitsoft Šrubař'/>
<link rel='stylesheet' href='../euroasm.css' type='text/css'/>
<link rel='shortcut icon' href='../favicon.ico'/>
<title>locktest.htm</title>
</head>
<body class='OBJLIB' id='top'><div class='HEADMENU'><table>
<tr><td rowspan='2' title='&euro;ASM - assembler and linker'><img src='../favicon.ico' alt='EuroAssembler' />
<td><a href='../index.htm' title='Alphabetical index of all &euro;ASM elements, directives and instructions'>Index</a></td>
<td><a href='../eadoc/' class='EADOC' title='Documentation of EuroAssembler'>Manual</a></td>
<td><a href='https://euroassembler.eu/download/' title='History &amp; download of the latest and previous versions'>Download</a></td>
<td><a href='../easource/' class='EASOURCE' title='Source files of EuroAssembler itself'>Source</a></td>
<td><a href='../maclib/' class='MACLIB' title='Macro libraries shipped with &euro;ASM'>Macros</a></td>
<td rowspan='2' title='Find the searched token in any text file on this site'>
<form method='post' action='../search.php' enctype='multipart/form-data' accept-charset='utf-8'>
<input type='text' id='q' placeholder='Searched word(s)' name='q' value=''/>
<br/><label title='Check the box to find the expression even if it is surrounded by other letters | digits.'>
<input type='checkbox' name='EW'/><small>Embedded word</small></label>
<br/><label title='Check the box for case-insensitive search.'>
<input type='checkbox' name='CI'/><small>Case ins.</small></label>
<input type='submit' title='Search for the specified word|expression in all site files.' name='find' value='Search'/>
</form></td></tr><tr>
<td><a href='../sitemap.htm' title='List of directories and files on this site'>Sitemap</a></td>
<td><a href='../eadoc/links.htm' class='EADOC' title='References and external links to resources used in EuroAssembler developement'>Links</a></td>
<td><a href='https://euroassembler.eu/forum/' title='Discussion forum concerning EuroAssembler'>Forum</a></td>
<td><a href='../eatests/' class='EATESTS' title='Program snippets for testing the function of &euro;ASM'>Tests</a></td>
<td><a href='../objlib/' class='OBJLIB' title='Skeletons and sample objects and projects shipped with &euro;ASM'>Projects</a></td>
</tr></table></div>
<!--Contents above the marker {!==/HEADMENU==} was generated by "generate.php".-->
<!--/HEADMENU-->
<h1>locktest.htm
<br/><a href="#Header">Header</a>
<br/><a href="#Dos">Dos</a>
<br/><a href="#Win">Win</a>
</h1>
<p><dfn>Lock test</dfn> is dual 16-bit Dos and 32-bit Windows executable utility
<!---->which examines status of the keyboard indicators NumLock, CapsLock, ScrollLock,
<!---->and returns the detected status in errorlevel and as a digit
<kbd>0</kbd> or <kbd>1</kbd> on the standard output.</p>
<p>An argument should start with uppercase or lowercase letter
<kbd>N</kbd>,<kbd>C</kbd> or <kbd>S</kbd>, it may be optionaly prefixed with slash
<kbd>/</kbd> or dash <kbd>-</kbd>. For instance
<code>locktest Scroll</code>, <code>locktest /scrollLock</code>, <code>locktest -s</code>.</p>
<p>This utility displays help text when wrong argument was provided.</p>
<blockquote>Lock Test can be used in batch scripts for instance to warn the user
<!---->that keyboard is in unexpected state, or to control the running PC&nbsp;service
<!---->with *Lock keyboard keys, without having the monitor switched on.</blockquote>
<p>Dual utility means that the executable file <q>locktest.exe</q> works both in 16-bit Dos and in
<!---->32-bit or 64-bit Windows. The <a href="#Dos">Dos version</a> is compiled to a temporary MZ file
<q>locktesd.exe</q> and then it will be embedded to the <a href="#Win">Windows version
</a>, i. e. to PE file <q>locktest.exe</q> as its <em>stub</em>.
<!---->Dos stub is used by the loader when Windows subsystem is not available.</p>
<p>Both versions have the same functionality, their similar parts are shared via
<a href="#Header">Header</a> division.</p>
<br class="CLEAR"/>
<dl>
<dt>Format</dt><dd>Dual Dos and Windows console application.</dd>
<dt>Platform</dt><dd>Dos and Windows.</dd>
<dt>Input</dt><dd>Identification of investigated keyboard lock is specified as an argument
<code>Num</code>, <code>Caps</code> or <code>Scroll</code>.</dd>
<dt>Output</dt><dd>Digit <kbd>0</kbd> and errorlevel=0 when the lock is off,
<br/>digit <kbd>1</kbd> and errorlevel=1 when the lock is on (its LED is shining).
</dd>
<dt>Build</dt><dd><code>euroasm locktest.htm</code></dd>
<dt>Run</dt><dd><code>locktest.exe</code></dd>
</dl>

<dl id="Header"><dt><a href="#top">Header</a></dt><dd>This division defines common
<!---->preprocessing variable <dfn>%HelpText</dfn> which is
<!---->shared between Dos and Windows versions with minor difference
<!---->between their program formats (MZ and PE) represented by
<dfn>%%^FORMAT</dfn>. Expansion of %%^FORMAT variable is postponed to
<dfn>%HelpExp</dfn>.</dd></dl><pre>
          EUROASM UNICODE=OFF, AUTOSEGMENT=ON
%HelpText %SET 13,10,                                                         \
'Program:  locktest.exe version %^DATE.',13,10,                               \
'Licence:  Public domain by vitsoft.',13,10,                                  \
'Format:   %%^FORMAT (dual Dos | Windows console application).',13,10,        \
'Function: Test NumLock | CapsLock | ScrollLock keyboard status.',13,10,      \
'Parameter:Num | Caps | Scroll, optionally prefixed with dash | slash.',13,10,\
'Output:   Digit 0 | 1, errorlevel 0 | 1.',13,10,                             \
'Example:  locktest ScrollLock   or  locktest -s',13,10,                      \
 0
</pre>

<dl id="Dos"><dt><a href="#top">Dos version</a></dt><dd>This 16-bit MZ executable
<!---->will be linked to <a href="#Win">Windows version</a> as a stub file.
<!---->It can also be tested as <q>locktesd.exe</q> in real DOS or in
<em>NTVDM</em> emulation from 32bit MS Windows.</dd></dl><pre>
locktesd PROGRAM FORMAT=MZ, MODEL=SMALL, WIDTH=16, Entry=Main:
         INCLUDE1 dosapi.htm, cpuext.htm
%HelpExp %SET2 %HelpText     ; Delayed expansion of %^FORMAT variable.
HelpText DB %HelpExp         ; Final definition of HelpText in MZ variant.
Digit    DB '0'              ; Output character <kbd>0</kbd> or <kbd>1</kbd>.
Main:    PROC                ; Entry point of Dos version.
          PUSH PARA#HelpText ; [DATA] will be addressed with DS.
          POP DS             ; [PSP] stays adressed with ES.
          GetArg 1           ; Use Dos <a class="EXT" href="../maclib/dosapi.htm#GetArg">GetArg</a> macro to get 1st argument to ES:SI,CX.
          JC Help:           ; Abort if none was found.
.0x2D:    ; Labels .0x2D: | .0x2F: are used when argument starts with dash | slash.
.0x2F:    SEGES:LODSB        ; The first character should be one of <kbd>/ - N C S n c s</kbd>.
          OR AL,0x20         ; Convert letters <kbd>N C S</kbd> to <kbd>n c s</kbd>.
          Dispatch AL,0x2D,0x2F,'n','c','s' ; Use macro <a class="EXT" href="../maclib/cpuext.htm#Dispatch">Dispatch</a> to fork the thread.
Help:     StdOutput HelpText ; Display HelpText when the argument is not valid.
          TerminateProgram Errorlevel=8
.c:       MOV BL,0x40        ; CapsLock Flag mask.
          JMP Test:
.s:       MOV BL,0x10        ; ScrollLock Flag mask.
          JMP Test:
.n:       MOV BL,0x20        ; NumLock Flag mask.
Test:     DosAPI INT=16h,AH=2; Returns keyboard flags in AL (in fact it's BiosAPI).
          AND AL,BL          ; Test the requested lock flag.
          JZ ReturnAL:       ; Skip when the flag is reset.
          MOV AL,1           ; Prepare output errorlevel and digit.
ReturnAL: OR [Digit],AL      ; AL is now 0 or 1.
          StdOutput Digit, Size=1, Eol=Yes ; Write <kbd>0</kbd> or <kbd>1</kbd> on StdOutput.
          TerminateProgram Errorlevel=AL   ; Terminate with errorlevel 0 or 1.
         ENDPROC Main:
        ENDPROGRAM locktesd
</pre>
<dl id="Win"><dt><a href="#top">Win version</a></dt>
<dd>This is standard MS Windows console utility, which links previously compiled Dos version
<q>locktesd.exe</q> as its MZ stub. <br/>It begins with pseudoinstruction
<a class="EXT" href="../eadoc/#pcDROPMACRO">%DROPMACRO</a> which makes &euro;ASM to forget
<!---->homonymous 16bit macros <code>GetArg, StdOutput, TerminateProgram
</code>defined by the inclusion of <a class="EXT" href="../maclib/dosapi.htm">dosapi.htm
</a> in the previous program locktesd. Otherwise &euro;ASM would complain with
<code>W2512 Overwriting macro "GetArg" previously defined at "dosapi.htm"{326}.</code>.
</dd></dl><pre>
         %DROPMACRO *    ; Forget definitions of homonymous macros from <q>dosapi.htm</q>.
locktest PROGRAM FORMAT=PE, WIDTH=32,ENTRY=Main:, \
                 ICONFILE=, STUBFILE="locktesd.exe"
         INCLUDE1 winapi.htm, winsgui.htm, cpuext.htm
         IMPORT GetKeyState,LIB=user32.dll
%HelpExp %SET2 %HelpText ; Delayed expansion of %^FORMAT variable.
HelpText DB %HelpExp     ; Final definition of HelpText in PE variant.
Digit    DB '0'          ; Output character <kbd>0</kbd> or <kbd>1</kbd>.
Main:    PROC            ; Entry point of Win version.
          GetArg 1       ; Use Win <a class="EXT" href="../maclib/winapi.htm#GetArg">GetArg</a> macro to get 1st argument to ESI,ECX.
          JC Help:       ; Abort if none was found.
.0x2D:                   ; Labels .0x2D: | .0x2F: are used when argument starts with dash | slash.
.0x2F:    LODSB          ; The first character should be one of <kbd>/ - N C S n c s</kbd>.
          OR AL,0x20     ; Convert letters <kbd>N C S</kbd> to <kbd>n c s</kbd>.
          Dispatch AL,0x2D,0x2F,'n','c','s'
Help:     StdOutput HelpText ; Display HelpText when the argument is not valid.
          TerminateProgram Errorlevel=8
.c:       MOV EAX,VK_CAPITAL
          JMP Test:
.s:       MOV EAX,VK_SCROLL
          JMP Test:
.n:       MOV EAX,VK_NUMLOCK
Test:     WinAPI GetKeyState, EAX         ; Return lock state of virtual key EAX.
          AND EAX,1                       ; Isolate the LSbit.
          OR [Digit],AL                   ; Modify the digit for StdOutput.
          StdOutput Digit, Size=1,Eol=Yes ; Write <kbd>0</kbd> or <kbd>1</kbd> on StdOut.
          TerminateProgram Errorlevel=EAX ; Terminate with errorlevel 0 or 1.
         ENDPROC Main:
        ENDPROGRAM locktest
</pre>
<!--TAILMENU-->
<!--Contents below the marker {!==TAILMENU==} was generated by "generate.php".-->
<br class='CLEAR'/><a id='bottom' href='#top'>&#x25B2;Back to the top&#x25B2;</a>
</body></html>
