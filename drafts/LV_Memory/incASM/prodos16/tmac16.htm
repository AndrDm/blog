<!doctype html><html lang='en'><head>
<meta http-equiv='Content-Type' content='text/html; charset=utf-8'/>
<meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=2.0, user-scalable=yes'>
<meta name='robots' content='ALL,FOLLOW'/>
<meta name='description' content='&euro;ASM file tmac16.htm'/>
<meta name='version' content='20250318'/>
<meta name='author' content='Pavel vitsoft Šrubař'/>
<link rel='stylesheet' href='../euroasm.css' type='text/css'/>
<link rel='shortcut icon' href='../favicon.ico'/>
<title>tmac16.htm</title>
</head>
<body class='OBJLIB' id='top'><div class='HEADMENU'><table>
<tr><td rowspan='2' title='&euro;ASM - assembler and linker'><img src='../favicon.ico' alt='EuroAssembler' />
<td><a href='../index.htm' title='Alphabetical index of all &euro;ASM elements, directives and instructions'>Index</a></td>
<td><a href='../eadoc/' class='EADOC' title='Documentation of EuroAssembler'>Manual</a></td>
<td><a href='https://euroassembler.eu/download/' title='History &amp; download of the latest and previous versions'>Download</a></td>
<td><a href='../easource/' class='EASOURCE' title='Source files of EuroAssembler itself'>Source</a></td>
<td><a href='../maclib/' class='MACLIB' title='Macro libraries shipped with &euro;ASM'>Macros</a></td>
<td rowspan='2' title='Find the searched token in any text file on this site'>
<form method='post' action='../search.php' enctype='multipart/form-data' accept-charset='utf-8'>
<input type='text' id='q' placeholder='Searched word(s)' name='q' value=''/>
<br/><label title='Check the box to find the expression even if it is surrounded by other letters | digits.'>
<input type='checkbox' name='EW'/><small>Embedded word</small></label>
<br/><label title='Check the box for case-insensitive search.'>
<input type='checkbox' name='CI'/><small>Case ins.</small></label>
<input type='submit' title='Search for the specified word|expression in all site files.' name='find' value='Search'/>
</form></td></tr><tr>
<td><a href='../sitemap.htm' title='List of directories and files on this site'>Sitemap</a></td>
<td><a href='../eadoc/links.htm' class='EADOC' title='References and external links to resources used in EuroAssembler developement'>Links</a></td>
<td><a href='https://euroassembler.eu/forum/' title='Discussion forum concerning EuroAssembler'>Forum</a></td>
<td><a href='../eatests/' class='EATESTS' title='Program snippets for testing the function of &euro;ASM'>Tests</a></td>
<td><a href='../objlib/' class='OBJLIB' title='Skeletons and sample objects and projects shipped with &euro;ASM'>Projects</a></td>
</tr></table></div>
<!--Contents above the marker {!==/HEADMENU==} was generated by "generate.php".-->
<!--/HEADMENU-->
<h1>tmac16.htm</h1>
<p>This program is designated for demonstration and testing of
<!---->some macros defined in libraries
<a class="EXT" href="../maclib/sort16.htm">sort16.htm</a> and
<a class="EXT" href="../maclib/cpuext16.htm">cpuext16.htm
</a>: LodD, StoD, StoH, LodH, ShellSort.</p>
<dl>
<dt>Format</dt><dd>MZ 16bit</dd>
<dt>Platform</dt><dd>DOS</dd>
<dt>Build</dt><dd class="PRE"> euroasm tmac16.htm</dd>
<dt>Run</dt><dd class="PRE"> tmac16</dd>
<dt>See also</dt>
<dd><a class="EXT" href="../prowin32/tmac32.htm">tmac32.htm</a>,
<a class="EXT" href="../prowin64/tmac64.htm">tmac64.htm</a>.</dd>
</dl><pre>
       EUROASM UNICODE=Off
tmac16 PROGRAM Format=MZ,Width=16,IconFile=,Entry=Main:
        INCLUDE dosapi.htm, cpuext%^WIDTH.htm, sort%^WIDTH.htm
Main:   PROC
          MOV AX,PARA# [DATA]
          MOV DS,AX
          MOV ES,AX
          StdOutput ="This program %^PROGRAM will test macros from EuroAssembler libraries",Eol=Yes
          StdOutput ="cpuext%^WIDTH.htm, sort%^WIDTH.htm.",Eol=Yes
          StdOutput ="Enter one or more comma-separated signed decimal integer numbers",Eol=Yes
          StdOutput =" in the range -32768..+32767, for instance",Eol=Yes
          StdOutput =" 12345, -12,0,-32768, +32767, 54321",Eol=Yes
          StdOutput ="-------------------------------------------------",Eol=Yes
          StdInput  Raw
          MOV DI,Raw
          MOV SI,DI
          MOV CX,SIZE# Inp
          MOV AL,','
          REPNE SCASB
          JNE .10:
          DEC DI
.10:      DEC DI
          CMP DI,SI
          JNA .20:
          CMPB [DI],' '
          JBE .10:
.20:      SUB DI,SI
          MOV CX,DI
          INC CX
          MOV DI,Inp
          REP MOVSB
          StdOutput ="The first entered number:",Eol=Yes
          StdOutput Inp, Size=DI,Eol=Yes
          StdOutput ="Conversion from decimal to binary and back with macros LodD and StoD:",Eol=Yes
          LodD Inp
          JC .Abort:
          MOV [Bin],AX
          StoD Dec
          JC .Abort:
          StdOutput Dec,Eol=Yes
          StdOutput ="Conversion from binary to hexadecimal with macro StoH Align=Left:",Eol=Yes
          MOV AX,[Bin]
          StoH Hex,Align=Left
          JC .Abort:
          StdOutput ="0x",Hex,Eol=Yes
          StdOutput ="Conversion from binary to hexadecimal with macro StoH Align=Right,Size=4:",Eol=Yes
          MOV AX,[Bin]
          StoH Hex,Align=Right
          JC .Abort:
          StdOutput ="0x",Hex,Eol=Yes
          MOV SI,Raw
          MOV DI,Raw + SIZE# Raw
.30:      DEC DI
          CMP DI,SI
          JNA .40:
          CMPB [DI],' '
          JBE .30:
.40:      SUB DI,SI
          INC DI             ; Netto size of the stripped list.
          StdOutput ="Entered array of numbers:",Eol=Yes
          StdOutput SI,Size=DI,Eol=Yes
          MOV DX,DI          ; Netto size of the stripped list.
          ADD DX,SI          ; SI..DX is the list of decimal numbers.
          SUB BX,BX          ; BX will keep the number of entered numbers.
          MOV DI,Tab         ; Loaded numbers will be stored to Tab.
          DEC SI
.50:      INC SI
.60:      CMP SI,DX          ; Find the next number (it begins with sign or digit).
          JNB .80:           ; End of list.
          LODSB
          CMP AL,'+'
          JE .70:
          CMP AL,'-'
          JE .70:
          CMP AL,'0'
          JB .60:
          CMP AL,'9'
          JA .60:
.70:      DEC SI
          LodD SI
          JC .50:            ; Ignore incorrect numbers.
          STOSW
          INC BX
          JMP .60:
.80:      StdOutput ="Unsorted array of entered numbers:",Eol=Yes
          CALL .PrintTab:
          ShellSort Tab, BX, 2, .Ascending:
          StdOutput ="Sorted ascending array of entered numbers:",Eol=Yes
          CALL .PrintTab:
          ShellSort Tab, BX, 2, .Descending:
          StdOutput ="Sorted descending array of entered numbers:",Eol=Yes
          CALL .PrintTab:
.End:     TerminateProgram
.Abort:   StdOutput Eol=Yes
          StdOutput =B"Aborted, macro returned CF.",Eol=Yes
          TerminateProgram, Errorlevel=8

.Ascending: PROC  ; Sort callback for comparing two signed integers at SI,DI.
             MOV AX,[SI]
             MOV DX,[DI]
             CMP DX,AX
             CLC
             JNL .Done:    ; Jump if both records are in order. No carry.
             MOV [SI],DX   ; Otherwise swap them and return CF.
             MOV [DI],AX
             STC
.Done:       RET
            ENDP .Ascending:

.Descending:PROC  ; Sort callback for comparing two signed integers at SI,DI.
             MOV AX,[SI]
             MOV DX,[DI]
             CMP DX,AX
             CLC
             JNG .Done:    ; Jump if both records are in order. No carry.
             MOV [SI],DX   ; Otherwise swap them and return CF.
             MOV [DI],AX
             STC
.Done:       RET
            ENDP .Descending:

.PrintTab:  PROC ; Display EBX numbers in Tab.
             MOV CX,BX
             MOV SI,Tab
.Next:       LODSW
             StoD Dec
             MOV AX,','
             STOSW       ; Terminate the decimal number with comma and NUL.
             StdOutput Dec
             LOOP .Next:
             StdOutput Eol=Yes
             RET
            ENDP .PrintTab:
        ENDP Main:

Bin:  DW 0           ; The first entered number in binary form.
Tab:  DD 128* WORD   ; Table of entered numbers in binary form.
Raw:  DB 128*BYTE 0  ; Entered array of decimal numbers.
Inp:  DB 32*BYTE 0   ; The first number, stripped from white spaces.
Dec:  DB 32*BYTE 0   ; The first number in decimal notation.
Hex:  DB 4*BYTE 0    ; The first number in hexdecimal notation.
      DB 0           ; Zero terminator.
     ENDPROGRAM tmac16
</pre>
<!--TAILMENU-->
<!--Contents below the marker {!==TAILMENU==} was generated by "generate.php".-->
<br class='CLEAR'/><a id='bottom' href='#top'>&#x25B2;Back to the top&#x25B2;</a>
</body></html>
