<!doctype html><html lang='en'><head>
<meta http-equiv='Content-Type' content='text/html; charset=utf-8'/>
<meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=2.0, user-scalable=yes'>
<meta name='robots' content='ALL,FOLLOW'/>
<meta name='description' content='t8218.htm test file'/>
<meta name='version' content='20250318'/>
<meta name='author' content='Pavel vitsoft Šrubař'/>
<link rel='stylesheet' href='../euroasm.css' type='text/css'/>
<link rel='shortcut icon' href='../favicon.ico'/>
<title>t8218.htm test file</title>
</head>
<body class='EATESTS' id='top'><div class='HEADMENU'><table>
<tr><td rowspan='2' title='&euro;ASM - assembler and linker'><img src='../favicon.ico' alt='EuroAssembler' />
<td><a href='../index.htm' title='Alphabetical index of all &euro;ASM elements, directives and instructions'>Index</a></td>
<td><a href='../eadoc/' class='EADOC' title='Documentation of EuroAssembler'>Manual</a></td>
<td><a href='https://euroassembler.eu/download/' title='History &amp; download of the latest and previous versions'>Download</a></td>
<td><a href='../easource/' class='EASOURCE' title='Source files of EuroAssembler itself'>Source</a></td>
<td><a href='../maclib/' class='MACLIB' title='Macro libraries shipped with &euro;ASM'>Macros</a></td>
<td rowspan='2' title='Find the searched token in any text file on this site'>
<form method='post' action='../search.php' enctype='multipart/form-data' accept-charset='utf-8'>
<input type='text' id='q' placeholder='Searched word(s)' name='q' value=''/>
<br/><label title='Check the box to find the expression even if it is surrounded by other letters | digits.'>
<input type='checkbox' name='EW'/><small>Embedded word</small></label>
<br/><label title='Check the box for case-insensitive search.'>
<input type='checkbox' name='CI'/><small>Case ins.</small></label>
<input type='submit' title='Search for the specified word|expression in all site files.' name='find' value='Search'/>
</form></td></tr><tr>
<td><a href='../sitemap.htm' title='List of directories and files on this site'>Sitemap</a></td>
<td><a href='../eadoc/links.htm' class='EADOC' title='References and external links to resources used in EuroAssembler developement'>Links</a></td>
<td><a href='https://euroassembler.eu/forum/' title='Discussion forum concerning EuroAssembler'>Forum</a></td>
<td><a href='../eatests/' class='EATESTS' title='Program snippets for testing the function of &euro;ASM'>Tests</a></td>
<td><a href='../objlib/' class='OBJLIB' title='Skeletons and sample objects and projects shipped with &euro;ASM'>Projects</a></td>
</tr></table></div>
<!--Contents above the marker {!==/HEADMENU==} was generated by "generate.php".-->
<!--/HEADMENU-->
<h1 id='TestTitle'>Test <a class='EXT' href='t8218.htm'>t8218</a>:
<!--T-->COM program for 16bit BIOS links LIBCOF library.
</h1><button onclick='window.location="../eatests/manager.php?test=t8218";'>Manage t8218</button>
<br class='CLEAR'/>
<dl><dt>Source &amp; expected listing <q>t8218.htm.lst</q></dt><dd><samp>
|                      |      EUROASM AUTOSEGMENT=ON,CPU=086,DUMPWIDTH=24,PRIV=ENABLED
|7438323138            |%test %SET t8218         ; LIBCOF.B16
|                      |;; Create the first auxilliary COFF module "%test.WB.obj".
|                      |%test.WB PROGRAM FORMAT=COFF,WIDTH=16,MODEL=TINY
|                      |;;
|[CODE]                ::::Section changed.
|0000:                 |Write.B16:: PROC         ; Display ASCIIZ string pointed to by DS:SI using BIOS.
|0000:31DB             |   XOR BX,BX             ; Videopage=0.
|0002:B40E             |   MOV AH,0Eh            ; BIOS service Teletype output.
|0004:FC               |   CLD                   ; Direction forward.
|0005:AC               |.1:LODSB                 ; Load a character from string to AL, increment SI.
|0006:3C00             |   CMP AL,0              ; Test if zero-terminator reached.
|0008:7404             |   JE .9:                ; Exit the procedure if AL=0.
|000A:CD10             |   INT 10h               ; Otherwise display the character AL and advance screen cursor.
|000C:EBF7             |   JMP .1:               ; Repeat with following characters.
|000E:C3               |.9:RET                   ; AX,BX,SI are clobbered.
|000F:                 |  ENDP Write.B16::
|                      |;;
|000F:                 |Beep.B16:: PROC          ; Display message "Beeping.." and play a sound using BIOS.
|000F:BE[0000]         |   MOV SI,=B"Beeping..." ; Define a literal string. Assume DS=PARA# [RODATA}.
|0012:E8EBFF           |   CALL Write.B16::      ; Display the notification "Beeping...".
|0015:BE[0000]         |   MOV SI,=W(0x0007)     ; Define ASCIIZ string with BEL character in [RODATA].
|0018:E8E5FF           |   CALL Write.B16::      ; Play the beep sound.
|001B:C3               |   RET                   ; AX,BX,SI are clobbered.
|001C:                 |  ENDP Beep.B16::
|[@LT2]                ====ListLiterals in section [@LT2].
|0000:0700             =W(0x0007)
|[@LT1]                ====ListLiterals in section [@LT1].
|0000:42656570696E672E~=B"Beeping..."
|                      | ENDPROGRAM %test.WB
|        **** ListMap "t8218.WB.obj",model=TINY,groups=1,segments=2,entry=,stack=[COMGROUP]:00002000h
|        [COMGROUP],FA=00000064h,RVA=00000000h,size=0000001Ch=28,group [CODE] [RODATA]
|          [CODE],FA=00000064h,RVA=00000000h,size=0000001Ch=28,width=16,align=0010h,purpose=CODE
|          [RODATA],FA=00000094h,RVA=00000000h,size=0000000Dh=13,width=16,align=0010h,purpose=RODATA+LITERAL
|        **** ListGlobals "t8218.WB.obj",Global=0,Public=2,Extern=0,eXport=0,Import=0
|        Beep.B16,[COMGROUP]:0000000Fh,scope='P'
|        Write.B16,[COMGROUP]:00000000h,scope='P'
|                      |;;
|                      |;; Create the second auxilliary COFF module "%test.EX.obj".
|                      |%test.EX PROGRAM FORMAT=COFF,WIDTH=16,MODEL=TINY
|[CODE]                ::::Section changed.
|0000:                 |Exit.B16:: PROC          ; Display message "End", terminate Terminate the program by endless loop.
|0000:BE[0000]         |   MOV SI,.M:            ; String "End" will be defined in segment [BSS] at DS:SI.
|0003:C704456E         |   MOVW [SI+0],"En"      ; Dynamically initialize the notification string.
|0007:C744026420       |   MOVW [SI+2],"d "      ; Assume DS=PARA# [BSS].
|000C:C744040A0D       |   MOVW [SI+4],0x0D0A    ; CR+LF.
|0011:C6440600         |   MOVB [SI+6],0         ; Zero-terminate the notification.
|0015:E8(0000)         |   CALL Write.B16::      ; Display notification "End".
|0018:F4               |.9:HLT                   ; Assume there is no OS to return.
|0019:EBFD             |   JMP .9:               ; Terminate in endless loop.
|[BSS]                 ::::Section changed.
|0000:..............   |.M:DB 7*BYTE             ; Reserve space for ASCIIZ string "End" in [BSS] segment.
|[CODE]                ::::Section changed.
|001B:                 |  ENDP Exit.B16::
|                      | ENDPROGRAM %test.EX
|        **** ListMap "t8218.EX.obj",model=TINY,groups=1,segments=2,entry=,stack=[COMGROUP]:00002000h
|        [COMGROUP],FA=00000000h,RVA=00000000h,size=0000001Bh=27,group [CODE] [BSS]
|          [CODE],FA=00000064h,RVA=00000000h,size=0000001Bh=27,width=16,align=0010h,purpose=CODE
|          [BSS],FA=00000000h,RVA=00000000h,size=00000007h=7,width=16,align=0010h,purpose=BSS
|        **** ListGlobals "t8218.EX.obj",Global=0,Public=1,Extern=1,eXport=0,Import=0
|        Exit.B16,[COMGROUP]:00000000h,scope='P'
|        Write.B16,[Write.B16]:00000000h,scope='E'
|                      |;;
|                      |;; Create auxilliary LIBCOF library "%test.lib" from two COFF modules.
|                      |%test PROGRAM FORMAT=LIBCOF,WIDTH=16,MODEL=TINY
|                      |       LINK "%test.WB.obj", "%test.EX.obj"
|                      |      ENDPROGRAM %test
|# I0560 Linking COFF module "./t8218.WB.obj".
|# I0560 Linking COFF module "./t8218.EX.obj".
|        **** ListMap "t8218.lib",model=TINY,groups=0,segments=0,entry=,stack=
|        **** ListGlobals "t8218.lib",Global=0,Public=0,Extern=0,eXport=0,Import=0
|                      |;;
|                      |;; Create the main COM program "%test.com".
|                      |%test PROGRAM FORMAT=COM,WIDTH=16,MODEL=TINY
|[CODE]                ::::Section changed.
|0000:90               |    NOP                  ; Entry point of COM program is fixed at CS:100h.
|0001:BE[0000]         |    MOV SI,Msg
|0004:E8(0000)         |    CALL Write.B16::
|0007:E8(0000)         |    CALL Beep.B16::
|000A:E8(0000)         |    CALL Exit.B16::
|                      |    LINK "%test.lib"
|                      |;;  Define Msg in [DATA] segment.
|[DATA]                ::::Section changed.
|0000:3136626974205449~|Msg:DB '%^WIDTH[]bit %^MODEL %^FORMAT program "%^OUTFILE".',13,10,0
|                      |   ENDPROGRAM %test
|# I0561 Linking LIBCOF library "./t8218.lib".
|        **** ListMap "t8218.com",model=TINY,groups=1,segments=5,entry=[COMGROUP]:00000100h,stack=[COMGROUP]:0000FFFEh
|        [COMGROUP],FA=00000000h,RVA=00000000h,size=00000197h=407,group [PSP] [CODE] [RODATA] [DATA] [BSS]
|          [PSP],FA=00000000h,RVA=00000000h,size=00000100h=256,width=0,align=0,purpose=PHDR
|          [CODE],FA=00000000h,RVA=00000100h,size=0000004Bh=75,width=16,align=0010h,purpose=CODE
|          [RODATA],FA=00000050h,RVA=00000150h,size=0000000Dh=13,width=16,align=0010h,purpose=RODATA
|          [DATA],FA=00000060h,RVA=00000160h,size=00000026h=38,width=16,align=0010h,purpose=DATA
|          [BSS],FA=00000090h,RVA=00000190h,size=00000007h=7,width=16,align=0010h,purpose=BSS
|        **** ListGlobals "t8218.com",Global=0,Public=3,Extern=0,eXport=0,Import=0
|        Beep.B16,[COMGROUP]:0000011Fh,RVA=0000011Fh,scope='P'
|        Exit.B16,[COMGROUP]:00000130h,RVA=00000130h,scope='P'
|        Write.B16,[COMGROUP]:00000110h,RVA=00000110h,scope='P'
|00000000:             |
</samp></dd></dl>
<dl><dt>Expected messages <q>t8218.out</q></dt><dd><code class='PRE'>
<!--M-->I0180 Assembling source file "t8218.htm".
<!--M-->I0270 Assembling source "t8218".
<!--M-->I0310 Assembling source pass 1.
<!--M-->I0330 Assembling source pass 2 - final.
<!--M-->I0470 Assembling program "t8218.WB". "t8218.htm"{44}
<!--M-->I0510 Assembling program pass 1. "t8218.htm"{44}
<!--M-->I0510 Assembling program pass 2. "t8218.htm"{44}
<!--M-->I0530 Assembling program pass 3 - final. "t8218.htm"{44}
<!--M-->I0660 16bit TINY COFF file "t8218.WB.obj" created, size=478. "t8218.htm"{70}
<!--M-->I0650 Program "t8218.WB" assembled in 3 passes with errorlevel 0. "t8218.htm"{70}
<!--M-->I0470 Assembling program "t8218.EX". "t8218.htm"{80}
<!--M-->I0510 Assembling program pass 1. "t8218.htm"{80}
<!--M-->I0510 Assembling program pass 2. "t8218.htm"{80}
<!--M-->I0530 Assembling program pass 3 - final. "t8218.htm"{80}
<!--M-->I0660 16bit TINY COFF file "t8218.EX.obj" created, size=364. "t8218.htm"{95}
<!--M-->I0650 Program "t8218.EX" assembled in 3 passes with errorlevel 0. "t8218.htm"{95}
<!--M-->I0470 Assembling program "t8218". "t8218.htm"{105}
<!--M-->I0510 Assembling program pass 1. "t8218.htm"{105}
<!--M-->I0530 Assembling program pass 2 - final. "t8218.htm"{105}
<!--M-->I0560 Linking COFF module "./t8218.WB.obj". "t8218.htm"{107}
<!--M-->I0560 Linking COFF module "./t8218.EX.obj". "t8218.htm"{107}
<!--M-->I0660 16bit TINY LIBCOF file "t8218.lib" created, size=1314. "t8218.htm"{107}
<!--M-->I0650 Program "t8218" assembled in 2 passes with errorlevel 0. "t8218.htm"{107}
<!--M-->I0470 Assembling program "t8218". "t8218.htm"{114}
<!--M-->I0510 Assembling program pass 1. "t8218.htm"{114}
<!--M-->I0510 Assembling program pass 2. "t8218.htm"{114}
<!--M-->I0530 Assembling program pass 3 - final. "t8218.htm"{114}
<!--M-->I0561 Linking LIBCOF library "./t8218.lib". "t8218.htm"{125}
<!--M-->I0660 16bit TINY COM file "t8218.com" created, size=134. "t8218.htm"{125}
<!--M-->I0650 Program "t8218" assembled in 3 passes with errorlevel 0. "t8218.htm"{125}
<!--M-->I0750 Source "t8218" (190 lines) assembled in 2 passes with errorlevel 0.
<!--M-->I0860 Listing file "t8218.htm.lst" created, size=7046.
<!--M-->I0990 EuroAssembler terminated with errorlevel 0.
</code></dd></dl>
<dl><dt>Expected output file <q>t8218.
<!--E-->com
</q></dt><dd><pre>
<!--B-->0000: 90 BE 60 01 E8 09 00 E8 15 00 E8 23 00 90 90 90  &curren;&curren;`&middot;&curren;&middot;&deg;&curren;&middot;&deg;&curren;#&deg;&curren;&curren;&curren;
<!--B-->0010: 31 DB B4 0E FC AC 3C 00 74 04 CD 10 EB F7 C3 BE  1&curren;&curren;&middot;&curren;&curren;&lt;&deg;t&middot;&curren;&middot;&curren;&curren;&curren;&curren;
<!--B-->0020: 52 01 E8 EB FF BE 50 01 E8 E5 FF C3 90 90 90 90  R&middot;&curren;&curren;&curren;&curren;P&middot;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;
<!--B-->0030: BE 90 01 C7 04 45 6E C7 44 02 64 20 C7 44 04 0A  &curren;&curren;&middot;&curren;&middot;En&curren;D&middot;d&macr;&curren;D&middot;&not;
<!--B-->0040: 0D C6 44 06 00 E8 C8 FF F4 EB FD 00 00 00 00 00  &middot;&curren;D&middot;&deg;&curren;&curren;&curren;&curren;&curren;&curren;&deg;&deg;&deg;&deg;&deg;
<!--B-->0050: 07 00 42 65 65 70 69 6E 67 2E 2E 2E 00 00 00 00  &middot;&deg;Beeping...&deg;&deg;&deg;&deg;
<!--B-->0060: 31 36 62 69 74 20 54 49 4E 59 20 43 4F 4D 20 70  16bit&macr;TINY&macr;COM&macr;p
<!--B-->0070: 72 6F 67 72 61 6D 20 22 74 38 32 31 38 2E 63 6F  rogram&macr;&quot;t8218.co
<!--B-->0080: 6D 22 2E 0D 0A 00                                m&quot;.&middot;&not;&deg;
</pre></dd></dl>
<!--TAILMENU-->
<!--Contents below the marker {!==TAILMENU==} was generated by "generate.php".-->
<br class='CLEAR'/><a id='bottom' href='#top'>&#x25B2;Back to the top&#x25B2;</a>
</body></html>