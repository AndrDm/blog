<!doctype html><html lang='en'><head>
<meta http-equiv='Content-Type' content='text/html; charset=utf-8'/>
<meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=2.0, user-scalable=yes'>
<meta name='robots' content='ALL,FOLLOW'/>
<meta name='description' content='t9570.htm test file'/>
<meta name='version' content='20250318'/>
<meta name='author' content='Pavel vitsoft Šrubař'/>
<link rel='stylesheet' href='../euroasm.css' type='text/css'/>
<link rel='shortcut icon' href='../favicon.ico'/>
<title>t9570.htm test file</title>
</head>
<body class='EATESTS' id='top'><div class='HEADMENU'><table>
<tr><td rowspan='2' title='&euro;ASM - assembler and linker'><img src='../favicon.ico' alt='EuroAssembler' />
<td><a href='../index.htm' title='Alphabetical index of all &euro;ASM elements, directives and instructions'>Index</a></td>
<td><a href='../eadoc/' class='EADOC' title='Documentation of EuroAssembler'>Manual</a></td>
<td><a href='https://euroassembler.eu/download/' title='History &amp; download of the latest and previous versions'>Download</a></td>
<td><a href='../easource/' class='EASOURCE' title='Source files of EuroAssembler itself'>Source</a></td>
<td><a href='../maclib/' class='MACLIB' title='Macro libraries shipped with &euro;ASM'>Macros</a></td>
<td rowspan='2' title='Find the searched token in any text file on this site'>
<form method='post' action='../search.php' enctype='multipart/form-data' accept-charset='utf-8'>
<input type='text' id='q' placeholder='Searched word(s)' name='q' value=''/>
<br/><label title='Check the box to find the expression even if it is surrounded by other letters | digits.'>
<input type='checkbox' name='EW'/><small>Embedded word</small></label>
<br/><label title='Check the box for case-insensitive search.'>
<input type='checkbox' name='CI'/><small>Case ins.</small></label>
<input type='submit' title='Search for the specified word|expression in all site files.' name='find' value='Search'/>
</form></td></tr><tr>
<td><a href='../sitemap.htm' title='List of directories and files on this site'>Sitemap</a></td>
<td><a href='../eadoc/links.htm' class='EADOC' title='References and external links to resources used in EuroAssembler developement'>Links</a></td>
<td><a href='https://euroassembler.eu/forum/' title='Discussion forum concerning EuroAssembler'>Forum</a></td>
<td><a href='../eatests/' class='EATESTS' title='Program snippets for testing the function of &euro;ASM'>Tests</a></td>
<td><a href='../objlib/' class='OBJLIB' title='Skeletons and sample objects and projects shipped with &euro;ASM'>Projects</a></td>
</tr></table></div>
<!--Contents above the marker {!==/HEADMENU==} was generated by "generate.php".-->
<!--/HEADMENU-->
<h1 id='TestTitle'>Test <a class='EXT' href='t9570.htm'>t9570</a>:
<!--T-->ELF object module for 32bit Windows links LIBCOF library
</h1><button onclick='window.location="../eatests/manager.php?test=t9570";'>Manage t9570</button>
<br class='CLEAR'/>
<dl><dt>Source &amp; expected listing <q>t9570.htm.lst</q></dt><dd><samp>
|                       |  EUROASM AUTOSEGMENT=ON,CPU=386,DUMPWIDTH=25
|7439353730             |%test %SET t9570
|                       |;;
|                       |;;  Create the first auxilliary COFF module "%test.WB.obj".
|                       |%test.WB PROGRAM FORMAT=COFF,MODEL=FLAT,WIDTH=32
|[.text]                ::::Section changed.
|00000000:              |Write.W32:: PROC         ; Display ASCIIZ string pointed to by ESI using Windows.
|                       |  IMPORT GetStdHandle:,WriteFile: ; Declare imported Windows kernel functions.
|00000000:6AF5          |  PUSH -11               ; %1 Identifier of standard output STD_OUTPUT_HANDLE.
|00000002:E8(00000000)  |  CALL GetStdHandle:     ; Stdcall the imported Windows function with 1 argument.
|00000007:89C3          |  MOV EBX,EAX            ; Save the returned StdOutput handle to EBX.
|00000009:89F7          |  MOV EDI,ESI            ; Use EDI to find the end of input string.
|0000000B:31C9          |  XOR ECX,ECX            ; Clear ECX to keep the size of input string.
|0000000D:31C0          |  XOR EAX,EAX            ; Clear AL, the searched NUL character.
|0000000F:F7D1          |  NOT ECX                ; Assume unlimited possible string size.
|00000011:F2AE          |  REPNE SCASB            ; Find the zero terminator.
|00000013:F7D1          |  NOT ECX                ; Get string size to ECX.
|00000015:52            |  PUSH EDX               ; Alloc temporary DWORD memory variable on stack.
|00000016:89E2          |    MOV EDX,ESP          ; Get address of this DWORD to EDX.
|00000018:50            |    PUSH EAX             ; %5 No overlap of WriteFile.
|00000019:52            |    PUSH EDX             ; %4 Memory variable for number of bytes.
|0000001A:51            |    PUSH ECX             ; %3 String size.
|0000001B:56            |    PUSH ESI             ; %2 String address.
|0000001C:53            |    PUSH EBX             ; %1 Standard output file handle.
|0000001D:E8(00000000)  |    CALL WriteFile:      ; Stdcall the imported function with 5 arguments.
|00000022:5A            |  POP EDX                ; Free and discard the temporary DWORD on stack.
|00000023:C3            |  RET                    ; Return to caller.
|00000024:              | ENDPROC Write.W32:
|                       |;;
|00000024:              |Beep.W32:: PROC          ; Play a sound in 32bit Windows.
|00000024:BE[00000000]  |  MOV ESI,=B"Beeping..." ; Define a literal string in [.rodata].
|00000029:E8D2FFFFFF    |  CALL Write.W32::       ; Display the notification "Beeping...".
|                       |  IMPORT Beep:           ; Declare imported Windows kernel function.
|0000002E:68C8000000    |  PUSH 200               ; %2 Sound duration [ms].
|00000033:68B8010000    |  PUSH 440               ; %1 Sound frequency [Hz].
|00000038:E8(00000000)  |  CALL Beep:             ; Stdcall the imported function with 2 arguments.
|0000003D:6890010000    |  PUSH 400               ; %2 Sound duration [ms].
|00000042:684B020000    |  PUSH 587               ; %1 Sound frequency [Hz].
|00000047:E8(00000000)  |  CALL Beep:             ; Stdcall the imported function with 2 arguments.
|0000004C:C3            |  RET                    ; Return to caller.
|0000004D:              | ENDPROC Beep.W32:
|[@LT1]                 ====ListLiterals in section [@LT1].
|00000000:42656570696E~~=B"Beeping..."
|                       |ENDPROGRAM %test.WB
|        **** ListMap "t9570.WB.obj",model=FLAT,groups=0,segments=3,entry=,stack=
|          [.text],FA=0000008Ch,RVA=00000000h,size=0000004Dh=77,width=32,align=0010h,purpose=CODE
|          [.rodata],FA=0000010Ch,RVA=00000000h,size=0000000Bh=11,width=32,align=0010h,purpose=RODATA+LITERAL
|          [.drectve],FA=00000117h,RVA=00000000h,size=00000034h=52,width=0,align=1,purpose=DRECTVE
|        **** ListGlobals "t9570.WB.obj",Global=0,Public=2,Extern=0,eXport=0,Import=3
|        Beep,[Beep]:00000000h,scope='I',lib="kernel32.dll"
|        Beep.W32,[.text]:00000024h,scope='P'
|        GetStdHandle,[GetStdHandle]:00000000h,scope='I',lib="kernel32.dll"
|        Write.W32,[.text]:00000000h,scope='P'
|        WriteFile,[WriteFile]:00000000h,scope='I',lib="kernel32.dll"
|                       |;;
|                       |;;  Create the second auxilliary COFF module "%test.EX.obj".
|                       |%test.EX PROGRAM FORMAT=COFF,MODEL=FLAT,WIDTH=32
|[.text]                ::::Section changed.
|00000000:              |Exit.W32:: PROC          ; Display the message "End" and terminate the program.
|00000000:BE[00000000]  |  MOV ESI,.M:            ; Address in segment [.bss] for the message.
|00000005:C706456E6400  |  MOVD [ESI+0],"End"     ; Dynamically define the message "End".
|0000000B:C746030D0A0000|  MOVD [ESI+3],0x0A0D    ; CR+LF.
|00000012:E8(00000000)  |  CALL Write.W32::       ; Display the notification "End".
|                       |  IMPORT ExitProcess:    ; Use imported Windows kernel function.
|00000017:6A00          |  PUSH 0                 ; %1 Terminate with errorlevel 0.
|00000019:E9(00000000)  |  JMP ExitProcess:       ; Use imported function with 1 argument.
|[.bss]                 ::::Section changed.
|00000000:..............|.M: DB 7*BYTE            ; Reserve space for ASCIIZ string "End" in segment [.bss].
|[.text]                ::::Section changed.
|0000001E:              | ENDPROC Exit.W32:
|                       |ENDPROGRAM %test.EX
|        **** ListMap "t9570.EX.obj",model=FLAT,groups=0,segments=3,entry=,stack=
|          [.text],FA=0000008Ch,RVA=00000000h,size=0000001Eh=30,width=32,align=0010h,purpose=CODE
|          [.bss],FA=00000000h,RVA=00000000h,size=00000007h=7,width=32,align=0010h,purpose=BSS
|          [.drectve],FA=000000C8h,RVA=00000000h,size=00000014h=20,width=0,align=1,purpose=DRECTVE
|        **** ListGlobals "t9570.EX.obj",Global=0,Public=1,Extern=1,eXport=0,Import=1
|        Exit.W32,[.text]:00000000h,scope='P'
|        ExitProcess,[ExitProcess]:00000000h,scope='I',lib="kernel32.dll"
|        Write.W32,[Write.W32]:00000000h,scope='E'
|                       |;;
|                       |;; Create the auxilliary LIBCOF library from two COFF modules.
|                       |%test PROGRAM FORMAT=LIBCOF,MODEL=FLAT,WIDTH=32
|                       |      LINK %test.WB.obj, %test.EX.obj
|                       |     ENDPROGRAM %test
|# I0560 Linking COFF module "./t9570.WB.obj".
|# I0563 Accepting link directive '/IMPORT:GetStdHandle'.
|# I0563 Accepting link directive '/IMPORT:WriteFile'.
|# I0563 Accepting link directive '/IMPORT:Beep'.
|# I0560 Linking COFF module "./t9570.EX.obj".
|# I0563 Accepting link directive '/IMPORT:ExitProcess'.
|        **** ListMap "t9570.lib",model=FLAT,groups=0,segments=0,entry=,stack=
|        **** ListGlobals "t9570.lib",Global=0,Public=0,Extern=0,eXport=0,Import=0
|                       |;;
|                       |;; Create the main ELF object module from LIBCOF library.
|                       |%test PROGRAM FORMAT=ELF,MODEL=FLAT,WIDTH=32
|                       |      GLOBAL Write.W32, Beep.W32, Exit.W32
|                       |      LINK %test.lib
|[.data]                ::::Section changed.
|00000000:333262697420~~|Msg:: DB '%^WIDTH[]bit %^MODEL %^FORMAT program "%^OUTFILE".',13,10,0
|                       |   ENDPROGRAM %test
|# I0561 Linking LIBCOF library "./t9570.lib".
|        **** ListMap "t9570.o",model=FLAT,groups=0,segments=10,entry=,stack=
|          [],FA=00000000h,RVA=00000000h,size=00000000h=0,width=0,align=0,purpose=
|          [.symtab],FA=000001D0h,RVA=00000000h,size=00000110h=272,width=0,align=0010h,purpose=SYMBOLS
|          [.rel.text],FA=000002E0h,RVA=00000000h,size=00000038h=56,width=0,align=8,purpose=RELOC
|          [.drectve],FA=00000318h,RVA=00000000h,size=00000064h=100,width=0,align=4,purpose=DRECTVE
|          [.strtab],FA=0000037Ch,RVA=00000000h,size=00000085h=133,width=0,align=1,purpose=STRINGS
|          [.shstrtab],FA=00000401h,RVA=00000000h,size=00000047h=71,width=0,align=1,purpose=STRINGS
|          [.text],FA=00000450h,RVA=00000000h,size=0000006Eh=110,width=32,align=0010h,purpose=CODE
|          [.rodata],FA=000004C0h,RVA=00000000h,size=0000000Bh=11,width=32,align=0010h,purpose=RODATA
|          [.data],FA=000004D0h,RVA=00000000h,size=00000024h=36,width=32,align=0010h,purpose=DATA
|          [.bss],FA=00000500h,RVA=00000000h,size=00000007h=7,width=32,align=0010h,purpose=BSS
|        **** ListGlobals "t9570.o",Global=0,Public=4,Extern=0,eXport=0,Import=4
|        Beep,[Beep]:00000000h,scope='I',lib="kernel32.dll"
|        Beep.W32,[.text]:00000024h,scope='P'
|        Exit.W32,[.text]:00000050h,scope='P'
|        ExitProcess,[ExitProcess]:00000000h,scope='I',lib="kernel32.dll"
|        GetStdHandle,[GetStdHandle]:00000000h,scope='I',lib="kernel32.dll"
|        Msg,[.data]:00000000h,scope='P'
|        Write.W32,[.text]:00000000h,scope='P'
|        WriteFile,[WriteFile]:00000000h,scope='I',lib="kernel32.dll"
</samp></dd></dl>
<dl><dt>Expected messages <q>t9570.out</q></dt><dd><code class='PRE'>
<!--M-->I0180 Assembling source file "t9570.htm".
<!--M-->I0270 Assembling source "t9570".
<!--M-->I0310 Assembling source pass 1.
<!--M-->I0330 Assembling source pass 2 - final.
<!--M-->I0470 Assembling program "t9570.WB". "t9570.htm"{45}
<!--M-->I0510 Assembling program pass 1. "t9570.htm"{45}
<!--M-->I0510 Assembling program pass 2. "t9570.htm"{45}
<!--M-->I0530 Assembling program pass 3 - final. "t9570.htm"{45}
<!--M-->I0660 32bit FLAT COFF file "t9570.WB.obj" created, size=654. "t9570.htm"{84}
<!--M-->I0650 Program "t9570.WB" assembled in 3 passes with errorlevel 0. "t9570.htm"{84}
<!--M-->I0470 Assembling program "t9570.EX". "t9570.htm"{97}
<!--M-->I0510 Assembling program pass 1. "t9570.htm"{97}
<!--M-->I0510 Assembling program pass 2. "t9570.htm"{97}
<!--M-->I0530 Assembling program pass 3 - final. "t9570.htm"{97}
<!--M-->I0660 32bit FLAT COFF file "t9570.EX.obj" created, size=473. "t9570.htm"{111}
<!--M-->I0650 Program "t9570.EX" assembled in 3 passes with errorlevel 0. "t9570.htm"{111}
<!--M-->I0470 Assembling program "t9570". "t9570.htm"{122}
<!--M-->I0510 Assembling program pass 1. "t9570.htm"{122}
<!--M-->I0530 Assembling program pass 2 - final. "t9570.htm"{122}
<!--M-->I0560 Linking COFF module "./t9570.WB.obj". "t9570.htm"{124}
<!--M-->I0563 Accepting link directive '/IMPORT:GetStdHandle'. "t9570.htm"{124}
<!--M-->I0563 Accepting link directive '/IMPORT:WriteFile'. "t9570.htm"{124}
<!--M-->I0563 Accepting link directive '/IMPORT:Beep'. "t9570.htm"{124}
<!--M-->I0560 Linking COFF module "./t9570.EX.obj". "t9570.htm"{124}
<!--M-->I0563 Accepting link directive '/IMPORT:ExitProcess'. "t9570.htm"{124}
<!--M-->I0660 32bit FLAT LIBCOF file "t9570.lib" created, size=1917. "t9570.htm"{124}
<!--M-->I0650 Program "t9570" assembled in 2 passes with errorlevel 0. "t9570.htm"{124}
<!--M-->I0470 Assembling program "t9570". "t9570.htm"{135}
<!--M-->I0510 Assembling program pass 1. "t9570.htm"{135}
<!--M-->I0510 Assembling program pass 2. "t9570.htm"{135}
<!--M-->I0530 Assembling program pass 3 - final. "t9570.htm"{135}
<!--M-->I0561 Linking LIBCOF library "./t9570.lib". "t9570.htm"{140}
<!--M-->I0660 32bit FLAT ELF file "t9570.o" created, size=1268. "t9570.htm"{140}
<!--M-->I0650 Program "t9570" assembled in 3 passes with errorlevel 0. "t9570.htm"{140}
<!--M-->I0750 Source "t9570" (288 lines) assembled in 2 passes with errorlevel 0.
<!--M-->I0860 Listing file "t9570.htm.lst" created, size=9074.
<!--M-->I0990 EuroAssembler terminated with errorlevel 0.
</code></dd></dl>
<dl><dt>Expected output file <q>t9570.
<!--E-->o
</q></dt><dd><pre>
<!--B-->0000: 7F 45 4C 46 01 01 01 00 00 00 00 00 00 00 00 00  &curren;ELF&middot;&middot;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0010: 01 00 03 00 01 00 00 00 00 00 00 00 00 00 00 00  &middot;&deg;&middot;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0020: 38 00 00 00 00 00 00 00 34 00 20 00 00 00 28 00  8&deg;&deg;&deg;&deg;&deg;&deg;&deg;4&deg;&macr;&deg;&deg;&deg;(&deg;
<!--B-->0030: 0A 00 05 00 00 00 00 00 00 00 00 00 00 00 00 00  &not;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0060: 01 00 00 00 02 00 00 00 00 00 00 00 00 00 00 00  &middot;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0070: D0 01 00 00 10 01 00 00 04 00 00 00 09 00 00 00  &curren;&middot;&deg;&deg;&middot;&middot;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;&deg;&deg;
<!--B-->0080: 10 00 00 00 10 00 00 00 09 00 00 00 09 00 00 00  &middot;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;&deg;&deg;
<!--B-->0090: 02 00 00 00 00 00 00 00 E0 02 00 00 38 00 00 00  &middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&curren;&middot;&deg;&deg;8&deg;&deg;&deg;
<!--B-->00A0: 01 00 00 00 06 00 00 00 08 00 00 00 08 00 00 00  &middot;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;&deg;&deg;
<!--B-->00B0: 13 00 00 00 07 00 00 00 00 00 00 00 00 00 00 00  &middot;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->00C0: 18 03 00 00 64 00 00 00 00 00 00 00 00 00 00 00  &middot;&middot;&deg;&deg;d&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->00D0: 04 00 00 00 00 00 00 00 1C 00 00 00 03 00 00 00  &middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;&deg;&deg;
<!--B-->00E0: 00 00 00 00 00 00 00 00 7C 03 00 00 85 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;|&middot;&deg;&deg;&curren;&deg;&deg;&deg;
<!--B-->00F0: 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0100: 24 00 00 00 03 00 00 00 00 00 00 00 00 00 00 00  $&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0110: 01 04 00 00 47 00 00 00 00 00 00 00 00 00 00 00  &middot;&middot;&deg;&deg;G&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0120: 01 00 00 00 00 00 00 00 2E 00 00 00 01 00 00 00  &middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;.&deg;&deg;&deg;&middot;&deg;&deg;&deg;
<!--B-->0130: 06 00 00 00 00 00 00 00 50 04 00 00 6E 00 00 00  &middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;P&middot;&deg;&deg;n&deg;&deg;&deg;
<!--B-->0140: 00 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0150: 34 00 00 00 01 00 00 00 02 00 00 00 00 00 00 00  4&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0160: C0 04 00 00 0B 00 00 00 00 00 00 00 00 00 00 00  &curren;&middot;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0170: 10 00 00 00 00 00 00 00 3C 00 00 00 01 00 00 00  &middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&lt;&deg;&deg;&deg;&middot;&deg;&deg;&deg;
<!--B-->0180: 03 00 00 00 00 00 00 00 D0 04 00 00 24 00 00 00  &middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&curren;&middot;&deg;&deg;$&deg;&deg;&deg;
<!--B-->0190: 00 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->01A0: 42 00 00 00 08 00 00 00 03 00 00 00 00 00 00 00  B&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->01B0: 00 05 00 00 07 00 00 00 00 00 00 00 00 00 00 00  &deg;&middot;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->01C0: 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->01D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->01E0: 01 00 00 00 00 00 00 00 00 00 00 00 04 00 F1 FF  &middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&curren;&curren;
<!--B-->01F0: 0B 00 00 00 00 00 00 00 00 00 00 00 03 00 09 00  &middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&middot;&deg;
<!--B-->0200: 10 00 00 00 00 00 00 00 00 00 00 00 03 00 08 00  &middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&middot;&deg;
<!--B-->0210: 16 00 00 00 00 00 00 00 00 00 00 00 03 00 03 00  &middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&middot;&deg;
<!--B-->0220: 1F 00 00 00 00 00 00 00 00 00 00 00 03 00 07 00  &middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&middot;&deg;
<!--B-->0230: 27 00 00 00 00 00 00 00 00 00 00 00 03 00 04 00  &#039;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&middot;&deg;
<!--B-->0240: 2F 00 00 00 00 00 00 00 00 00 00 00 03 00 01 00  /&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&middot;&deg;
<!--B-->0250: 37 00 00 00 00 00 00 00 00 00 00 00 03 00 06 00  7&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&middot;&deg;
<!--B-->0260: 3D 00 00 00 00 00 00 00 00 00 00 00 10 00 00 00  =&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;
<!--B-->0270: 42 00 00 00 24 00 00 00 00 00 00 00 12 00 06 00  B&deg;&deg;&deg;$&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&middot;&deg;
<!--B-->0280: 4B 00 00 00 50 00 00 00 00 00 00 00 12 00 06 00  K&deg;&deg;&deg;P&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&middot;&deg;
<!--B-->0290: 54 00 00 00 00 00 00 00 00 00 00 00 10 00 00 00  T&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;
<!--B-->02A0: 60 00 00 00 00 00 00 00 00 00 00 00 10 00 00 00  `&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;
<!--B-->02B0: 6D 00 00 00 00 00 00 00 24 00 00 00 11 00 08 00  m&deg;&deg;&deg;&deg;&deg;&deg;&deg;$&deg;&deg;&deg;&middot;&deg;&middot;&deg;
<!--B-->02C0: 71 00 00 00 00 00 00 00 00 00 00 00 12 00 06 00  q&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&middot;&deg;
<!--B-->02D0: 7B 00 00 00 00 00 00 00 00 00 00 00 10 00 00 00  {&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;
<!--B-->02E0: 03 00 00 00 02 0D 00 00 1E 00 00 00 02 10 00 00  &middot;&deg;&deg;&deg;&middot;&middot;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&middot;&deg;&deg;
<!--B-->02F0: 25 00 00 00 01 05 00 00 39 00 00 00 02 09 00 00  %&deg;&deg;&deg;&middot;&middot;&deg;&deg;9&deg;&deg;&deg;&middot;&middot;&deg;&deg;
<!--B-->0300: 48 00 00 00 02 09 00 00 51 00 00 00 01 02 00 00  H&deg;&deg;&deg;&middot;&middot;&deg;&deg;Q&deg;&deg;&deg;&middot;&middot;&deg;&deg;
<!--B-->0310: 6A 00 00 00 02 0C 00 00 0D 00 00 00 48 00 00 00  j&deg;&deg;&deg;&middot;&middot;&deg;&deg;&middot;&deg;&deg;&deg;H&deg;&deg;&deg;
<!--B-->0320: EA 00 00 00 45 75 72 6F 41 73 73 65 6D 62 6C 65  &curren;&deg;&deg;&deg;EuroAssemble
<!--B-->0330: 72 00 00 00 20 2F 49 4D 50 4F 52 54 3A 42 65 65  r&deg;&deg;&deg;&macr;/IMPORT:Bee
<!--B-->0340: 70 20 2F 49 4D 50 4F 52 54 3A 47 65 74 53 74 64  p&macr;/IMPORT:GetStd
<!--B-->0350: 48 61 6E 64 6C 65 20 2F 49 4D 50 4F 52 54 3A 57  Handle&macr;/IMPORT:W
<!--B-->0360: 72 69 74 65 46 69 6C 65 20 2F 49 4D 50 4F 52 54  riteFile&macr;/IMPORT
<!--B-->0370: 3A 45 78 69 74 50 72 6F 63 65 73 73 00 74 39 35  :ExitProcess&deg;t95
<!--B-->0380: 37 30 2E 68 74 6D 00 2E 62 73 73 00 2E 64 61 74  70.htm&deg;.bss&deg;.dat
<!--B-->0390: 61 00 2E 64 72 65 63 74 76 65 00 2E 72 6F 64 61  a&deg;.drectve&deg;.roda
<!--B-->03A0: 74 61 00 2E 73 74 72 74 61 62 00 2E 73 79 6D 74  ta&deg;.strtab&deg;.symt
<!--B-->03B0: 61 62 00 2E 74 65 78 74 00 42 65 65 70 00 42 65  ab&deg;.text&deg;Beep&deg;Be
<!--B-->03C0: 65 70 2E 57 33 32 00 45 78 69 74 2E 57 33 32 00  ep.W32&deg;Exit.W32&deg;
<!--B-->03D0: 45 78 69 74 50 72 6F 63 65 73 73 00 47 65 74 53  ExitProcess&deg;GetS
<!--B-->03E0: 74 64 48 61 6E 64 6C 65 00 4D 73 67 00 57 72 69  tdHandle&deg;Msg&deg;Wri
<!--B-->03F0: 74 65 2E 57 33 32 00 57 72 69 74 65 46 69 6C 65  te.W32&deg;WriteFile
<!--B-->0400: 00 00 2E 73 79 6D 74 61 62 00 2E 72 65 6C 2E 74  &deg;&deg;.symtab&deg;.rel.t
<!--B-->0410: 65 78 74 00 2E 64 72 65 63 74 76 65 00 2E 73 74  ext&deg;.drectve&deg;.st
<!--B-->0420: 72 74 61 62 00 2E 73 68 73 74 72 74 61 62 00 2E  rtab&deg;.shstrtab&deg;.
<!--B-->0430: 74 65 78 74 00 2E 72 6F 64 61 74 61 00 2E 64 61  text&deg;.rodata&deg;.da
<!--B-->0440: 74 61 00 2E 62 73 73 00 00 00 00 00 00 00 00 00  ta&deg;.bss&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0450: 6A F5 E8 FC FF FF FF 89 C3 89 F7 31 C9 31 C0 F7  j&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;1&curren;1&curren;&curren;
<!--B-->0460: D1 F2 AE F7 D1 52 89 E2 50 52 51 56 53 E8 FC FF  &curren;&curren;&curren;&curren;&curren;R&curren;&curren;PRQVS&curren;&curren;&curren;
<!--B-->0470: FF FF 5A C3 BE 00 00 00 00 E8 D2 FF FF FF 68 C8  &curren;&curren;Z&curren;&curren;&deg;&deg;&deg;&deg;&curren;&curren;&curren;&curren;&curren;h&curren;
<!--B-->0480: 00 00 00 68 B8 01 00 00 E8 FC FF FF FF 68 90 01  &deg;&deg;&deg;h&curren;&middot;&deg;&deg;&curren;&curren;&curren;&curren;&curren;h&curren;&middot;
<!--B-->0490: 00 00 68 4B 02 00 00 E8 FC FF FF FF C3 90 90 90  &deg;&deg;hK&middot;&deg;&deg;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;
<!--B-->04A0: BE 00 00 00 00 C7 06 45 6E 64 00 C7 46 03 0D 0A  &curren;&deg;&deg;&deg;&deg;&curren;&middot;End&deg;&curren;F&middot;&middot;&not;
<!--B-->04B0: 00 00 E8 99 FF FF FF 6A 00 E9 FC FF FF FF 00 00  &deg;&deg;&curren;&curren;&curren;&curren;&curren;j&deg;&curren;&curren;&curren;&curren;&curren;&deg;&deg;
<!--B-->04C0: 42 65 65 70 69 6E 67 2E 2E 2E 00 00 00 00 00 00  Beeping...&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->04D0: 33 32 62 69 74 20 46 4C 41 54 20 45 4C 46 20 70  32bit&macr;FLAT&macr;ELF&macr;p
<!--B-->04E0: 72 6F 67 72 61 6D 20 22 74 39 35 37 30 2E 6F 22  rogram&macr;&quot;t9570.o&quot;
<!--B-->04F0: 2E 0D 0A 00                                      .&middot;&not;&deg;
</pre></dd></dl>
<!--TAILMENU-->
<!--Contents below the marker {!==TAILMENU==} was generated by "generate.php".-->
<br class='CLEAR'/><a id='bottom' href='#top'>&#x25B2;Back to the top&#x25B2;</a>
</body></html>