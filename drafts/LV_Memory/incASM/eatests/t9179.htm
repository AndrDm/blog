<!doctype html><html lang='en'><head>
<meta http-equiv='Content-Type' content='text/html; charset=utf-8'/>
<meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=2.0, user-scalable=yes'>
<meta name='robots' content='ALL,FOLLOW'/>
<meta name='description' content='t9179.htm test file'/>
<meta name='version' content='20250318'/>
<meta name='author' content='Pavel vitsoft Šrubař'/>
<link rel='stylesheet' href='../euroasm.css' type='text/css'/>
<link rel='shortcut icon' href='../favicon.ico'/>
<title>t9179.htm test file</title>
</head>
<body class='EATESTS' id='top'><div class='HEADMENU'><table>
<tr><td rowspan='2' title='&euro;ASM - assembler and linker'><img src='../favicon.ico' alt='EuroAssembler' />
<td><a href='../index.htm' title='Alphabetical index of all &euro;ASM elements, directives and instructions'>Index</a></td>
<td><a href='../eadoc/' class='EADOC' title='Documentation of EuroAssembler'>Manual</a></td>
<td><a href='https://euroassembler.eu/download/' title='History &amp; download of the latest and previous versions'>Download</a></td>
<td><a href='../easource/' class='EASOURCE' title='Source files of EuroAssembler itself'>Source</a></td>
<td><a href='../maclib/' class='MACLIB' title='Macro libraries shipped with &euro;ASM'>Macros</a></td>
<td rowspan='2' title='Find the searched token in any text file on this site'>
<form method='post' action='../search.php' enctype='multipart/form-data' accept-charset='utf-8'>
<input type='text' id='q' placeholder='Searched word(s)' name='q' value=''/>
<br/><label title='Check the box to find the expression even if it is surrounded by other letters | digits.'>
<input type='checkbox' name='EW'/><small>Embedded word</small></label>
<br/><label title='Check the box for case-insensitive search.'>
<input type='checkbox' name='CI'/><small>Case ins.</small></label>
<input type='submit' title='Search for the specified word|expression in all site files.' name='find' value='Search'/>
</form></td></tr><tr>
<td><a href='../sitemap.htm' title='List of directories and files on this site'>Sitemap</a></td>
<td><a href='../eadoc/links.htm' class='EADOC' title='References and external links to resources used in EuroAssembler developement'>Links</a></td>
<td><a href='https://euroassembler.eu/forum/' title='Discussion forum concerning EuroAssembler'>Forum</a></td>
<td><a href='../eatests/' class='EATESTS' title='Program snippets for testing the function of &euro;ASM'>Tests</a></td>
<td><a href='../objlib/' class='OBJLIB' title='Skeletons and sample objects and projects shipped with &euro;ASM'>Projects</a></td>
</tr></table></div>
<!--Contents above the marker {!==/HEADMENU==} was generated by "generate.php".-->
<!--/HEADMENU-->
<h1 id='TestTitle'>Test <a class='EXT' href='t9179.htm'>t9179</a>:
<!--T-->LIBCOF library for 64bit Windows links ELF object modules
</h1><button onclick='window.location="../eatests/manager.php?test=t9179";'>Manage t9179</button>
<br class='CLEAR'/>
<dl><dt>Source &amp; expected listing <q>t9179.htm.lst</q></dt><dd><samp>
|                          |  EUROASM AUTOSEGMENT=ON,CPU=X64,DUMPWIDTH=28
|7439313739                |%test %SET t9179
|                          |;;
|                          |;; Create the first auxilliary ELF module.
|                          |%test.WB PROGRAM FORMAT=ELF,MODEL=FLAT,WIDTH=64
|[.text]                   ::::Section changed.
|00000000:                 |Write.W64:: PROC           ; Write ASCIIZ string DS:RSI in 64bit Windows.
|                          |  IMPORT GetStdHandle:,WriteFile: ; Declare imported Windows kernel functions.
|00000000:4889E5           |  MOV RBP,RSP              ; Save (perhaps unaligned) stack pointer.
|00000003:4883E4F0         |  AND RSP,-16              ; OWORD alignment downwards.
|00000007:4883EC30         |  SUB RSP,5*8+8            ; Allocate shadow space on stack for max 5 arguments.
|0000000B:48C7C1F5FFFFFF   |  MOV RCX,-11              ; %1 Identifier of standard output STD_OUTPUT_HANDLE.
|00000012:E8(00000000)     |  CALL GetStdHandle:       ; Fastcall the imported Windows function with 1 argument.
|00000017:4889C3           |  MOV RBX,RAX              ; Temporary save the returned StdOutput handle to RBX.
|0000001A:4889F7           |  MOV RDI,RSI              ; Use RDI to find the end of input string.
|0000001D:31C9             |  XOR ECX,ECX              ; Clear RCX to keep the size of input string.
|0000001F:31C0             |  XOR EAX,EAX              ; Clear AL, the searched terminating character.
|00000021:48F7D1           |  NOT RCX                  ; Assume unlimited possible string size.
|00000024:F2AE             |  REPNE SCASB              ; Find the zero terminator.
|00000026:48F7D1           |  NOT RCX                  ; Get string size to RCX.
|00000029:4889442420       |  MOV [RSP+20h],RAX        ; %5 Overlapped I/O is not used.
|0000002E:4C8D4C2418       |  LEA R9,[RSP+18h]         ; %4 Local variable for the number of written bytes uses shadowed R9.
|00000033:4989C8           |  MOV R8,RCX               ; %3 String size.
|00000036:4889F2           |  MOV RDX,RSI              ; %2 String address.
|00000039:4889D9           |  MOV RCX,RBX              ; %1 Standard output file handle.
|0000003C:E8(00000000)     |  CALL WriteFile:          ; Fastcall the imported function with 5 arguments.
|00000041:4889EC           |  MOV RSP,RBP              ; Restore the stack.
|00000044:C3               |  RET                      ; Return to caller.
|00000045:                 | ENDPROC Write.W64:
|                          |;;
|00000045:                 |Beep.W64:: PROC            ; Play a sound in 64bit Windows.
|00000045:488D35(00000000) |  LEA RSI,[=B"Beeping..."] ; Define a literal string in [.rodata].
|0000004C:E8AFFFFFFF       |  CALL Write.W64::         ; Display the notification "Beeping...".
|                          |  IMPORT Beep:             ; Declare imported Windows kernel function.
|00000051:4889E5           |  MOV RBP,RSP              ; Save (perhaps unaligned) stack pointer.
|00000054:4883E4F0         |  AND RSP,-16              ; OWORD alignment downwards.
|00000058:4883EC20         |  SUB RSP,4*8              ; Allocate shadow space on stack.
|0000005C:BAC8000000       |  MOV RDX,200              ; %2 Sound duration [ms].
|00000061:B9B8010000       |  MOV RCX,440              ; %1 Sound frequency [Hz].
|00000066:E8(00000000)     |  CALL Beep:               ; Fastcall the imported function with 2 arguments.
|0000006B:BA90010000       |  MOV RDX,400              ; %2 Sound duration [ms].
|00000070:B94B020000       |  MOV RCX,587              ; %1 Sound frequency [Hz].
|00000075:E8(00000000)     |  CALL Beep:               ; Fastcall the imported function with 2 arguments.
|0000007A:4889EC           |  MOV RSP,RBP              ; Restore the stack.
|0000007D:C3               |  RET                      ; Return to caller.
|0000007E:                 | ENDPROC Beep.W64:
|[@LT1]                    ====ListLiterals in section [@LT1].
|00000000:42656570696E672E~=B"Beeping..."
|                          |ENDPROGRAM %test.WB
|        **** ListMap "t9179.WB.o",model=FLAT,groups=0,segments=8,entry=,stack=
|          [],FA=00000000h,RVA=00000000h,size=00000000h=0,width=0,align=0,purpose=
|          [.symtab],FA=00000240h,RVA=00000000h,size=00000120h=288,width=0,align=8,purpose=SYMBOLS
|          [.rela.text],FA=00000360h,RVA=00000000h,size=00000078h=120,width=0,align=8,purpose=RELOC
|          [.drectve],FA=000003D8h,RVA=00000000h,size=00000054h=84,width=0,align=4,purpose=DRECTVE
|          [.strtab],FA=0000042Ch,RVA=00000000h,size=00000061h=97,width=0,align=1,purpose=STRINGS
|          [.shstrtab],FA=0000048Dh,RVA=00000000h,size=0000003Dh=61,width=0,align=1,purpose=STRINGS
|          [.text],FA=000004D0h,RVA=00000000h,size=0000007Eh=126,width=64,align=0010h,purpose=CODE
|          [.rodata],FA=00000550h,RVA=00000000h,size=0000000Bh=11,width=64,align=0010h,purpose=RODATA+LITERAL
|        **** ListGlobals "t9179.WB.o",Global=0,Public=2,Extern=0,eXport=0,Import=3
|        Beep,[Beep]:00000000h,scope='I',lib="kernel32.dll"
|        Beep.W64,[.text]:00000045h,scope='P'
|        GetStdHandle,[GetStdHandle]:00000000h,scope='I',lib="kernel32.dll"
|        Write.W64,[.text]:00000000h,scope='P'
|        WriteFile,[WriteFile]:00000000h,scope='I',lib="kernel32.dll"
|                          |;;
|                          |;; Create the second auxilliary ELF module.
|                          |%test.EX PROGRAM FORMAT=ELF,MODEL=FLAT,WIDTH=64
|[.text]                   ::::Section changed.
|00000000:                 |Exit.W64:: PROC            ; Terminate program in 64bit Windows.
|00000000:488D35(00000000) |  LEA RSI,[.M:]            ; Address in segment [.bss] for the message.
|00000007:C706456E6400     |  MOVD [RSI+0],"End"       ; Dynamically define the message "End".
|0000000D:C746030D0A0000   |  MOVD [RSI+3],0x0A0D      ; CR+LF.
|00000014:E8(00000000)     |  CALL Write.W64::         ; Display the notification "End".
|                          |  IMPORT ExitProcess       ; Declare imported Windows kernel function.
|00000019:4883E4F0         |  AND RSP,-16              ; OWORD alignment downwards.
|0000001D:4883EC20         |  SUB RSP,4*8              ; Allocate shadow space on stack.
|00000021:31C9             |  XOR ECX,ECX              ; %1 Terminate with errorlevel 0.
|00000023:E9(00000000)     |  JMP ExitProcess:         ; Use imported function with 1 argument. No return.
|[.bss]                    ::::Section changed.
|00000000:..............   |.M: DB 7*BYTE              ; Reserve space for ASCIIZ string "End" in segment [.bss].
|[.text]                   ::::Section changed.
|00000028:                 | ENDPROC Exit.W64:
|                          |ENDPROGRAM %test.EX
|        **** ListMap "t9179.EX.o",model=FLAT,groups=0,segments=8,entry=,stack=
|          [],FA=00000000h,RVA=00000000h,size=00000000h=0,width=0,align=0,purpose=
|          [.symtab],FA=00000240h,RVA=00000000h,size=000000F0h=240,width=0,align=8,purpose=SYMBOLS
|          [.rela.text],FA=00000330h,RVA=00000000h,size=00000048h=72,width=0,align=8,purpose=RELOC
|          [.drectve],FA=00000378h,RVA=00000000h,size=00000034h=52,width=0,align=4,purpose=DRECTVE
|          [.strtab],FA=000003ACh,RVA=00000000h,size=0000004Eh=78,width=0,align=1,purpose=STRINGS
|          [.shstrtab],FA=000003FAh,RVA=00000000h,size=0000003Ah=58,width=0,align=1,purpose=STRINGS
|          [.text],FA=00000440h,RVA=00000000h,size=00000028h=40,width=64,align=0010h,purpose=CODE
|          [.bss],FA=00000470h,RVA=00000000h,size=00000007h=7,width=64,align=0010h,purpose=BSS
|        **** ListGlobals "t9179.EX.o",Global=0,Public=1,Extern=1,eXport=0,Import=1
|        Exit.W64,[.text]:00000000h,scope='P'
|        ExitProcess,[ExitProcess]:00000000h,scope='I',lib="kernel32.dll"
|        Write.W64,[Write.W64]:00000000h,scope='E'
|                          |;;
|                          |;; Create the main LIBCOF library.
|                          |%test PROGRAM FORMAT=LIBCOF,MODEL=FLAT,WIDTH=64
|                          |   LINK %test.WB.o, %test.EX.o
|                          |ENDPROGRAM %test
|# I0560 Linking ELF module "./t9179.WB.o".
|# I0563 Accepting link directive '/IMPORT:GetStdHandle'.
|# I0563 Accepting link directive '/IMPORT:WriteFile'.
|# I0563 Accepting link directive '/IMPORT:Beep'.
|# I0560 Linking ELF module "./t9179.EX.o".
|# I0563 Accepting link directive '/IMPORT:ExitProcess'.
|        **** ListMap "t9179.lib",model=FLAT,groups=0,segments=0,entry=,stack=
|        **** ListGlobals "t9179.lib",Global=0,Public=0,Extern=0,eXport=0,Import=0
</samp></dd></dl>
<dl><dt>Expected messages <q>t9179.out</q></dt><dd><code class='PRE'>
<!--M-->I0180 Assembling source file "t9179.htm".
<!--M-->I0270 Assembling source "t9179".
<!--M-->I0310 Assembling source pass 1.
<!--M-->I0330 Assembling source pass 2 - final.
<!--M-->I0470 Assembling program "t9179.WB". "t9179.htm"{45}
<!--M-->I0510 Assembling program pass 1. "t9179.htm"{45}
<!--M-->I0510 Assembling program pass 2. "t9179.htm"{45}
<!--M-->I0530 Assembling program pass 3 - final. "t9179.htm"{45}
<!--M-->I0660 64bit FLAT ELF file "t9179.WB.o" created, size=1371. "t9179.htm"{89}
<!--M-->I0650 Program "t9179.WB" assembled in 3 passes with errorlevel 0. "t9179.htm"{89}
<!--M-->I0470 Assembling program "t9179.EX". "t9179.htm"{107}
<!--M-->I0510 Assembling program pass 1. "t9179.htm"{107}
<!--M-->I0510 Assembling program pass 2. "t9179.htm"{107}
<!--M-->I0530 Assembling program pass 3 - final. "t9179.htm"{107}
<!--M-->I0660 64bit FLAT ELF file "t9179.EX.o" created, size=1128. "t9179.htm"{123}
<!--M-->I0650 Program "t9179.EX" assembled in 3 passes with errorlevel 0. "t9179.htm"{123}
<!--M-->I0470 Assembling program "t9179". "t9179.htm"{139}
<!--M-->I0510 Assembling program pass 1. "t9179.htm"{139}
<!--M-->I0530 Assembling program pass 2 - final. "t9179.htm"{139}
<!--M-->I0560 Linking ELF module "./t9179.WB.o". "t9179.htm"{141}
<!--M-->I0563 Accepting link directive '/IMPORT:GetStdHandle'. "t9179.htm"{141}
<!--M-->I0563 Accepting link directive '/IMPORT:WriteFile'. "t9179.htm"{141}
<!--M-->I0563 Accepting link directive '/IMPORT:Beep'. "t9179.htm"{141}
<!--M-->I0560 Linking ELF module "./t9179.EX.o". "t9179.htm"{141}
<!--M-->I0563 Accepting link directive '/IMPORT:ExitProcess'. "t9179.htm"{141}
<!--M-->I0660 64bit FLAT LIBCOF file "t9179.lib" created, size=1896. "t9179.htm"{141}
<!--M-->I0650 Program "t9179" assembled in 2 passes with errorlevel 0. "t9179.htm"{141}
<!--M-->I0750 Source "t9179" (308 lines) assembled in 2 passes with errorlevel 0.
<!--M-->I0860 Listing file "t9179.htm.lst" created, size=8713.
<!--M-->I0990 EuroAssembler terminated with errorlevel 0.
</code></dd></dl>
<dl><dt>Expected output file <q>t9179.
<!--E-->lib
</q></dt><dd><pre>
<!--B-->0000: 21 3C 61 72 63 68 3E 0A 2F 20 20 20 20 20 20 20  !&lt;arch&gt;&not;/&macr;&macr;&macr;&macr;&macr;&macr;&macr;
<!--B-->0010: 20 20 20 20 20 20 20 20 30 20 20 20 20 20 20 20  &macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;&macr;&macr;
<!--B-->0020: 20 20 20 20 30 20 20 20 20 20 30 20 20 20 20 20  &macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;
<!--B-->0030: 31 30 30 36 36 36 20 20 31 34 32 20 20 20 20 20  100666&macr;&macr;142&macr;&macr;&macr;&macr;&macr;
<!--B-->0040: 20 20 60 0A 00 00 00 0B 00 00 01 E0 00 00 02 42  &macr;&macr;`&not;&deg;&deg;&deg;&middot;&deg;&deg;&middot;&curren;&deg;&deg;&middot;B
<!--B-->0050: 00 00 02 AC 00 00 03 14 00 00 03 14 00 00 03 14  &deg;&deg;&middot;&curren;&deg;&deg;&middot;&middot;&deg;&deg;&middot;&middot;&deg;&deg;&middot;&middot;
<!--B-->0060: 00 00 03 14 00 00 05 5C 00 00 05 C6 00 00 05 C6  &deg;&deg;&middot;&middot;&deg;&deg;&middot;\&deg;&deg;&middot;&curren;&deg;&deg;&middot;&curren;
<!--B-->0070: 00 00 05 C6 42 65 65 70 00 47 65 74 53 74 64 48  &deg;&deg;&middot;&curren;Beep&deg;GetStdH
<!--B-->0080: 61 6E 64 6C 65 00 57 72 69 74 65 46 69 6C 65 00  andle&deg;WriteFile&deg;
<!--B-->0090: 2E 72 6F 64 61 74 61 00 2E 74 65 78 74 00 42 65  .rodata&deg;.text&deg;Be
<!--B-->00A0: 65 70 2E 57 36 34 00 57 72 69 74 65 2E 57 36 34  ep.W64&deg;Write.W64
<!--B-->00B0: 00 45 78 69 74 50 72 6F 63 65 73 73 00 2E 62 73  &deg;ExitProcess&deg;.bs
<!--B-->00C0: 73 00 2E 74 65 78 74 00 45 78 69 74 2E 57 36 34  s&deg;.text&deg;Exit.W64
<!--B-->00D0: 00 0A 2F 20 20 20 20 20 20 20 20 20 20 20 20 20  &deg;&not;/&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;
<!--B-->00E0: 20 20 30 20 20 20 20 20 20 20 20 20 20 20 30 20  &macr;&macr;0&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;0&macr;
<!--B-->00F0: 20 20 20 20 30 20 20 20 20 20 31 30 30 36 36 36  &macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;100666
<!--B-->0100: 20 20 31 34 38 20 20 20 20 20 20 20 60 0A 06 00  &macr;&macr;148&macr;&macr;&macr;&macr;&macr;&macr;&macr;`&not;&middot;&deg;
<!--B-->0110: 00 00 E0 01 00 00 42 02 00 00 AC 02 00 00 14 03  &deg;&deg;&curren;&middot;&deg;&deg;B&middot;&deg;&deg;&curren;&middot;&deg;&deg;&middot;&middot;
<!--B-->0120: 00 00 5C 05 00 00 C6 05 00 00 0B 00 00 00 06 00  &deg;&deg;\&middot;&deg;&deg;&curren;&middot;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;
<!--B-->0130: 04 00 04 00 06 00 01 00 04 00 06 00 05 00 02 00  &middot;&deg;&middot;&deg;&middot;&deg;&middot;&deg;&middot;&deg;&middot;&deg;&middot;&deg;&middot;&deg;
<!--B-->0140: 04 00 03 00 2E 62 73 73 00 2E 72 6F 64 61 74 61  &middot;&deg;&middot;&deg;.bss&deg;.rodata
<!--B-->0150: 00 2E 74 65 78 74 00 2E 74 65 78 74 00 42 65 65  &deg;.text&deg;.text&deg;Bee
<!--B-->0160: 70 00 42 65 65 70 2E 57 36 34 00 45 78 69 74 2E  p&deg;Beep.W64&deg;Exit.
<!--B-->0170: 57 36 34 00 45 78 69 74 50 72 6F 63 65 73 73 00  W64&deg;ExitProcess&deg;
<!--B-->0180: 47 65 74 53 74 64 48 61 6E 64 6C 65 00 57 72 69  GetStdHandle&deg;Wri
<!--B-->0190: 74 65 2E 57 36 34 00 57 72 69 74 65 46 69 6C 65  te.W64&deg;WriteFile
<!--B-->01A0: 00 0A 2F 2F 20 20 20 20 20 20 20 20 20 20 20 20  &deg;&not;//&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;
<!--B-->01B0: 20 20 30 20 20 20 20 20 20 20 20 20 20 20 30 20  &macr;&macr;0&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;0&macr;
<!--B-->01C0: 20 20 20 20 30 20 20 20 20 20 31 30 30 36 36 36  &macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;100666
<!--B-->01D0: 20 20 32 20 20 20 20 20 20 20 20 20 60 0A 00 0A  &macr;&macr;2&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;`&not;&deg;&not;
<!--B-->01E0: 42 65 65 70 2F 20 20 20 20 20 20 20 20 20 20 20  Beep/&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;
<!--B-->01F0: 30 20 20 20 20 20 20 20 20 20 20 20 30 20 20 20  0&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;0&macr;&macr;&macr;
<!--B-->0200: 20 20 30 20 20 20 20 20 31 30 30 36 36 36 20 20  &macr;&macr;0&macr;&macr;&macr;&macr;&macr;100666&macr;&macr;
<!--B-->0210: 33 38 20 20 20 20 20 20 20 20 60 0A 00 00 FF FF  38&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;`&not;&deg;&deg;&curren;&curren;
<!--B-->0220: 00 00 64 86 00 00 00 00 12 00 00 00 00 00 04 00  &deg;&deg;d&curren;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&middot;&deg;
<!--B-->0230: 42 65 65 70 00 6B 65 72 6E 65 6C 33 32 2E 64 6C  Beep&deg;kernel32.dl
<!--B-->0240: 6C 00 47 65 74 53 74 64 48 61 6E 64 6C 65 2F 20  l&deg;GetStdHandle/&macr;
<!--B-->0250: 20 20 30 20 20 20 20 20 20 20 20 20 20 20 30 20  &macr;&macr;0&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;0&macr;
<!--B-->0260: 20 20 20 20 30 20 20 20 20 20 31 30 30 36 36 36  &macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;100666
<!--B-->0270: 20 20 34 36 20 20 20 20 20 20 20 20 60 0A 00 00  &macr;&macr;46&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;`&not;&deg;&deg;
<!--B-->0280: FF FF 00 00 64 86 00 00 00 00 1A 00 00 00 00 00  &curren;&curren;&deg;&deg;d&curren;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;
<!--B-->0290: 04 00 47 65 74 53 74 64 48 61 6E 64 6C 65 00 6B  &middot;&deg;GetStdHandle&deg;k
<!--B-->02A0: 65 72 6E 65 6C 33 32 2E 64 6C 6C 00 57 72 69 74  ernel32.dll&deg;Writ
<!--B-->02B0: 65 46 69 6C 65 2F 20 20 20 20 20 20 30 20 20 20  eFile/&macr;&macr;&macr;&macr;&macr;&macr;0&macr;&macr;&macr;
<!--B-->02C0: 20 20 20 20 20 20 20 20 30 20 20 20 20 20 30 20  &macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;0&macr;
<!--B-->02D0: 20 20 20 20 31 30 30 36 36 36 20 20 34 33 20 20  &macr;&macr;&macr;&macr;100666&macr;&macr;43&macr;&macr;
<!--B-->02E0: 20 20 20 20 20 20 60 0A 00 00 FF FF 00 00 64 86  &macr;&macr;&macr;&macr;&macr;&macr;`&not;&deg;&deg;&curren;&curren;&deg;&deg;d&curren;
<!--B-->02F0: 00 00 00 00 17 00 00 00 00 00 04 00 57 72 69 74  &deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&middot;&deg;Writ
<!--B-->0300: 65 46 69 6C 65 00 6B 65 72 6E 65 6C 33 32 2E 64  eFile&deg;kernel32.d
<!--B-->0310: 6C 6C 00 10 74 39 31 37 39 2E 57 42 2F 20 20 20  ll&deg;&middot;t9179.WB/&macr;&macr;&macr;
<!--B-->0320: 20 20 20 20 30 20 20 20 20 20 20 20 20 20 20 20  &macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;
<!--B-->0330: 30 20 20 20 20 20 30 20 20 20 20 20 31 30 30 36  0&macr;&macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;1006
<!--B-->0340: 36 36 20 20 35 32 33 20 20 20 20 20 20 20 60 0A  66&macr;&macr;523&macr;&macr;&macr;&macr;&macr;&macr;&macr;`&not;
<!--B-->0350: 64 86 02 00 00 00 00 00 20 01 00 00 0B 00 00 00  d&curren;&middot;&deg;&deg;&deg;&deg;&deg;&macr;&middot;&deg;&deg;&middot;&deg;&deg;&deg;
<!--B-->0360: 00 00 20 00 2E 74 65 78 74 00 00 00 00 00 00 00  &deg;&deg;&macr;&deg;.text&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0370: 00 00 00 00 7E 00 00 00 64 00 00 00 E2 00 00 00  &deg;&deg;&deg;&deg;~&deg;&deg;&deg;d&deg;&deg;&deg;&curren;&deg;&deg;&deg;
<!--B-->0380: 00 00 00 00 05 00 00 00 20 00 50 60 2E 72 6F 64  &deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&macr;&deg;P`.rod
<!--B-->0390: 61 74 61 00 00 00 00 00 00 00 00 00 0B 00 00 00  ata&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;
<!--B-->03A0: 14 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &middot;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->03B0: 40 00 50 40 48 89 E5 48 83 E4 F0 48 83 EC 30 48  @&deg;P@H&curren;&curren;H&curren;&curren;&curren;H&curren;&curren;0H
<!--B-->03C0: C7 C1 F5 FF FF FF E8 00 00 00 00 48 89 C3 48 89  &curren;&curren;&curren;&curren;&curren;&curren;&curren;&deg;&deg;&deg;&deg;H&curren;&curren;H&curren;
<!--B-->03D0: F7 31 C9 31 C0 48 F7 D1 F2 AE 48 F7 D1 48 89 44  &curren;1&curren;1&curren;H&curren;&curren;&curren;&curren;H&curren;&curren;H&curren;D
<!--B-->03E0: 24 20 4C 8D 4C 24 18 49 89 C8 48 89 F2 48 89 D9  $&macr;L&curren;L$&middot;I&curren;&curren;H&curren;&curren;H&curren;&curren;
<!--B-->03F0: E8 00 00 00 00 48 89 EC C3 48 8D 35 00 00 00 00  &curren;&deg;&deg;&deg;&deg;H&curren;&curren;&curren;H&curren;5&deg;&deg;&deg;&deg;
<!--B-->0400: E8 AF FF FF FF 48 89 E5 48 83 E4 F0 48 83 EC 20  &curren;&curren;&curren;&curren;&curren;H&curren;&curren;H&curren;&curren;&curren;H&curren;&curren;&macr;
<!--B-->0410: BA C8 00 00 00 B9 B8 01 00 00 E8 00 00 00 00 BA  &curren;&curren;&deg;&deg;&deg;&curren;&curren;&middot;&deg;&deg;&curren;&deg;&deg;&deg;&deg;&curren;
<!--B-->0420: 90 01 00 00 B9 4B 02 00 00 E8 00 00 00 00 48 89  &curren;&middot;&deg;&deg;&curren;K&middot;&deg;&deg;&curren;&deg;&deg;&deg;&deg;H&curren;
<!--B-->0430: EC C3 13 00 00 00 08 00 00 00 04 00 3D 00 00 00  &curren;&curren;&middot;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;=&deg;&deg;&deg;
<!--B-->0440: 0A 00 00 00 04 00 48 00 00 00 02 00 00 00 04 00  &not;&deg;&deg;&deg;&middot;&deg;H&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;
<!--B-->0450: 67 00 00 00 06 00 00 00 04 00 76 00 00 00 06 00  g&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;v&deg;&deg;&deg;&middot;&deg;
<!--B-->0460: 00 00 04 00 42 65 65 70 69 6E 67 2E 2E 2E 00 00  &deg;&deg;&middot;&deg;Beeping...&deg;&deg;
<!--B-->0470: 2E 66 69 6C 65 00 00 00 00 00 00 00 FE FF 00 00  .file&deg;&deg;&deg;&deg;&deg;&deg;&deg;&curren;&curren;&deg;&deg;
<!--B-->0480: 67 01 74 39 31 37 39 2E 68 74 6D 00 00 00 00 00  g&middot;t9179.htm&deg;&deg;&deg;&deg;&deg;
<!--B-->0490: 00 00 00 00 2E 72 6F 64 61 74 61 00 00 00 00 00  &deg;&deg;&deg;&deg;.rodata&deg;&deg;&deg;&deg;&deg;
<!--B-->04A0: 02 00 00 00 03 01 0B 00 00 00 00 00 00 00 00 00  &middot;&deg;&deg;&deg;&middot;&middot;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->04B0: 00 00 00 00 00 00 00 00 2E 74 65 78 74 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;.text&deg;&deg;&deg;
<!--B-->04C0: 00 00 00 00 01 00 00 00 03 01 7E 00 00 00 05 00  &deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&middot;~&deg;&deg;&deg;&middot;&deg;
<!--B-->04D0: 00 00 00 00 00 00 00 00 00 00 00 00 42 65 65 70  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;Beep
<!--B-->04E0: 00 00 00 00 00 00 00 00 00 00 01 01 02 00 42 65  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&middot;&middot;&deg;Be
<!--B-->04F0: 65 70 2E 57 36 34 45 00 00 00 01 00 01 02 02 00  ep.W64E&deg;&deg;&deg;&middot;&deg;&middot;&middot;&middot;&deg;
<!--B-->0500: 00 00 00 00 04 00 00 00 00 00 00 00 00 00 01 01  &deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&middot;
<!--B-->0510: 02 00 00 00 00 00 11 00 00 00 00 00 00 00 01 00  &middot;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;
<!--B-->0520: 01 02 02 00 00 00 00 00 1B 00 00 00 00 00 00 00  &middot;&middot;&middot;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0530: 00 00 01 01 02 00 25 00 00 00 47 65 74 53 74 64  &deg;&deg;&middot;&middot;&middot;&deg;%&deg;&deg;&deg;GetStd
<!--B-->0540: 48 61 6E 64 6C 65 00 57 72 69 74 65 2E 57 36 34  Handle&deg;Write.W64
<!--B-->0550: 00 57 72 69 74 65 46 69 6C 65 00 10 45 78 69 74  &deg;WriteFile&deg;&middot;Exit
<!--B-->0560: 50 72 6F 63 65 73 73 2F 20 20 20 20 30 20 20 20  Process/&macr;&macr;&macr;&macr;0&macr;&macr;&macr;
<!--B-->0570: 20 20 20 20 20 20 20 20 30 20 20 20 20 20 30 20  &macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;0&macr;
<!--B-->0580: 20 20 20 20 31 30 30 36 36 36 20 20 34 35 20 20  &macr;&macr;&macr;&macr;100666&macr;&macr;45&macr;&macr;
<!--B-->0590: 20 20 20 20 20 20 60 0A 00 00 FF FF 00 00 64 86  &macr;&macr;&macr;&macr;&macr;&macr;`&not;&deg;&deg;&curren;&curren;&deg;&deg;d&curren;
<!--B-->05A0: 00 00 00 00 19 00 00 00 00 00 04 00 45 78 69 74  &deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&middot;&deg;Exit
<!--B-->05B0: 50 72 6F 63 65 73 73 00 6B 65 72 6E 65 6C 33 32  Process&deg;kernel32
<!--B-->05C0: 2E 64 6C 6C 00 10 74 39 31 37 39 2E 45 58 2F 20  .dll&deg;&middot;t9179.EX/&macr;
<!--B-->05D0: 20 20 20 20 20 20 30 20 20 20 20 20 20 20 20 20  &macr;&macr;&macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;
<!--B-->05E0: 20 20 30 20 20 20 20 20 30 20 20 20 20 20 31 30  &macr;&macr;0&macr;&macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;10
<!--B-->05F0: 30 36 36 36 20 20 33 35 38 20 20 20 20 20 20 20  0666&macr;&macr;358&macr;&macr;&macr;&macr;&macr;&macr;&macr;
<!--B-->0600: 60 0A 64 86 02 00 00 00 00 00 AA 00 00 00 09 00  `&not;d&curren;&middot;&deg;&deg;&deg;&deg;&deg;&curren;&deg;&deg;&deg;&middot;&deg;
<!--B-->0610: 00 00 00 00 20 00 2E 74 65 78 74 00 00 00 00 00  &deg;&deg;&deg;&deg;&macr;&deg;.text&deg;&deg;&deg;&deg;&deg;
<!--B-->0620: 00 00 00 00 00 00 28 00 00 00 64 00 00 00 8C 00  &deg;&deg;&deg;&deg;&deg;&deg;(&deg;&deg;&deg;d&deg;&deg;&deg;&curren;&deg;
<!--B-->0630: 00 00 00 00 00 00 03 00 00 00 20 00 50 60 2E 62  &deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&macr;&deg;P`.b
<!--B-->0640: 73 73 00 00 00 00 00 00 00 00 00 00 00 00 07 00  ss&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;
<!--B-->0650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0660: 00 00 80 00 50 C0 48 8D 35 00 00 00 00 C7 06 45  &deg;&deg;&curren;&deg;P&curren;H&curren;5&deg;&deg;&deg;&deg;&curren;&middot;E
<!--B-->0670: 6E 64 00 C7 46 03 0D 0A 00 00 E8 00 00 00 00 48  nd&deg;&curren;F&middot;&middot;&not;&deg;&deg;&curren;&deg;&deg;&deg;&deg;H
<!--B-->0680: 83 E4 F0 48 83 EC 20 31 C9 E9 00 00 00 00 03 00  &curren;&curren;&curren;H&curren;&curren;&macr;1&curren;&curren;&deg;&deg;&deg;&deg;&middot;&deg;
<!--B-->0690: 00 00 02 00 00 00 04 00 15 00 00 00 08 00 00 00  &deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;&middot;&deg;&deg;&deg;&middot;&deg;&deg;&deg;
<!--B-->06A0: 04 00 24 00 00 00 07 00 00 00 04 00 2E 66 69 6C  &middot;&deg;$&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;.fil
<!--B-->06B0: 65 00 00 00 00 00 00 00 FE FF 00 00 67 01 74 39  e&deg;&deg;&deg;&deg;&deg;&deg;&deg;&curren;&curren;&deg;&deg;g&middot;t9
<!--B-->06C0: 31 37 39 2E 68 74 6D 00 00 00 00 00 00 00 00 00  179.htm&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->06D0: 2E 62 73 73 00 00 00 00 00 00 00 00 02 00 00 00  .bss&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;
<!--B-->06E0: 03 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &middot;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->06F0: 00 00 00 00 2E 74 65 78 74 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;.text&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0700: 01 00 00 00 03 01 28 00 00 00 03 00 00 00 00 00  &middot;&deg;&deg;&deg;&middot;&middot;(&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;
<!--B-->0710: 00 00 00 00 00 00 00 00 45 78 69 74 2E 57 36 34  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;Exit.W64
<!--B-->0720: 00 00 00 00 01 00 01 02 02 00 00 00 00 00 04 00  &deg;&deg;&deg;&deg;&middot;&deg;&middot;&middot;&middot;&deg;&deg;&deg;&deg;&deg;&middot;&deg;
<!--B-->0730: 00 00 00 00 00 00 00 00 01 01 02 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&middot;&middot;&deg;&deg;&deg;&deg;&deg;
<!--B-->0740: 10 00 00 00 00 00 00 00 00 00 01 01 02 00 1A 00  &middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&middot;&middot;&deg;&middot;&deg;
<!--B-->0750: 00 00 45 78 69 74 50 72 6F 63 65 73 73 00 57 72  &deg;&deg;ExitProcess&deg;Wr
<!--B-->0760: 69 74 65 2E 57 36 34 00                          ite.W64&deg;
</pre></dd></dl>
<!--TAILMENU-->
<!--Contents below the marker {!==TAILMENU==} was generated by "generate.php".-->
<br class='CLEAR'/><a id='bottom' href='#top'>&#x25B2;Back to the top&#x25B2;</a>
</body></html>