<!doctype html><html lang='en'><head>
<meta http-equiv='Content-Type' content='text/html; charset=utf-8'/>
<meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=2.0, user-scalable=yes'>
<meta name='robots' content='ALL,FOLLOW'/>
<meta name='description' content='t9108.htm test file'/>
<meta name='version' content='20250318'/>
<meta name='author' content='Pavel vitsoft Šrubař'/>
<link rel='stylesheet' href='../euroasm.css' type='text/css'/>
<link rel='shortcut icon' href='../favicon.ico'/>
<title>t9108.htm test file</title>
</head>
<body class='EATESTS' id='top'><div class='HEADMENU'><table>
<tr><td rowspan='2' title='&euro;ASM - assembler and linker'><img src='../favicon.ico' alt='EuroAssembler' />
<td><a href='../index.htm' title='Alphabetical index of all &euro;ASM elements, directives and instructions'>Index</a></td>
<td><a href='../eadoc/' class='EADOC' title='Documentation of EuroAssembler'>Manual</a></td>
<td><a href='https://euroassembler.eu/download/' title='History &amp; download of the latest and previous versions'>Download</a></td>
<td><a href='../easource/' class='EASOURCE' title='Source files of EuroAssembler itself'>Source</a></td>
<td><a href='../maclib/' class='MACLIB' title='Macro libraries shipped with &euro;ASM'>Macros</a></td>
<td rowspan='2' title='Find the searched token in any text file on this site'>
<form method='post' action='../search.php' enctype='multipart/form-data' accept-charset='utf-8'>
<input type='text' id='q' placeholder='Searched word(s)' name='q' value=''/>
<br/><label title='Check the box to find the expression even if it is surrounded by other letters | digits.'>
<input type='checkbox' name='EW'/><small>Embedded word</small></label>
<br/><label title='Check the box for case-insensitive search.'>
<input type='checkbox' name='CI'/><small>Case ins.</small></label>
<input type='submit' title='Search for the specified word|expression in all site files.' name='find' value='Search'/>
</form></td></tr><tr>
<td><a href='../sitemap.htm' title='List of directories and files on this site'>Sitemap</a></td>
<td><a href='../eadoc/links.htm' class='EADOC' title='References and external links to resources used in EuroAssembler developement'>Links</a></td>
<td><a href='https://euroassembler.eu/forum/' title='Discussion forum concerning EuroAssembler'>Forum</a></td>
<td><a href='../eatests/' class='EATESTS' title='Program snippets for testing the function of &euro;ASM'>Tests</a></td>
<td><a href='../objlib/' class='OBJLIB' title='Skeletons and sample objects and projects shipped with &euro;ASM'>Projects</a></td>
</tr></table></div>
<!--Contents above the marker {!==/HEADMENU==} was generated by "generate.php".-->
<!--/HEADMENU-->
<h1 id='TestTitle'>Test <a class='EXT' href='t9108.htm'>t9108</a>:
<!--T-->LIBCOF library for 32bit Windows links LIBOMF library
</h1><button onclick='window.location="../eatests/manager.php?test=t9108";'>Manage t9108</button>
<br class='CLEAR'/>
<dl><dt>Source &amp; expected listing <q>t9108.htm.lst</q></dt><dd><samp>
|                       |  EUROASM AUTOSEGMENT=ON,CPU=386,DUMPWIDTH=25
|7439313038             |%test %SET t9108
|                       |;;
|                       |;;  Create the auxilliary LIBOMF library "%test.omf.lib".
|                       |%test.omf PROGRAM FORMAT=LIBOMF,MODEL=FLAT,WIDTH=32
|[.text]                ::::Section changed.
|00000000:              |Write.W32:: PROC         ; Display ASCIIZ string pointed to by ESI using Windows.
|                       |  IMPORT GetStdHandle:,WriteFile: ; Declare imported Windows kernel functions.
|00000000:6AF5          |  PUSH -11               ; %1 Identifier of standard output STD_OUTPUT_HANDLE.
|00000002:E8(00000000)  |  CALL GetStdHandle:     ; Stdcall the imported Windows function with 1 argument.
|00000007:89C3          |  MOV EBX,EAX            ; Save the returned StdOutput handle to EBX.
|00000009:89F7          |  MOV EDI,ESI            ; Use EDI to find the end of input string.
|0000000B:31C9          |  XOR ECX,ECX            ; Clear ECX to keep the size of input string.
|0000000D:31C0          |  XOR EAX,EAX            ; Clear AL, the searched NUL character.
|0000000F:F7D1          |  NOT ECX                ; Assume unlimited possible string size.
|00000011:F2AE          |  REPNE SCASB            ; Find the zero terminator.
|00000013:F7D1          |  NOT ECX                ; Get string size to ECX.
|00000015:52            |  PUSH EDX               ; Alloc temporary DWORD memory variable on stack.
|00000016:89E2          |    MOV EDX,ESP          ; Get address of this DWORD to EDX.
|00000018:50            |    PUSH EAX             ; %5 No overlap of WriteFile.
|00000019:52            |    PUSH EDX             ; %4 Memory variable for number of bytes.
|0000001A:51            |    PUSH ECX             ; %3 String size.
|0000001B:56            |    PUSH ESI             ; %2 String address.
|0000001C:53            |    PUSH EBX             ; %1 Standard output file handle.
|0000001D:E8(00000000)  |    CALL WriteFile:      ; Stdcall the imported function with 5 arguments.
|00000022:5A            |  POP EDX                ; Free and discard the temporary DWORD on stack.
|00000023:C3            |  RET                    ; Return to caller.
|00000024:              | ENDPROC Write.W32:
|                       |;;
|00000024:              |Beep.W32:: PROC          ; Play a sound in 32bit Windows.
|00000024:BE[00000000]  |  MOV ESI,=B"Beeping..." ; Define a literal string in [.rodata].
|00000029:E8D2FFFFFF    |  CALL Write.W32::       ; Display the notification "Beeping...".
|                       |  IMPORT Beep:           ; Declare imported Windows kernel function.
|0000002E:68C8000000    |  PUSH 200               ; %2 Sound duration [ms].
|00000033:68B8010000    |  PUSH 440               ; %1 Sound frequency [Hz].
|00000038:E8(00000000)  |  CALL Beep:             ; Stdcall the imported function with 2 arguments.
|0000003D:6890010000    |  PUSH 400               ; %2 Sound duration [ms].
|00000042:684B020000    |  PUSH 587               ; %1 Sound frequency [Hz].
|00000047:E8(00000000)  |  CALL Beep:             ; Stdcall the imported function with 2 arguments.
|0000004C:C3            |  RET                    ; Return to caller.
|0000004D:              | ENDPROC Beep.W32:
|                       |;;
|0000004D:              |Exit.W32:: PROC          ; Display the message "End" and terminate the program.
|0000004D:BE[00000000]  |  MOV ESI,.M:            ; Address in segment [.bss] for the message.
|00000052:C706456E6400  |  MOVD [ESI+0],"End"     ; Dynamically define the message "End".
|00000058:C746030D0A0000|  MOVD [ESI+3],0x0A0D    ; CR+LF.
|0000005F:E89CFFFFFF    |  CALL Write.W32::       ; Display the notification "End".
|                       |  IMPORT ExitProcess:    ; Use imported Windows kernel function.
|00000064:6A00          |  PUSH 0                 ; %1 Terminate with errorlevel 0.
|00000066:E9(00000000)  |  JMP ExitProcess:       ; Use imported function with 1 argument.
|[.bss]                 ::::Section changed.
|00000000:..............|.M: DB 7*BYTE            ; Reserve space for ASCIIZ string "End" in segment [.bss].
|[.text]                ::::Section changed.
|0000006B:              | ENDPROC Exit.W32:
|[@LT1]                 ====ListLiterals in section [@LT1].
|00000000:42656570696E~~=B"Beeping..."
|                       |ENDPROGRAM %test.omf
|        **** ListMap "t9108.omf.lib",model=FLAT,groups=0,segments=3,entry=,stack=
|          [.text],FA=0000018Ch,RVA=00000000h,size=0000006Bh=107,width=32,align=0010h,purpose=CODE
|          [.rodata],FA=00000220h,RVA=00000000h,size=0000000Bh=11,width=32,align=0010h,purpose=RODATA+LITERAL
|          [.bss],FA=00000000h,RVA=00000000h,size=00000007h=7,width=32,align=0010h,purpose=BSS
|        **** ListGlobals "t9108.omf.lib",Global=0,Public=3,Extern=0,eXport=0,Import=4
|        Beep,[Beep]:00000000h,scope='I',lib="kernel32.dll"
|        Beep.W32,[.text]:00000024h,scope='P'
|        Exit.W32,[.text]:0000004Dh,scope='P'
|        ExitProcess,[ExitProcess]:00000000h,scope='I',lib="kernel32.dll"
|        GetStdHandle,[GetStdHandle]:00000000h,scope='I',lib="kernel32.dll"
|        Write.W32,[.text]:00000000h,scope='P'
|        WriteFile,[WriteFile]:00000000h,scope='I',lib="kernel32.dll"
|                       |;;
|                       |;; Create the main LIBCOF library from LIBOMF library.
|                       |%test PROGRAM FORMAT=LIBCOF,MODEL=FLAT,WIDTH=32
|                       |    LINK %test.omf.lib
|[.data]                ::::Section changed.
|00000000:333262697420~~|Msg:: DB '%^WIDTH[]bit %^MODEL %^FORMAT program "%^OUTFILE".',13,10,0
|                       |   ENDPROGRAM %test
|# I0561 Linking LIBOMF library "./t9108.omf.lib".
|        **** ListMap "t9108.lib",model=FLAT,groups=0,segments=1,entry=,stack=
|          [.data],FA=0000003Ch,RVA=00000000h,size=00000029h=41,width=32,align=0010h,purpose=DATA
|        **** ListGlobals "t9108.lib",Global=0,Public=1,Extern=0,eXport=0,Import=0
|        Msg,[.data]:00000000h,scope='P'
</samp></dd></dl>
<dl><dt>Expected messages <q>t9108.out</q></dt><dd><code class='PRE'>
<!--M-->I0180 Assembling source file "t9108.htm".
<!--M-->I0270 Assembling source "t9108".
<!--M-->I0310 Assembling source pass 1.
<!--M-->I0330 Assembling source pass 2 - final.
<!--M-->I0470 Assembling program "t9108.omf". "t9108.htm"{45}
<!--M-->I0510 Assembling program pass 1. "t9108.htm"{45}
<!--M-->I0510 Assembling program pass 2. "t9108.htm"{45}
<!--M-->I0530 Assembling program pass 3 - final. "t9108.htm"{45}
<!--M-->I0660 32bit FLAT LIBOMF file "t9108.omf.lib" created, size=2048. "t9108.htm"{97}
<!--M-->I0650 Program "t9108.omf" assembled in 3 passes with errorlevel 0. "t9108.htm"{97}
<!--M-->I0470 Assembling program "t9108". "t9108.htm"{112}
<!--M-->I0510 Assembling program pass 1. "t9108.htm"{112}
<!--M-->I0510 Assembling program pass 2. "t9108.htm"{112}
<!--M-->I0530 Assembling program pass 3 - final. "t9108.htm"{112}
<!--M-->I0561 Linking LIBOMF library "./t9108.omf.lib". "t9108.htm"{116}
<!--M-->I0660 32bit FLAT LIBCOF file "t9108.lib" created, size=1873. "t9108.htm"{116}
<!--M-->I0650 Program "t9108" assembled in 3 passes with errorlevel 0. "t9108.htm"{116}
<!--M-->I0750 Source "t9108" (269 lines) assembled in 2 passes with errorlevel 0.
<!--M-->I0860 Listing file "t9108.htm.lst" created, size=6142.
<!--M-->I0990 EuroAssembler terminated with errorlevel 0.
</code></dd></dl>
<dl><dt>Expected output file <q>t9108.
<!--E-->lib
</q></dt><dd><pre>
<!--B-->0000: 21 3C 61 72 63 68 3E 0A 2F 20 20 20 20 20 20 20  !&lt;arch&gt;&not;/&macr;&macr;&macr;&macr;&macr;&macr;&macr;
<!--B-->0010: 20 20 20 20 20 20 20 20 30 20 20 20 20 20 20 20  &macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;&macr;&macr;
<!--B-->0020: 20 20 20 20 30 20 20 20 20 20 30 20 20 20 20 20  &macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;
<!--B-->0030: 31 30 30 36 36 36 20 20 31 35 30 20 20 20 20 20  100666&macr;&macr;150&macr;&macr;&macr;&macr;&macr;
<!--B-->0040: 20 20 60 0A 00 00 00 0C 00 00 01 EE 00 00 01 EE  &macr;&macr;`&not;&deg;&deg;&deg;&middot;&deg;&deg;&middot;&curren;&deg;&deg;&middot;&curren;
<!--B-->0050: 00 00 02 EE 00 00 03 58 00 00 03 C0 00 00 04 22  &deg;&deg;&middot;&curren;&deg;&deg;&middot;X&deg;&deg;&middot;&curren;&deg;&deg;&middot;&quot;
<!--B-->0060: 00 00 04 8C 00 00 04 8C 00 00 04 8C 00 00 04 8C  &deg;&deg;&middot;&curren;&deg;&deg;&middot;&curren;&deg;&deg;&middot;&curren;&deg;&deg;&middot;&curren;
<!--B-->0070: 00 00 04 8C 00 00 04 8C 2E 64 61 74 61 00 4D 73  &deg;&deg;&middot;&curren;&deg;&deg;&middot;&curren;.data&deg;Ms
<!--B-->0080: 67 00 47 65 74 53 74 64 48 61 6E 64 6C 65 00 57  g&deg;GetStdHandle&deg;W
<!--B-->0090: 72 69 74 65 46 69 6C 65 00 42 65 65 70 00 45 78  riteFile&deg;Beep&deg;Ex
<!--B-->00A0: 69 74 50 72 6F 63 65 73 73 00 2E 74 65 78 74 00  itProcess&deg;.text&deg;
<!--B-->00B0: 2E 72 6F 64 61 74 61 00 2E 62 73 73 00 57 72 69  .rodata&deg;.bss&deg;Wri
<!--B-->00C0: 74 65 2E 57 33 32 00 42 65 65 70 2E 57 33 32 00  te.W32&deg;Beep.W32&deg;
<!--B-->00D0: 45 78 69 74 2E 57 33 32 00 0A 2F 20 20 20 20 20  Exit.W32&deg;&not;/&macr;&macr;&macr;&macr;&macr;
<!--B-->00E0: 20 20 20 20 20 20 20 20 20 20 30 20 20 20 20 20  &macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;
<!--B-->00F0: 20 20 20 20 20 20 30 20 20 20 20 20 30 20 20 20  &macr;&macr;&macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;0&macr;&macr;&macr;
<!--B-->0100: 20 20 31 30 30 36 36 36 20 20 31 35 34 20 20 20  &macr;&macr;100666&macr;&macr;154&macr;&macr;&macr;
<!--B-->0110: 20 20 20 20 60 0A 06 00 00 00 EE 01 00 00 EE 02  &macr;&macr;&macr;&macr;`&not;&middot;&deg;&deg;&deg;&curren;&middot;&deg;&deg;&curren;&middot;
<!--B-->0120: 00 00 58 03 00 00 C0 03 00 00 22 04 00 00 8C 04  &deg;&deg;X&middot;&deg;&deg;&curren;&middot;&deg;&deg;&quot;&middot;&deg;&deg;&curren;&middot;
<!--B-->0130: 00 00 0C 00 00 00 06 00 01 00 06 00 06 00 04 00  &deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;&middot;&deg;&middot;&deg;&middot;&deg;&middot;&deg;
<!--B-->0140: 06 00 06 00 05 00 02 00 01 00 06 00 03 00 2E 62  &middot;&deg;&middot;&deg;&middot;&deg;&middot;&deg;&middot;&deg;&middot;&deg;&middot;&deg;.b
<!--B-->0150: 73 73 00 2E 64 61 74 61 00 2E 72 6F 64 61 74 61  ss&deg;.data&deg;.rodata
<!--B-->0160: 00 2E 74 65 78 74 00 42 65 65 70 00 42 65 65 70  &deg;.text&deg;Beep&deg;Beep
<!--B-->0170: 2E 57 33 32 00 45 78 69 74 2E 57 33 32 00 45 78  .W32&deg;Exit.W32&deg;Ex
<!--B-->0180: 69 74 50 72 6F 63 65 73 73 00 47 65 74 53 74 64  itProcess&deg;GetStd
<!--B-->0190: 48 61 6E 64 6C 65 00 4D 73 67 00 57 72 69 74 65  Handle&deg;Msg&deg;Write
<!--B-->01A0: 2E 57 33 32 00 57 72 69 74 65 46 69 6C 65 00 0A  .W32&deg;WriteFile&deg;&not;
<!--B-->01B0: 2F 2F 20 20 20 20 20 20 20 20 20 20 20 20 20 20  //&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;
<!--B-->01C0: 30 20 20 20 20 20 20 20 20 20 20 20 30 20 20 20  0&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;0&macr;&macr;&macr;
<!--B-->01D0: 20 20 30 20 20 20 20 20 31 30 30 36 36 36 20 20  &macr;&macr;0&macr;&macr;&macr;&macr;&macr;100666&macr;&macr;
<!--B-->01E0: 32 20 20 20 20 20 20 20 20 20 60 0A 00 0A 74 39  2&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;`&not;&deg;&not;t9
<!--B-->01F0: 31 30 38 2F 20 20 20 20 20 20 20 20 20 20 30 20  108/&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;0&macr;
<!--B-->0200: 20 20 20 20 20 20 20 20 20 20 30 20 20 20 20 20  &macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;
<!--B-->0210: 30 20 20 20 20 20 31 30 30 36 36 36 20 20 31 39  0&macr;&macr;&macr;&macr;&macr;100666&macr;&macr;19
<!--B-->0220: 36 20 20 20 20 20 20 20 60 0A 4C 01 01 00 00 00  6&macr;&macr;&macr;&macr;&macr;&macr;&macr;`&not;L&middot;&middot;&deg;&deg;&deg;
<!--B-->0230: 00 00 66 00 00 00 05 00 00 00 00 00 00 01 2E 64  &deg;&deg;f&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&middot;.d
<!--B-->0240: 61 74 61 00 00 00 00 00 00 00 00 00 00 00 29 00  ata&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;)&deg;
<!--B-->0250: 00 00 3C 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&lt;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0260: 00 00 40 00 50 C0 33 32 62 69 74 20 46 4C 41 54  &deg;&deg;@&deg;P&curren;32bit&macr;FLAT
<!--B-->0270: 20 4C 49 42 43 4F 46 20 70 72 6F 67 72 61 6D 20  &macr;LIBCOF&macr;program&macr;
<!--B-->0280: 22 74 39 31 30 38 2E 6C 69 62 22 2E 0D 0A 00 00  &quot;t9108.lib&quot;.&middot;&not;&deg;&deg;
<!--B-->0290: 2E 66 69 6C 65 00 00 00 00 00 00 00 FE FF 00 00  .file&deg;&deg;&deg;&deg;&deg;&deg;&deg;&curren;&curren;&deg;&deg;
<!--B-->02A0: 67 01 74 39 31 30 38 2E 68 74 6D 00 00 00 00 00  g&middot;t9108.htm&deg;&deg;&deg;&deg;&deg;
<!--B-->02B0: 00 00 00 00 2E 64 61 74 61 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;.data&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->02C0: 01 00 00 00 03 01 29 00 00 00 00 00 00 00 00 00  &middot;&deg;&deg;&deg;&middot;&middot;)&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->02D0: 00 00 00 00 00 00 00 00 4D 73 67 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;Msg&deg;&deg;&deg;&deg;&deg;
<!--B-->02E0: 00 00 00 00 01 00 0C 00 02 00 04 00 00 00 47 65  &deg;&deg;&deg;&deg;&middot;&deg;&middot;&deg;&middot;&deg;&middot;&deg;&deg;&deg;Ge
<!--B-->02F0: 74 53 74 64 48 61 6E 64 6C 65 2F 20 20 20 30 20  tStdHandle/&macr;&macr;&macr;0&macr;
<!--B-->0300: 20 20 20 20 20 20 20 20 20 20 30 20 20 20 20 20  &macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;
<!--B-->0310: 30 20 20 20 20 20 31 30 30 36 36 36 20 20 34 36  0&macr;&macr;&macr;&macr;&macr;100666&macr;&macr;46
<!--B-->0320: 20 20 20 20 20 20 20 20 60 0A 00 00 FF FF 00 00  &macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;`&not;&deg;&deg;&curren;&curren;&deg;&deg;
<!--B-->0330: 4C 01 00 00 00 00 1A 00 00 00 00 00 04 00 47 65  L&middot;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&middot;&deg;Ge
<!--B-->0340: 74 53 74 64 48 61 6E 64 6C 65 00 6B 65 72 6E 65  tStdHandle&deg;kerne
<!--B-->0350: 6C 33 32 2E 64 6C 6C 00 57 72 69 74 65 46 69 6C  l32.dll&deg;WriteFil
<!--B-->0360: 65 2F 20 20 20 20 20 20 30 20 20 20 20 20 20 20  e/&macr;&macr;&macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;&macr;&macr;
<!--B-->0370: 20 20 20 20 30 20 20 20 20 20 30 20 20 20 20 20  &macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;
<!--B-->0380: 31 30 30 36 36 36 20 20 34 33 20 20 20 20 20 20  100666&macr;&macr;43&macr;&macr;&macr;&macr;&macr;&macr;
<!--B-->0390: 20 20 60 0A 00 00 FF FF 00 00 4C 01 00 00 00 00  &macr;&macr;`&not;&deg;&deg;&curren;&curren;&deg;&deg;L&middot;&deg;&deg;&deg;&deg;
<!--B-->03A0: 17 00 00 00 00 00 04 00 57 72 69 74 65 46 69 6C  &middot;&deg;&deg;&deg;&deg;&deg;&middot;&deg;WriteFil
<!--B-->03B0: 65 00 6B 65 72 6E 65 6C 33 32 2E 64 6C 6C 00 10  e&deg;kernel32.dll&deg;&middot;
<!--B-->03C0: 42 65 65 70 2F 20 20 20 20 20 20 20 20 20 20 20  Beep/&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;
<!--B-->03D0: 30 20 20 20 20 20 20 20 20 20 20 20 30 20 20 20  0&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;0&macr;&macr;&macr;
<!--B-->03E0: 20 20 30 20 20 20 20 20 31 30 30 36 36 36 20 20  &macr;&macr;0&macr;&macr;&macr;&macr;&macr;100666&macr;&macr;
<!--B-->03F0: 33 38 20 20 20 20 20 20 20 20 60 0A 00 00 FF FF  38&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;`&not;&deg;&deg;&curren;&curren;
<!--B-->0400: 00 00 4C 01 00 00 00 00 12 00 00 00 00 00 04 00  &deg;&deg;L&middot;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&middot;&deg;
<!--B-->0410: 42 65 65 70 00 6B 65 72 6E 65 6C 33 32 2E 64 6C  Beep&deg;kernel32.dl
<!--B-->0420: 6C 00 45 78 69 74 50 72 6F 63 65 73 73 2F 20 20  l&deg;ExitProcess/&macr;&macr;
<!--B-->0430: 20 20 30 20 20 20 20 20 20 20 20 20 20 20 30 20  &macr;&macr;0&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;0&macr;
<!--B-->0440: 20 20 20 20 30 20 20 20 20 20 31 30 30 36 36 36  &macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;100666
<!--B-->0450: 20 20 34 35 20 20 20 20 20 20 20 20 60 0A 00 00  &macr;&macr;45&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;`&not;&deg;&deg;
<!--B-->0460: FF FF 00 00 4C 01 00 00 00 00 19 00 00 00 00 00  &curren;&curren;&deg;&deg;L&middot;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;
<!--B-->0470: 04 00 45 78 69 74 50 72 6F 63 65 73 73 00 6B 65  &middot;&deg;ExitProcess&deg;ke
<!--B-->0480: 72 6E 65 6C 33 32 2E 64 6C 6C 00 10 74 39 31 30  rnel32.dll&deg;&middot;t910
<!--B-->0490: 38 2E 6F 6D 66 2F 20 20 20 20 20 20 30 20 20 20  8.omf/&macr;&macr;&macr;&macr;&macr;&macr;0&macr;&macr;&macr;
<!--B-->04A0: 20 20 20 20 20 20 20 20 30 20 20 20 20 20 30 20  &macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;0&macr;
<!--B-->04B0: 20 20 20 20 31 30 30 36 36 36 20 20 36 34 39 20  &macr;&macr;&macr;&macr;100666&macr;&macr;649&macr;
<!--B-->04C0: 20 20 20 20 20 20 60 0A 4C 01 03 00 00 00 00 00  &macr;&macr;&macr;&macr;&macr;&macr;`&not;L&middot;&middot;&deg;&deg;&deg;&deg;&deg;
<!--B-->04D0: 4A 01 00 00 0F 00 00 00 00 00 00 01 2E 74 65 78  J&middot;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&middot;.tex
<!--B-->04E0: 74 00 00 00 00 00 00 00 00 00 00 00 6B 00 00 00  t&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;k&deg;&deg;&deg;
<!--B-->04F0: 8C 00 00 00 F8 00 00 00 00 00 00 00 07 00 00 00  &curren;&deg;&deg;&deg;&curren;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;
<!--B-->0500: 20 00 50 60 2E 72 6F 64 61 74 61 00 00 00 00 00  &macr;&deg;P`.rodata&deg;&deg;&deg;&deg;&deg;
<!--B-->0510: 00 00 00 00 0B 00 00 00 3E 01 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&gt;&middot;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0520: 00 00 00 00 00 00 00 00 40 00 50 40 2E 62 73 73  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;@&deg;P@.bss
<!--B-->0530: 00 00 00 00 00 00 00 00 00 00 00 00 07 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;
<!--B-->0540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0550: 80 00 50 C0 6A F5 E8 00 00 00 00 89 C3 89 F7 31  &curren;&deg;P&curren;j&curren;&curren;&deg;&deg;&deg;&deg;&curren;&curren;&curren;&curren;1
<!--B-->0560: C9 31 C0 F7 D1 F2 AE F7 D1 52 89 E2 50 52 51 56  &curren;1&curren;&curren;&curren;&curren;&curren;&curren;&curren;R&curren;&curren;PRQV
<!--B-->0570: 53 E8 00 00 00 00 5A C3 BE 00 00 00 00 E8 D2 FF  S&curren;&deg;&deg;&deg;&deg;Z&curren;&curren;&deg;&deg;&deg;&deg;&curren;&curren;&curren;
<!--B-->0580: FF FF 68 C8 00 00 00 68 B8 01 00 00 E8 00 00 00  &curren;&curren;h&curren;&deg;&deg;&deg;h&curren;&middot;&deg;&deg;&curren;&deg;&deg;&deg;
<!--B-->0590: 00 68 90 01 00 00 68 4B 02 00 00 E8 00 00 00 00  &deg;h&curren;&middot;&deg;&deg;hK&middot;&deg;&deg;&curren;&deg;&deg;&deg;&deg;
<!--B-->05A0: C3 BE 00 00 00 00 C7 06 45 6E 64 00 C7 46 03 0D  &curren;&curren;&deg;&deg;&deg;&deg;&curren;&middot;End&deg;&curren;F&middot;&middot;
<!--B-->05B0: 0A 00 00 E8 9C FF FF FF 6A 00 E9 00 00 00 00 00  &not;&deg;&deg;&curren;&curren;&curren;&curren;&curren;j&deg;&curren;&deg;&deg;&deg;&deg;&deg;
<!--B-->05C0: 03 00 00 00 0C 00 00 00 14 00 1E 00 00 00 0E 00  &middot;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;&middot;&deg;&deg;&deg;&middot;&deg;
<!--B-->05D0: 00 00 14 00 25 00 00 00 04 00 00 00 06 00 39 00  &deg;&deg;&middot;&deg;%&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;9&deg;
<!--B-->05E0: 00 00 08 00 00 00 14 00 48 00 00 00 08 00 00 00  &deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;H&deg;&deg;&deg;&middot;&deg;&deg;&deg;
<!--B-->05F0: 14 00 4E 00 00 00 02 00 00 00 06 00 67 00 00 00  &middot;&deg;N&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;g&deg;&deg;&deg;
<!--B-->0600: 0B 00 00 00 14 00 42 65 65 70 69 6E 67 2E 2E 2E  &middot;&deg;&deg;&deg;&middot;&deg;Beeping...
<!--B-->0610: 00 00 2E 66 69 6C 65 00 00 00 00 00 00 00 FE FF  &deg;&deg;.file&deg;&deg;&deg;&deg;&deg;&deg;&deg;&curren;&curren;
<!--B-->0620: 00 00 67 01 74 39 31 30 38 2E 68 74 6D 00 00 00  &deg;&deg;g&middot;t9108.htm&deg;&deg;&deg;
<!--B-->0630: 00 00 00 00 00 00 2E 62 73 73 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;.bss&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0640: 00 00 03 00 00 00 03 01 00 00 00 00 00 00 00 00  &deg;&deg;&middot;&deg;&deg;&deg;&middot;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0650: 00 00 00 00 00 00 00 00 00 00 2E 72 6F 64 61 74  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;.rodat
<!--B-->0660: 61 00 00 00 00 00 02 00 00 00 03 01 0B 00 00 00  a&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&middot;&middot;&deg;&deg;&deg;
<!--B-->0670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 2E 74  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;.t
<!--B-->0680: 65 78 74 00 00 00 00 00 00 00 01 00 00 00 03 01  ext&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&middot;
<!--B-->0690: 6B 00 00 00 07 00 00 00 00 00 00 00 00 00 00 00  k&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->06A0: 00 00 42 65 65 70 00 00 00 00 00 00 00 00 00 00  &deg;&deg;Beep&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->06B0: 01 01 02 00 42 65 65 70 2E 57 33 32 24 00 00 00  &middot;&middot;&middot;&deg;Beep.W32$&deg;&deg;&deg;
<!--B-->06C0: 01 00 00 00 02 00 45 78 69 74 2E 57 33 32 4D 00  &middot;&deg;&deg;&deg;&middot;&deg;Exit.W32M&deg;
<!--B-->06D0: 00 00 01 00 00 00 02 00 00 00 00 00 04 00 00 00  &deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;
<!--B-->06E0: 00 00 00 00 00 00 01 01 02 00 00 00 00 00 10 00  &deg;&deg;&deg;&deg;&deg;&deg;&middot;&middot;&middot;&deg;&deg;&deg;&deg;&deg;&middot;&deg;
<!--B-->06F0: 00 00 00 00 00 00 00 00 01 01 02 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&middot;&middot;&deg;&deg;&deg;&deg;&deg;
<!--B-->0700: 1D 00 00 00 00 00 00 00 01 00 00 00 02 00 00 00  &middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;&deg;&deg;
<!--B-->0710: 00 00 27 00 00 00 00 00 00 00 00 00 01 01 02 00  &deg;&deg;&#039;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&middot;&middot;&deg;
<!--B-->0720: 31 00 00 00 45 78 69 74 50 72 6F 63 65 73 73 00  1&deg;&deg;&deg;ExitProcess&deg;
<!--B-->0730: 47 65 74 53 74 64 48 61 6E 64 6C 65 00 57 72 69  GetStdHandle&deg;Wri
<!--B-->0740: 74 65 2E 57 33 32 00 57 72 69 74 65 46 69 6C 65  te.W32&deg;WriteFile
<!--B-->0750: 00                                               &deg;
</pre></dd></dl>
<!--TAILMENU-->
<!--Contents below the marker {!==TAILMENU==} was generated by "generate.php".-->
<br class='CLEAR'/><a id='bottom' href='#top'>&#x25B2;Back to the top&#x25B2;</a>
</body></html>