<!doctype html><html lang='en'><head>
<meta http-equiv='Content-Type' content='text/html; charset=utf-8'/>
<meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=2.0, user-scalable=yes'>
<meta name='robots' content='ALL,FOLLOW'/>
<meta name='description' content='t2508.htm test file'/>
<meta name='version' content='20250318'/>
<meta name='author' content='Pavel vitsoft Šrubař'/>
<link rel='stylesheet' href='../euroasm.css' type='text/css'/>
<link rel='shortcut icon' href='../favicon.ico'/>
<title>t2508.htm test file</title>
</head>
<body class='EATESTS' id='top'><div class='HEADMENU'><table>
<tr><td rowspan='2' title='&euro;ASM - assembler and linker'><img src='../favicon.ico' alt='EuroAssembler' />
<td><a href='../index.htm' title='Alphabetical index of all &euro;ASM elements, directives and instructions'>Index</a></td>
<td><a href='../eadoc/' class='EADOC' title='Documentation of EuroAssembler'>Manual</a></td>
<td><a href='https://euroassembler.eu/download/' title='History &amp; download of the latest and previous versions'>Download</a></td>
<td><a href='../easource/' class='EASOURCE' title='Source files of EuroAssembler itself'>Source</a></td>
<td><a href='../maclib/' class='MACLIB' title='Macro libraries shipped with &euro;ASM'>Macros</a></td>
<td rowspan='2' title='Find the searched token in any text file on this site'>
<form method='post' action='../search.php' enctype='multipart/form-data' accept-charset='utf-8'>
<input type='text' id='q' placeholder='Searched word(s)' name='q' value=''/>
<br/><label title='Check the box to find the expression even if it is surrounded by other letters | digits.'>
<input type='checkbox' name='EW'/><small>Embedded word</small></label>
<br/><label title='Check the box for case-insensitive search.'>
<input type='checkbox' name='CI'/><small>Case ins.</small></label>
<input type='submit' title='Search for the specified word|expression in all site files.' name='find' value='Search'/>
</form></td></tr><tr>
<td><a href='../sitemap.htm' title='List of directories and files on this site'>Sitemap</a></td>
<td><a href='../eadoc/links.htm' class='EADOC' title='References and external links to resources used in EuroAssembler developement'>Links</a></td>
<td><a href='https://euroassembler.eu/forum/' title='Discussion forum concerning EuroAssembler'>Forum</a></td>
<td><a href='../eatests/' class='EATESTS' title='Program snippets for testing the function of &euro;ASM'>Tests</a></td>
<td><a href='../objlib/' class='OBJLIB' title='Skeletons and sample objects and projects shipped with &euro;ASM'>Projects</a></td>
</tr></table></div>
<!--Contents above the marker {!==/HEADMENU==} was generated by "generate.php".-->
<!--/HEADMENU-->
<h1 id='TestTitle'>Test <a class='EXT' href='t2508.htm'>t2508</a>:
<!--T-->Pseudoinstruction ALIGN
</h1><button onclick='window.location="../eatests/manager.php?test=t2508";'>Manage t2508</button>
<br class='CLEAR'/>
<dl>
<dt>Description</dt><dd>
<!--D-->Alignment stuff in DATA and CODE segments uses real NOP instructions,
<!--D-->see <a class="EXT" href="../eadoc/#InsEnhNOP">No-operation encoding</a>.
</dd>
<dt>Tested procedures</dt><dd>
<a class='EXT' href='../easource/pseudo.htm#PseudoALIGN'>
<!--P-->PseudoALIGN
</a> &nbsp;
<a class='EXT' href='../easource/sss.htm#SssEmitAlignment'>
<!--P-->SssEmitAlignment
</a> &nbsp;
</dd>
</dl>
<dl><dt>Source &amp; expected listing <q>t2508.htm.lst</q></dt><dd><samp>
|                                       |         EUROASM CPU=086,LIST=ON,DUMP=ON,DUMPALL=YES,DUMPWIDTH=41
|                                       |t2508    PROGRAM FORMAT=BIN,LISTMAP=ON,LISTGLOBALS=OFF
|[Data16]                               |[Data16] SEGMENT WIDTH=16,PURPOSE=DATA,ALIGN=ZWORD
|0000:00                                |         ALIGN DWORD,BYTE
|0001:000000                            |         ALIGN DWORD
|0004:00000000000000                    |         ALIGN 16,11
|000B:0000000000000000000000000000000000|         ALIGN YWORD
|001C:00000000                          ----Dumping all.
|0020:FF                                |         DB -1
|[Code16]                               |[Code16] SEGMENT WIDTH=16,PURPOSE=CODE,ALIGN=ZWORD
|0000:90                                |         ALIGN 16,1
|0001:9087C987D287DB87E487C987D287DB    |         ALIGN 16
|0010:87C9                              |         ALIGN 16,2
|0012:9087C987D287DB87E49087C987D2      |         ALIGN 16
|0020:9087C9                            |         ALIGN 16,3
|0023:9087C987D287DB87E487C987D2        |         ALIGN 16
|0030:87C987D2                          |         ALIGN 16,4
|0034:9087C987D287DB87E49087C9          |         ALIGN 16
|0040:9087C987D2                        |         ALIGN 16,5
|0045:9087C987D287DB87E487C9            |         ALIGN 16
|0050:87C987D287DB                      |         ALIGN 16,6
|0056:9087C987D287DB87E490              |         ALIGN 16
|0060:9087C987D287DB                    |         ALIGN 16,7
|0067:9087C987D287DB87E4                |         ALIGN 16
|0070:87C987D287DB87E4                  |         ALIGN 16,8
|0078:87C987D287DB87E4                  |         ALIGN 16
|0080:9087C987D287DB87E4                |         ALIGN 16,9
|0089:9087C987D287DB                    |         ALIGN 16
|                                       |         EUROASM CPU=686
|0090:90                                |         ALIGN 16,1
|0091:670F1F842000000000670F1F442000    |         ALIGN 16
|00A0:6690                              |         ALIGN 16,2
|00A2:670F1F842000000000670F1F4000      |         ALIGN 16
|00B0:666790                            |         ALIGN 16,3
|00B3:670F1F842000000000670F1F00        |         ALIGN 16
|00C0:670F1F00                          |         ALIGN 16,4
|00C4:670F1F842000000000666790          |         ALIGN 16
|00D0:670F1F4000                        |         ALIGN 16,5
|00D5:670F1F8420000000006690            |         ALIGN 16
|00E0:670F1F442000                      |         ALIGN 16,6
|00E6:670F1F84200000000090              |         ALIGN 16
|00F0:66670F1F442000                    |         ALIGN 16,7
|00F7:670F1F842000000000                |         ALIGN 16
|0100:670F1F8000000000                  |         ALIGN 16,8
|0108:670F1F8000000000                  |         ALIGN 16
|0110:670F1F842000000000                |         ALIGN 16,9
|0119:66670F1F442000                    |         ALIGN 16
|0120:90                                |         ALIGN DWORD,BYTE
|0121:90                                |         ALIGN WORD
|0122:670F1F842000000000                |         ALIGN 16,11
|012B:C3                                |         RET
|                                       |         EUROASM CPU=386
|[Data32]                               |[Data32] SEGMENT WIDTH=32,PURPOSE=DATA,ALIGN=ZWORD
|00000000:00                            |         ALIGN DWORD,BYTE
|00000001:000000                        |         ALIGN DWORD
|00000004:00000000000000                |         ALIGN 16,11
|0000000B:000000000000000000000000000000|         ALIGN YWORD
|0000001A:000000000000                  ----Dumping all.
|00000020:FF                            |         DB -1
|[Code32]                               |[Code32] SEGMENT WIDTH=32,PURPOSE=CODE,ALIGN=ZWORD
|00000000:90                            |         ALIGN 16,1
|00000001:663E8D8420000000008D8000000000|         ALIGN 16
|00000010:6690                          |         ALIGN 16,2
|00000012:663E8D8420000000003E8D442000  |         ALIGN 16
|00000020:8D4000                        |         ALIGN 16,3
|00000023:663E8D8420000000008D442000    |         ALIGN 16
|00000030:8D442000                      |         ALIGN 16,4
|00000034:663E8D8420000000008D4000      |         ALIGN 16
|00000040:3E8D442000                    |         ALIGN 16,5
|00000045:663E8D8420000000006690        |         ALIGN 16
|00000050:8D8000000000                  |         ALIGN 16,6
|00000056:663E8D84200000000090          |         ALIGN 16
|00000060:8D842000000000                |         ALIGN 16,7
|00000067:663E8D842000000000            |         ALIGN 16
|00000070:3E8D842000000000              |         ALIGN 16,8
|00000078:3E8D842000000000              |         ALIGN 16
|00000080:663E8D842000000000            |         ALIGN 16,9
|00000089:8D842000000000                |         ALIGN 16
|                                       |         EUROASM CPU=686
|00000090:90                            |         ALIGN 16,1
|00000091:660F1F842000000000660F1F442000|         ALIGN 16
|000000A0:6690                          |         ALIGN 16,2
|000000A2:660F1F8420000000000F1F442000  |         ALIGN 16
|000000B0:0F1F00                        |         ALIGN 16,3
|000000B3:660F1F8420000000000F1F4000    |         ALIGN 16
|000000C0:0F1F4000                      |         ALIGN 16,4
|000000C4:660F1F8420000000000F1F00      |         ALIGN 16
|000000D0:0F1F442000                    |         ALIGN 16,5
|000000D5:660F1F8420000000006690        |         ALIGN 16
|000000E0:660F1F442000                  |         ALIGN 16,6
|000000E6:660F1F84200000000090          |         ALIGN 16
|000000F0:0F1F8000000000                |         ALIGN 16,7
|000000F7:660F1F842000000000            |         ALIGN 16
|00000100:0F1F842000000000              |         ALIGN 16,8
|00000108:0F1F842000000000              |         ALIGN 16
|00000110:660F1F842000000000            |         ALIGN 16,9
|00000119:                              |         ALIGN DWORD,BYTE
|00000119:90                            |         ALIGN WORD
|0000011A:90                            |         ALIGN 16,11
|0000011B:C3                            |         RET
|                                       |         EUROASM CPU=X64
|[Data64]                               |[Data64] SEGMENT WIDTH=32,PURPOSE=DATA,ALIGN=ZWORD
|00000000:00                            |         ALIGN DWORD,BYTE
|00000001:000000                        |         ALIGN DWORD
|00000004:00000000000000                |         ALIGN 16,11
|0000000B:000000000000000000000000000000|         ALIGN YWORD
|0000001A:000000000000                  ----Dumping all.
|00000020:FF                            |         DB -1
|[Code64]                               |[Code64] SEGMENT WIDTH=64,PURPOSE=CODE,ALIGN=ZWORD
|00000000:90                            |         ALIGN 16,1
|00000001:660F1F842000000000660F1F442000|         ALIGN 16
|00000010:6690                          |         ALIGN 16,2
|00000012:660F1F8420000000000F1F442000  |         ALIGN 16
|00000020:0F1F00                        |         ALIGN 16,3
|00000023:660F1F8420000000000F1F4000    |         ALIGN 16
|00000030:0F1F4000                      |         ALIGN 16,4
|00000034:660F1F8420000000000F1F00      |         ALIGN 16
|00000040:0F1F442000                    |         ALIGN 16,5
|00000045:660F1F8420000000006690        |         ALIGN 16
|00000050:660F1F442000                  |         ALIGN 16,6
|00000056:660F1F84200000000090          |         ALIGN 16
|00000060:0F1F8000000000                |         ALIGN 16,7
|00000067:660F1F842000000000            |         ALIGN 16
|00000070:0F1F842000000000              |         ALIGN 16,8
|00000078:0F1F842000000000              |         ALIGN 16
|00000080:660F1F842000000000            |         ALIGN 16,9
|00000089:                              |         ALIGN DWORD,BYTE
|00000089:90                            |         ALIGN WORD
|0000008A:90                            |         ALIGN 16,11
|0000008B:C3                            |         RET
|                                       |        ENDPROGRAM t2508
|        **** ListMap "t2508.bin",model=TINY,groups=1,segments=6,entry=,stack=[COMGROUP]:0000FFFEh
|        [COMGROUP],FA=00000000h,VA=00000000h,size=000003E1h=993,group [Code16] [Code32] [Code64] [Data16] [Data32] [Data64]
|          [Code16],FA=00000000h,VA=00000000h,size=0000012Ch=300,width=16,align=0040h,purpose=CODE
|          [Code32],FA=00000140h,VA=00000140h,size=0000011Ch=284,width=32,align=0040h,purpose=CODE
|          [Code64],FA=00000280h,VA=00000280h,size=0000008Ch=140,width=64,align=0040h,purpose=CODE
|          [Data16],FA=00000340h,VA=00000340h,size=00000021h=33,width=16,align=0040h,purpose=DATA
|          [Data32],FA=00000380h,VA=00000380h,size=00000021h=33,width=32,align=0040h,purpose=DATA
|          [Data64],FA=000003C0h,VA=000003C0h,size=00000021h=33,width=32,align=0040h,purpose=DATA
</samp></dd></dl>
<dl><dt>Expected messages <q>t2508.out</q></dt><dd><code class='PRE'>
<!--M-->I0180 Assembling source file "t2508.htm".
<!--M-->I0270 Assembling source "t2508".
<!--M-->I0310 Assembling source pass 1.
<!--M-->I0330 Assembling source pass 2 - final.
<!--M-->I0470 Assembling program "t2508". "t2508.htm"{56}
<!--M-->I0510 Assembling program pass 1. "t2508.htm"{56}
<!--M-->I0530 Assembling program pass 2 - final. "t2508.htm"{56}
<!--M-->I0660 16bit TINY BIN file "t2508.bin" created, size=993. "t2508.htm"{185}
<!--M-->I0650 Program "t2508" assembled in 2 passes with errorlevel 0. "t2508.htm"{185}
<!--M-->I0750 Source "t2508" (278 lines) assembled in 2 passes with errorlevel 0.
<!--M-->I0860 Listing file "t2508.htm.lst" created, size=9151.
<!--M-->I0990 EuroAssembler terminated with errorlevel 0.
</code></dd></dl>
<dl><dt>Expected output file <q>t2508.
<!--E-->bin
</q></dt><dd><pre>
<!--B-->0000: 90 90 87 C9 87 D2 87 DB 87 E4 87 C9 87 D2 87 DB  &curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;
<!--B-->0010: 87 C9 90 87 C9 87 D2 87 DB 87 E4 90 87 C9 87 D2  &curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;
<!--B-->0020: 90 87 C9 90 87 C9 87 D2 87 DB 87 E4 87 C9 87 D2  &curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;
<!--B-->0030: 87 C9 87 D2 90 87 C9 87 D2 87 DB 87 E4 90 87 C9  &curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;
<!--B-->0040: 90 87 C9 87 D2 90 87 C9 87 D2 87 DB 87 E4 87 C9  &curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;
<!--B-->0050: 87 C9 87 D2 87 DB 90 87 C9 87 D2 87 DB 87 E4 90  &curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;
<!--B-->0060: 90 87 C9 87 D2 87 DB 90 87 C9 87 D2 87 DB 87 E4  &curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;
<!--B-->0070: 87 C9 87 D2 87 DB 87 E4 87 C9 87 D2 87 DB 87 E4  &curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;
<!--B-->0080: 90 87 C9 87 D2 87 DB 87 E4 90 87 C9 87 D2 87 DB  &curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;
<!--B-->0090: 90 67 0F 1F 84 20 00 00 00 00 67 0F 1F 44 20 00  &curren;g&middot;&middot;&curren;&macr;&deg;&deg;&deg;&deg;g&middot;&middot;D&macr;&deg;
<!--B-->00A0: 66 90 67 0F 1F 84 20 00 00 00 00 67 0F 1F 40 00  f&curren;g&middot;&middot;&curren;&macr;&deg;&deg;&deg;&deg;g&middot;&middot;@&deg;
<!--B-->00B0: 66 67 90 67 0F 1F 84 20 00 00 00 00 67 0F 1F 00  fg&curren;g&middot;&middot;&curren;&macr;&deg;&deg;&deg;&deg;g&middot;&middot;&deg;
<!--B-->00C0: 67 0F 1F 00 67 0F 1F 84 20 00 00 00 00 66 67 90  g&middot;&middot;&deg;g&middot;&middot;&curren;&macr;&deg;&deg;&deg;&deg;fg&curren;
<!--B-->00D0: 67 0F 1F 40 00 67 0F 1F 84 20 00 00 00 00 66 90  g&middot;&middot;@&deg;g&middot;&middot;&curren;&macr;&deg;&deg;&deg;&deg;f&curren;
<!--B-->00E0: 67 0F 1F 44 20 00 67 0F 1F 84 20 00 00 00 00 90  g&middot;&middot;D&macr;&deg;g&middot;&middot;&curren;&macr;&deg;&deg;&deg;&deg;&curren;
<!--B-->00F0: 66 67 0F 1F 44 20 00 67 0F 1F 84 20 00 00 00 00  fg&middot;&middot;D&macr;&deg;g&middot;&middot;&curren;&macr;&deg;&deg;&deg;&deg;
<!--B-->0100: 67 0F 1F 80 00 00 00 00 67 0F 1F 80 00 00 00 00  g&middot;&middot;&curren;&deg;&deg;&deg;&deg;g&middot;&middot;&curren;&deg;&deg;&deg;&deg;
<!--B-->0110: 67 0F 1F 84 20 00 00 00 00 66 67 0F 1F 44 20 00  g&middot;&middot;&curren;&macr;&deg;&deg;&deg;&deg;fg&middot;&middot;D&macr;&deg;
<!--B-->0120: 90 90 67 0F 1F 84 20 00 00 00 00 C3 90 90 90 90  &curren;&curren;g&middot;&middot;&curren;&macr;&deg;&deg;&deg;&deg;&curren;&curren;&curren;&curren;&curren;
<!--B-->0130: 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90  &curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;
<!--B-->0140: 90 66 3E 8D 84 20 00 00 00 00 8D 80 00 00 00 00  &curren;f&gt;&curren;&curren;&macr;&deg;&deg;&deg;&deg;&curren;&curren;&deg;&deg;&deg;&deg;
<!--B-->0150: 66 90 66 3E 8D 84 20 00 00 00 00 3E 8D 44 20 00  f&curren;f&gt;&curren;&curren;&macr;&deg;&deg;&deg;&deg;&gt;&curren;D&macr;&deg;
<!--B-->0160: 8D 40 00 66 3E 8D 84 20 00 00 00 00 8D 44 20 00  &curren;@&deg;f&gt;&curren;&curren;&macr;&deg;&deg;&deg;&deg;&curren;D&macr;&deg;
<!--B-->0170: 8D 44 20 00 66 3E 8D 84 20 00 00 00 00 8D 40 00  &curren;D&macr;&deg;f&gt;&curren;&curren;&macr;&deg;&deg;&deg;&deg;&curren;@&deg;
<!--B-->0180: 3E 8D 44 20 00 66 3E 8D 84 20 00 00 00 00 66 90  &gt;&curren;D&macr;&deg;f&gt;&curren;&curren;&macr;&deg;&deg;&deg;&deg;f&curren;
<!--B-->0190: 8D 80 00 00 00 00 66 3E 8D 84 20 00 00 00 00 90  &curren;&curren;&deg;&deg;&deg;&deg;f&gt;&curren;&curren;&macr;&deg;&deg;&deg;&deg;&curren;
<!--B-->01A0: 8D 84 20 00 00 00 00 66 3E 8D 84 20 00 00 00 00  &curren;&curren;&macr;&deg;&deg;&deg;&deg;f&gt;&curren;&curren;&macr;&deg;&deg;&deg;&deg;
<!--B-->01B0: 3E 8D 84 20 00 00 00 00 3E 8D 84 20 00 00 00 00  &gt;&curren;&curren;&macr;&deg;&deg;&deg;&deg;&gt;&curren;&curren;&macr;&deg;&deg;&deg;&deg;
<!--B-->01C0: 66 3E 8D 84 20 00 00 00 00 8D 84 20 00 00 00 00  f&gt;&curren;&curren;&macr;&deg;&deg;&deg;&deg;&curren;&curren;&macr;&deg;&deg;&deg;&deg;
<!--B-->01D0: 90 66 0F 1F 84 20 00 00 00 00 66 0F 1F 44 20 00  &curren;f&middot;&middot;&curren;&macr;&deg;&deg;&deg;&deg;f&middot;&middot;D&macr;&deg;
<!--B-->01E0: 66 90 66 0F 1F 84 20 00 00 00 00 0F 1F 44 20 00  f&curren;f&middot;&middot;&curren;&macr;&deg;&deg;&deg;&deg;&middot;&middot;D&macr;&deg;
<!--B-->01F0: 0F 1F 00 66 0F 1F 84 20 00 00 00 00 0F 1F 40 00  &middot;&middot;&deg;f&middot;&middot;&curren;&macr;&deg;&deg;&deg;&deg;&middot;&middot;@&deg;
<!--B-->0200: 0F 1F 40 00 66 0F 1F 84 20 00 00 00 00 0F 1F 00  &middot;&middot;@&deg;f&middot;&middot;&curren;&macr;&deg;&deg;&deg;&deg;&middot;&middot;&deg;
<!--B-->0210: 0F 1F 44 20 00 66 0F 1F 84 20 00 00 00 00 66 90  &middot;&middot;D&macr;&deg;f&middot;&middot;&curren;&macr;&deg;&deg;&deg;&deg;f&curren;
<!--B-->0220: 66 0F 1F 44 20 00 66 0F 1F 84 20 00 00 00 00 90  f&middot;&middot;D&macr;&deg;f&middot;&middot;&curren;&macr;&deg;&deg;&deg;&deg;&curren;
<!--B-->0230: 0F 1F 80 00 00 00 00 66 0F 1F 84 20 00 00 00 00  &middot;&middot;&curren;&deg;&deg;&deg;&deg;f&middot;&middot;&curren;&macr;&deg;&deg;&deg;&deg;
<!--B-->0240: 0F 1F 84 20 00 00 00 00 0F 1F 84 20 00 00 00 00  &middot;&middot;&curren;&macr;&deg;&deg;&deg;&deg;&middot;&middot;&curren;&macr;&deg;&deg;&deg;&deg;
<!--B-->0250: 66 0F 1F 84 20 00 00 00 00 90 90 C3 90 90 90 90  f&middot;&middot;&curren;&macr;&deg;&deg;&deg;&deg;&curren;&curren;&curren;&curren;&curren;&curren;&curren;
<!--B-->0260: 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90  &curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;
<!--B-->0270: 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90  &curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;
<!--B-->0280: 90 66 0F 1F 84 20 00 00 00 00 66 0F 1F 44 20 00  &curren;f&middot;&middot;&curren;&macr;&deg;&deg;&deg;&deg;f&middot;&middot;D&macr;&deg;
<!--B-->0290: 66 90 66 0F 1F 84 20 00 00 00 00 0F 1F 44 20 00  f&curren;f&middot;&middot;&curren;&macr;&deg;&deg;&deg;&deg;&middot;&middot;D&macr;&deg;
<!--B-->02A0: 0F 1F 00 66 0F 1F 84 20 00 00 00 00 0F 1F 40 00  &middot;&middot;&deg;f&middot;&middot;&curren;&macr;&deg;&deg;&deg;&deg;&middot;&middot;@&deg;
<!--B-->02B0: 0F 1F 40 00 66 0F 1F 84 20 00 00 00 00 0F 1F 00  &middot;&middot;@&deg;f&middot;&middot;&curren;&macr;&deg;&deg;&deg;&deg;&middot;&middot;&deg;
<!--B-->02C0: 0F 1F 44 20 00 66 0F 1F 84 20 00 00 00 00 66 90  &middot;&middot;D&macr;&deg;f&middot;&middot;&curren;&macr;&deg;&deg;&deg;&deg;f&curren;
<!--B-->02D0: 66 0F 1F 44 20 00 66 0F 1F 84 20 00 00 00 00 90  f&middot;&middot;D&macr;&deg;f&middot;&middot;&curren;&macr;&deg;&deg;&deg;&deg;&curren;
<!--B-->02E0: 0F 1F 80 00 00 00 00 66 0F 1F 84 20 00 00 00 00  &middot;&middot;&curren;&deg;&deg;&deg;&deg;f&middot;&middot;&curren;&macr;&deg;&deg;&deg;&deg;
<!--B-->02F0: 0F 1F 84 20 00 00 00 00 0F 1F 84 20 00 00 00 00  &middot;&middot;&curren;&macr;&deg;&deg;&deg;&deg;&middot;&middot;&curren;&macr;&deg;&deg;&deg;&deg;
<!--B-->0300: 66 0F 1F 84 20 00 00 00 00 90 90 C3 00 00 00 00  f&middot;&middot;&curren;&macr;&deg;&deg;&deg;&deg;&curren;&curren;&curren;&deg;&deg;&deg;&deg;
<!--B-->0310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0360: FF 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &curren;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->03A0: FF 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &curren;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->03B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->03C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->03D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->03E0: FF                                               &curren;
</pre></dd></dl>
<!--TAILMENU-->
<!--Contents below the marker {!==TAILMENU==} was generated by "generate.php".-->
<br class='CLEAR'/><a id='bottom' href='#top'>&#x25B2;Back to the top&#x25B2;</a>
</body></html>