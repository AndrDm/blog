<!doctype html><html lang='en'><head>
<meta http-equiv='Content-Type' content='text/html; charset=utf-8'/>
<meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=2.0, user-scalable=yes'>
<meta name='robots' content='ALL,FOLLOW'/>
<meta name='description' content='t8864.htm test file'/>
<meta name='version' content='20250318'/>
<meta name='author' content='Pavel vitsoft Šrubař'/>
<link rel='stylesheet' href='../euroasm.css' type='text/css'/>
<link rel='shortcut icon' href='../favicon.ico'/>
<title>t8864.htm test file</title>
</head>
<body class='EATESTS' id='top'><div class='HEADMENU'><table>
<tr><td rowspan='2' title='&euro;ASM - assembler and linker'><img src='../favicon.ico' alt='EuroAssembler' />
<td><a href='../index.htm' title='Alphabetical index of all &euro;ASM elements, directives and instructions'>Index</a></td>
<td><a href='../eadoc/' class='EADOC' title='Documentation of EuroAssembler'>Manual</a></td>
<td><a href='https://euroassembler.eu/download/' title='History &amp; download of the latest and previous versions'>Download</a></td>
<td><a href='../easource/' class='EASOURCE' title='Source files of EuroAssembler itself'>Source</a></td>
<td><a href='../maclib/' class='MACLIB' title='Macro libraries shipped with &euro;ASM'>Macros</a></td>
<td rowspan='2' title='Find the searched token in any text file on this site'>
<form method='post' action='../search.php' enctype='multipart/form-data' accept-charset='utf-8'>
<input type='text' id='q' placeholder='Searched word(s)' name='q' value=''/>
<br/><label title='Check the box to find the expression even if it is surrounded by other letters | digits.'>
<input type='checkbox' name='EW'/><small>Embedded word</small></label>
<br/><label title='Check the box for case-insensitive search.'>
<input type='checkbox' name='CI'/><small>Case ins.</small></label>
<input type='submit' title='Search for the specified word|expression in all site files.' name='find' value='Search'/>
</form></td></tr><tr>
<td><a href='../sitemap.htm' title='List of directories and files on this site'>Sitemap</a></td>
<td><a href='../eadoc/links.htm' class='EADOC' title='References and external links to resources used in EuroAssembler developement'>Links</a></td>
<td><a href='https://euroassembler.eu/forum/' title='Discussion forum concerning EuroAssembler'>Forum</a></td>
<td><a href='../eatests/' class='EATESTS' title='Program snippets for testing the function of &euro;ASM'>Tests</a></td>
<td><a href='../objlib/' class='OBJLIB' title='Skeletons and sample objects and projects shipped with &euro;ASM'>Projects</a></td>
</tr></table></div>
<!--Contents above the marker {!==/HEADMENU==} was generated by "generate.php".-->
<!--/HEADMENU-->
<h1 id='TestTitle'>Test <a class='EXT' href='t8864.htm'>t8864</a>:
<!--T-->COFF object module for 64bit Windows links COFF module
</h1><button onclick='window.location="../eatests/manager.php?test=t8864";'>Manage t8864</button>
<br class='CLEAR'/>
<dl><dt>Source &amp; expected listing <q>t8864.htm.lst</q></dt><dd><samp>
|                       |  EUROASM AUTOSEGMENT=ON,CPU=X64,DUMPWIDTH=25
|7438383634             |%test %SET t8864
|                       |;;
|                       |;; Create the first auxilliary COFF module.
|                       |%test.WB PROGRAM FORMAT=COFF,MODEL=FLAT,WIDTH=64
|[.text]                ::::Section changed.
|00000000:              |Write.W64:: PROC           ; Write ASCIIZ string DS:RSI in 64bit Windows.
|                       |  IMPORT GetStdHandle:,WriteFile: ; Declare imported Windows kernel functions.
|00000000:4889E5        |  MOV RBP,RSP              ; Save (perhaps unaligned) stack pointer.
|00000003:4883E4F0      |  AND RSP,-16              ; OWORD alignment downwards.
|00000007:4883EC30      |  SUB RSP,5*8+8            ; Allocate shadow space on stack for max 5 arguments.
|0000000B:48C7C1F5FFFFFF|  MOV RCX,-11              ; %1 Identifier of standard output STD_OUTPUT_HANDLE.
|00000012:E8(00000000)  |  CALL GetStdHandle:       ; Fastcall the imported Windows function with 1 argument.
|00000017:4889C3        |  MOV RBX,RAX              ; Temporary save the returned StdOutput handle to RBX.
|0000001A:4889F7        |  MOV RDI,RSI              ; Use RDI to find the end of input string.
|0000001D:31C9          |  XOR ECX,ECX              ; Clear RCX to keep the size of input string.
|0000001F:31C0          |  XOR EAX,EAX              ; Clear AL, the searched terminating character.
|00000021:48F7D1        |  NOT RCX                  ; Assume unlimited possible string size.
|00000024:F2AE          |  REPNE SCASB              ; Find the zero terminator.
|00000026:48F7D1        |  NOT RCX                  ; Get string size to RCX.
|00000029:4889442420    |  MOV [RSP+20h],RAX        ; %5 Overlapped I/O is not used.
|0000002E:4C8D4C2418    |  LEA R9,[RSP+18h]         ; %4 Local variable for the number of written bytes uses shadowed R9.
|00000033:4989C8        |  MOV R8,RCX               ; %3 String size.
|00000036:4889F2        |  MOV RDX,RSI              ; %2 String address.
|00000039:4889D9        |  MOV RCX,RBX              ; %1 Standard output file handle.
|0000003C:E8(00000000)  |  CALL WriteFile:          ; Fastcall the imported function with 5 arguments.
|00000041:4889EC        |  MOV RSP,RBP              ; Restore the stack.
|00000044:C3            |  RET                      ; Return to caller.
|00000045:              | ENDPROC Write.W64:
|                       |;;
|00000045:              |Beep.W64:: PROC            ; Play a sound in 64bit Windows.
|00000045:488D35(000000~|  LEA RSI,[=B"Beeping..."] ; Define a literal string in [.rodata].
|0000004C:E8AFFFFFFF    |  CALL Write.W64::         ; Display the notification "Beeping...".
|                       |  IMPORT Beep:             ; Declare imported Windows kernel function.
|00000051:4889E5        |  MOV RBP,RSP              ; Save (perhaps unaligned) stack pointer.
|00000054:4883E4F0      |  AND RSP,-16              ; OWORD alignment downwards.
|00000058:4883EC20      |  SUB RSP,4*8              ; Allocate shadow space on stack.
|0000005C:BAC8000000    |  MOV RDX,200              ; %2 Sound duration [ms].
|00000061:B9B8010000    |  MOV RCX,440              ; %1 Sound frequency [Hz].
|00000066:E8(00000000)  |  CALL Beep:               ; Fastcall the imported function with 2 arguments.
|0000006B:BA90010000    |  MOV RDX,400              ; %2 Sound duration [ms].
|00000070:B94B020000    |  MOV RCX,587              ; %1 Sound frequency [Hz].
|00000075:E8(00000000)  |  CALL Beep:               ; Fastcall the imported function with 2 arguments.
|0000007A:4889EC        |  MOV RSP,RBP              ; Restore the stack.
|0000007D:C3            |  RET                      ; Return to caller.
|0000007E:              | ENDPROC Beep.W64:
|[@LT1]                 ====ListLiterals in section [@LT1].
|00000000:42656570696E~~=B"Beeping..."
|                       |ENDPROGRAM %test.WB
|        **** ListMap "t8864.WB.obj",model=FLAT,groups=0,segments=3,entry=,stack=
|          [.text],FA=0000008Ch,RVA=00000000h,size=0000007Eh=126,width=64,align=0010h,purpose=CODE
|          [.rodata],FA=0000013Ch,RVA=00000000h,size=0000000Bh=11,width=64,align=0010h,purpose=RODATA+LITERAL
|          [.drectve],FA=00000147h,RVA=00000000h,size=00000034h=52,width=0,align=1,purpose=DRECTVE
|        **** ListGlobals "t8864.WB.obj",Global=0,Public=2,Extern=0,eXport=0,Import=3
|        Beep,[Beep]:00000000h,scope='I',lib="kernel32.dll"
|        Beep.W64,[.text]:00000045h,scope='P'
|        GetStdHandle,[GetStdHandle]:00000000h,scope='I',lib="kernel32.dll"
|        Write.W64,[.text]:00000000h,scope='P'
|        WriteFile,[WriteFile]:00000000h,scope='I',lib="kernel32.dll"
|                       |;;
|                       |;; Create the second auxilliary COFF module.
|                       |%test.EX PROGRAM FORMAT=COFF,MODEL=FLAT,WIDTH=64
|[.text]                ::::Section changed.
|00000000:              |Exit.W64:: PROC            ; Terminate program in 64bit Windows.
|00000000:488D35(000000~|  LEA RSI,[.M:]            ; Address in segment [.bss] for the message.
|00000007:C706456E6400  |  MOVD [RSI+0],"End"       ; Dynamically define the message "End".
|0000000D:C746030D0A0000|  MOVD [RSI+3],0x0A0D      ; CR+LF.
|00000014:E8(00000000)  |  CALL Write.W64::         ; Display the notification "End".
|                       |  IMPORT ExitProcess       ; Declare imported Windows kernel function.
|00000019:4883E4F0      |  AND RSP,-16              ; OWORD alignment downwards.
|0000001D:4883EC20      |  SUB RSP,4*8              ; Allocate shadow space on stack.
|00000021:31C9          |  XOR ECX,ECX              ; %1 Terminate with errorlevel 0.
|00000023:E9(00000000)  |  JMP ExitProcess:         ; Use imported function with 1 argument. No return.
|[.bss]                 ::::Section changed.
|00000000:..............|.M: DB 7*BYTE              ; Reserve space for ASCIIZ string "End" in segment [.bss].
|[.text]                ::::Section changed.
|00000028:              | ENDPROC Exit.W64:
|                       |ENDPROGRAM %test.EX
|        **** ListMap "t8864.EX.obj",model=FLAT,groups=0,segments=3,entry=,stack=
|          [.text],FA=0000008Ch,RVA=00000000h,size=00000028h=40,width=64,align=0010h,purpose=CODE
|          [.bss],FA=00000000h,RVA=00000000h,size=00000007h=7,width=64,align=0010h,purpose=BSS
|          [.drectve],FA=000000D2h,RVA=00000000h,size=00000014h=20,width=0,align=1,purpose=DRECTVE
|        **** ListGlobals "t8864.EX.obj",Global=0,Public=1,Extern=1,eXport=0,Import=1
|        Exit.W64,[.text]:00000000h,scope='P'
|        ExitProcess,[ExitProcess]:00000000h,scope='I',lib="kernel32.dll"
|        Write.W64,[Write.W64]:00000000h,scope='E'
|                       |;;
|                       |;; Create the main COFF module.
|                       |%test PROGRAM FORMAT=COFF,MODEL=FLAT,WIDTH=64
|                       |   LINK %test.WB.obj, %test.EX.obj
|[.data]                ::::Section changed.
|00000000:363462697420~~|Msg:: DB '%^WIDTH[]bit %^MODEL %^FORMAT program "%^OUTFILE".',13,10,0
|                       |ENDPROGRAM %test
|# I0560 Linking COFF module "./t8864.WB.obj".
|# I0563 Accepting link directive '/IMPORT:GetStdHandle'.
|# I0563 Accepting link directive '/IMPORT:WriteFile'.
|# I0563 Accepting link directive '/IMPORT:Beep'.
|# I0560 Linking COFF module "./t8864.EX.obj".
|# I0563 Accepting link directive '/IMPORT:ExitProcess'.
|        **** ListMap "t8864.obj",model=FLAT,groups=0,segments=5,entry=,stack=
|          [.text],FA=000000DCh,RVA=00000000h,size=000000A8h=168,width=64,align=0010h,purpose=CODE
|          [.rodata],FA=000001CAh,RVA=00000000h,size=0000000Bh=11,width=64,align=0010h,purpose=RODATA
|          [.data],FA=000001D5h,RVA=00000000h,size=00000027h=39,width=64,align=0010h,purpose=DATA
|          [.bss],FA=00000000h,RVA=00000000h,size=00000007h=7,width=64,align=0010h,purpose=BSS
|          [.drectve],FA=000001FCh,RVA=00000000h,size=00000048h=72,width=0,align=1,purpose=DRECTVE
|        **** ListGlobals "t8864.obj",Global=0,Public=4,Extern=0,eXport=0,Import=4
|        Beep,[Beep]:00000000h,scope='I',lib="kernel32.dll"
|        Beep.W64,[.text]:00000045h,scope='P'
|        Exit.W64,[.text]:00000080h,scope='P'
|        ExitProcess,[ExitProcess]:00000000h,scope='I',lib="kernel32.dll"
|        GetStdHandle,[GetStdHandle]:00000000h,scope='I',lib="kernel32.dll"
|        Msg,[.data]:00000000h,scope='P'
|        Write.W64,[.text]:00000000h,scope='P'
|        WriteFile,[WriteFile]:00000000h,scope='I',lib="kernel32.dll"
</samp></dd></dl>
<dl><dt>Expected messages <q>t8864.out</q></dt><dd><code class='PRE'>
<!--M-->I0180 Assembling source file "t8864.htm".
<!--M-->I0270 Assembling source "t8864".
<!--M-->I0310 Assembling source pass 1.
<!--M-->I0330 Assembling source pass 2 - final.
<!--M-->I0470 Assembling program "t8864.WB". "t8864.htm"{45}
<!--M-->I0510 Assembling program pass 1. "t8864.htm"{45}
<!--M-->I0510 Assembling program pass 2. "t8864.htm"{45}
<!--M-->I0530 Assembling program pass 3 - final. "t8864.htm"{45}
<!--M-->I0660 64bit FLAT COFF file "t8864.WB.obj" created, size=702. "t8864.htm"{89}
<!--M-->I0650 Program "t8864.WB" assembled in 3 passes with errorlevel 0. "t8864.htm"{89}
<!--M-->I0470 Assembling program "t8864.EX". "t8864.htm"{102}
<!--M-->I0510 Assembling program pass 1. "t8864.htm"{102}
<!--M-->I0510 Assembling program pass 2. "t8864.htm"{102}
<!--M-->I0530 Assembling program pass 3 - final. "t8864.htm"{102}
<!--M-->I0660 64bit FLAT COFF file "t8864.EX.obj" created, size=483. "t8864.htm"{118}
<!--M-->I0650 Program "t8864.EX" assembled in 3 passes with errorlevel 0. "t8864.htm"{118}
<!--M-->I0470 Assembling program "t8864". "t8864.htm"{129}
<!--M-->I0510 Assembling program pass 1. "t8864.htm"{129}
<!--M-->I0510 Assembling program pass 2. "t8864.htm"{129}
<!--M-->I0530 Assembling program pass 3 - final. "t8864.htm"{129}
<!--M-->I0560 Linking COFF module "./t8864.WB.obj". "t8864.htm"{133}
<!--M-->I0563 Accepting link directive '/IMPORT:GetStdHandle'. "t8864.htm"{133}
<!--M-->I0563 Accepting link directive '/IMPORT:WriteFile'. "t8864.htm"{133}
<!--M-->I0563 Accepting link directive '/IMPORT:Beep'. "t8864.htm"{133}
<!--M-->I0560 Linking COFF module "./t8864.EX.obj". "t8864.htm"{133}
<!--M-->I0563 Accepting link directive '/IMPORT:ExitProcess'. "t8864.htm"{133}
<!--M-->I0660 64bit FLAT COFF file "t8864.obj" created, size=1069. "t8864.htm"{133}
<!--M-->I0650 Program "t8864" assembled in 3 passes with errorlevel 0. "t8864.htm"{133}
<!--M-->I0750 Source "t8864" (262 lines) assembled in 2 passes with errorlevel 0.
<!--M-->I0860 Listing file "t8864.htm.lst" created, size=8650.
<!--M-->I0990 EuroAssembler terminated with errorlevel 0.
</code></dd></dl>
<dl><dt>Expected output file <q>t8864.
<!--E-->obj
</q></dt><dd><pre>
<!--B-->0000: 64 86 05 00 00 00 00 00 44 02 00 00 17 00 00 00  d&curren;&middot;&deg;&deg;&deg;&deg;&deg;D&middot;&deg;&deg;&middot;&deg;&deg;&deg;
<!--B-->0010: 00 00 20 00 2E 74 65 78 74 00 00 00 00 00 00 00  &deg;&deg;&macr;&deg;.text&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0020: 00 00 00 00 A8 00 00 00 DC 00 00 00 84 01 00 00  &deg;&deg;&deg;&deg;&curren;&deg;&deg;&deg;&curren;&deg;&deg;&deg;&curren;&middot;&deg;&deg;
<!--B-->0030: 00 00 00 00 07 00 00 00 20 00 50 60 2E 72 6F 64  &deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&macr;&deg;P`.rod
<!--B-->0040: 61 74 61 00 00 00 00 00 00 00 00 00 0B 00 00 00  ata&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;
<!--B-->0050: CA 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &curren;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0060: 40 00 50 40 2E 64 61 74 61 00 00 00 00 00 00 00  @&deg;P@.data&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0070: 00 00 00 00 27 00 00 00 D5 01 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&#039;&deg;&deg;&deg;&curren;&middot;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0080: 00 00 00 00 00 00 00 00 40 00 50 C0 2E 62 73 73  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;@&deg;P&curren;.bss
<!--B-->0090: 00 00 00 00 00 00 00 00 00 00 00 00 07 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;
<!--B-->00A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->00B0: 80 00 50 C0 2E 64 72 65 63 74 76 65 00 00 00 00  &curren;&deg;P&curren;.drectve&deg;&deg;&deg;&deg;
<!--B-->00C0: 00 00 00 00 48 00 00 00 FC 01 00 00 00 00 00 00  &deg;&deg;&deg;&deg;H&deg;&deg;&deg;&curren;&middot;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->00D0: 00 00 00 00 00 00 00 00 00 0A 10 02 48 89 E5 48  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&not;&middot;&middot;H&curren;&curren;H
<!--B-->00E0: 83 E4 F0 48 83 EC 30 48 C7 C1 F5 FF FF FF E8 00  &curren;&curren;&curren;H&curren;&curren;0H&curren;&curren;&curren;&curren;&curren;&curren;&curren;&deg;
<!--B-->00F0: 00 00 00 48 89 C3 48 89 F7 31 C9 31 C0 48 F7 D1  &deg;&deg;&deg;H&curren;&curren;H&curren;&curren;1&curren;1&curren;H&curren;&curren;
<!--B-->0100: F2 AE 48 F7 D1 48 89 44 24 20 4C 8D 4C 24 18 49  &curren;&curren;H&curren;&curren;H&curren;D$&macr;L&curren;L$&middot;I
<!--B-->0110: 89 C8 48 89 F2 48 89 D9 E8 00 00 00 00 48 89 EC  &curren;&curren;H&curren;&curren;H&curren;&curren;&curren;&deg;&deg;&deg;&deg;H&curren;&curren;
<!--B-->0120: C3 48 8D 35 00 00 00 00 E8 AF FF FF FF 48 89 E5  &curren;H&curren;5&deg;&deg;&deg;&deg;&curren;&curren;&curren;&curren;&curren;H&curren;&curren;
<!--B-->0130: 48 83 E4 F0 48 83 EC 20 BA C8 00 00 00 B9 B8 01  H&curren;&curren;&curren;H&curren;&curren;&macr;&curren;&curren;&deg;&deg;&deg;&curren;&curren;&middot;
<!--B-->0140: 00 00 E8 00 00 00 00 BA 90 01 00 00 B9 4B 02 00  &deg;&deg;&curren;&deg;&deg;&deg;&deg;&curren;&curren;&middot;&deg;&deg;&curren;K&middot;&deg;
<!--B-->0150: 00 E8 00 00 00 00 48 89 EC C3 90 90 48 8D 35 00  &deg;&curren;&deg;&deg;&deg;&deg;H&curren;&curren;&curren;&curren;&curren;H&curren;5&deg;
<!--B-->0160: 00 00 00 C7 06 45 6E 64 00 C7 46 03 0D 0A 00 00  &deg;&deg;&deg;&curren;&middot;End&deg;&curren;F&middot;&middot;&not;&deg;&deg;
<!--B-->0170: E8 67 FF FF FF 48 83 E4 F0 48 83 EC 20 31 C9 E9  &curren;g&curren;&curren;&curren;H&curren;&curren;&curren;H&curren;&curren;&macr;1&curren;&curren;
<!--B-->0180: 00 00 00 00 13 00 00 00 13 00 00 00 04 00 3D 00  &deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;=&deg;
<!--B-->0190: 00 00 16 00 00 00 04 00 48 00 00 00 08 00 00 00  &deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;H&deg;&deg;&deg;&middot;&deg;&deg;&deg;
<!--B-->01A0: 04 00 67 00 00 00 0F 00 00 00 04 00 76 00 00 00  &middot;&deg;g&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;v&deg;&deg;&deg;
<!--B-->01B0: 0F 00 00 00 04 00 83 00 00 00 02 00 00 00 04 00  &middot;&deg;&deg;&deg;&middot;&deg;&curren;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;
<!--B-->01C0: A4 00 00 00 12 00 00 00 04 00 42 65 65 70 69 6E  &curren;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;Beepin
<!--B-->01D0: 67 2E 2E 2E 00 36 34 62 69 74 20 46 4C 41 54 20  g...&deg;64bit&macr;FLAT&macr;
<!--B-->01E0: 43 4F 46 46 20 70 72 6F 67 72 61 6D 20 22 74 38  COFF&macr;program&macr;&quot;t8
<!--B-->01F0: 38 36 34 2E 6F 62 6A 22 2E 0D 0A 00 20 2F 49 4D  864.obj&quot;.&middot;&not;&deg;&macr;/IM
<!--B-->0200: 50 4F 52 54 3A 42 65 65 70 20 2F 49 4D 50 4F 52  PORT:Beep&macr;/IMPOR
<!--B-->0210: 54 3A 47 65 74 53 74 64 48 61 6E 64 6C 65 20 2F  T:GetStdHandle&macr;/
<!--B-->0220: 49 4D 50 4F 52 54 3A 57 72 69 74 65 46 69 6C 65  IMPORT:WriteFile
<!--B-->0230: 20 2F 49 4D 50 4F 52 54 3A 45 78 69 74 50 72 6F  &macr;/IMPORT:ExitPro
<!--B-->0240: 63 65 73 73 2E 66 69 6C 65 00 00 00 00 00 00 00  cess.file&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0250: FE FF 00 00 67 01 74 38 38 36 34 2E 68 74 6D 00  &curren;&curren;&deg;&deg;g&middot;t8864.htm&deg;
<!--B-->0260: 00 00 00 00 00 00 00 00 2E 62 73 73 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;.bss&deg;&deg;&deg;&deg;
<!--B-->0270: 00 00 00 00 04 00 00 00 03 01 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&middot;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0280: 00 00 00 00 00 00 00 00 00 00 00 00 2E 64 61 74  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;.dat
<!--B-->0290: 61 00 00 00 00 00 00 00 03 00 00 00 03 01 27 00  a&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&middot;&#039;&deg;
<!--B-->02A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->02B0: 2E 64 72 65 63 74 76 65 00 00 00 00 05 00 00 00  .drectve&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;
<!--B-->02C0: 03 01 48 00 00 00 00 00 00 00 00 00 00 00 00 00  &middot;&middot;H&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->02D0: 00 00 00 00 2E 72 6F 64 61 74 61 00 00 00 00 00  &deg;&deg;&deg;&deg;.rodata&deg;&deg;&deg;&deg;&deg;
<!--B-->02E0: 02 00 00 00 03 01 0B 00 00 00 00 00 00 00 00 00  &middot;&deg;&deg;&deg;&middot;&middot;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->02F0: 00 00 00 00 00 00 00 00 2E 74 65 78 74 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;.text&deg;&deg;&deg;
<!--B-->0300: 00 00 00 00 01 00 00 00 03 01 A8 00 00 00 07 00  &deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&middot;&curren;&deg;&deg;&deg;&middot;&deg;
<!--B-->0310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0320: 04 00 00 00 00 00 00 00 02 00 0C 00 03 00 40 4C  &middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&middot;&deg;&middot;&deg;@L
<!--B-->0330: 54 31 00 00 00 00 00 00 00 00 02 00 01 01 03 00  T1&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&middot;&middot;&middot;&deg;
<!--B-->0340: 00 00 00 00 13 00 00 00 00 00 00 00 04 00 0C 00  &deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&middot;&deg;
<!--B-->0350: 03 00 42 65 65 70 00 00 00 00 00 00 00 00 00 00  &middot;&deg;Beep&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0360: 01 01 02 00 42 65 65 70 2E 57 36 34 45 00 00 00  &middot;&middot;&middot;&deg;Beep.W64E&deg;&deg;&deg;
<!--B-->0370: 01 00 01 02 02 00 45 78 69 74 2E 57 36 34 80 00  &middot;&deg;&middot;&middot;&middot;&deg;Exit.W64&curren;&deg;
<!--B-->0380: 00 00 01 00 01 02 02 00 00 00 00 00 1E 00 00 00  &deg;&deg;&middot;&deg;&middot;&middot;&middot;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;
<!--B-->0390: 00 00 00 00 00 00 01 01 02 00 00 00 00 00 2A 00  &deg;&deg;&deg;&deg;&deg;&deg;&middot;&middot;&middot;&deg;&deg;&deg;&deg;&deg;*&deg;
<!--B-->03A0: 00 00 00 00 00 00 00 00 01 01 02 00 4D 73 67 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&middot;&middot;&deg;Msg&deg;
<!--B-->03B0: 00 00 00 00 00 00 00 00 03 00 0C 00 02 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&middot;&deg;&middot;&deg;&deg;&deg;
<!--B-->03C0: 00 00 37 00 00 00 00 00 00 00 01 00 01 02 02 00  &deg;&deg;7&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&middot;&middot;&middot;&deg;
<!--B-->03D0: 00 00 00 00 41 00 00 00 00 00 00 00 00 00 01 01  &deg;&deg;&deg;&deg;A&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&middot;
<!--B-->03E0: 02 00 4B 00 00 00 3D 42 22 42 65 65 70 69 6E 67  &middot;&deg;K&deg;&deg;&deg;=B&quot;Beeping
<!--B-->03F0: 2E 2E 2E 22 00 45 78 69 74 2E 57 36 34 2E 4D 00  ...&quot;&deg;Exit.W64.M&deg;
<!--B-->0400: 45 78 69 74 50 72 6F 63 65 73 73 00 47 65 74 53  ExitProcess&deg;GetS
<!--B-->0410: 74 64 48 61 6E 64 6C 65 00 57 72 69 74 65 2E 57  tdHandle&deg;Write.W
<!--B-->0420: 36 34 00 57 72 69 74 65 46 69 6C 65 00           64&deg;WriteFile&deg;
</pre></dd></dl>
<!--TAILMENU-->
<!--Contents below the marker {!==TAILMENU==} was generated by "generate.php".-->
<br class='CLEAR'/><a id='bottom' href='#top'>&#x25B2;Back to the top&#x25B2;</a>
</body></html>