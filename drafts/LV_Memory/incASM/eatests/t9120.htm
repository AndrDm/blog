<!doctype html><html lang='en'><head>
<meta http-equiv='Content-Type' content='text/html; charset=utf-8'/>
<meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=2.0, user-scalable=yes'>
<meta name='robots' content='ALL,FOLLOW'/>
<meta name='description' content='t9120.htm test file'/>
<meta name='version' content='20250318'/>
<meta name='author' content='Pavel vitsoft Šrubař'/>
<link rel='stylesheet' href='../euroasm.css' type='text/css'/>
<link rel='shortcut icon' href='../favicon.ico'/>
<title>t9120.htm test file</title>
</head>
<body class='EATESTS' id='top'><div class='HEADMENU'><table>
<tr><td rowspan='2' title='&euro;ASM - assembler and linker'><img src='../favicon.ico' alt='EuroAssembler' />
<td><a href='../index.htm' title='Alphabetical index of all &euro;ASM elements, directives and instructions'>Index</a></td>
<td><a href='../eadoc/' class='EADOC' title='Documentation of EuroAssembler'>Manual</a></td>
<td><a href='https://euroassembler.eu/download/' title='History &amp; download of the latest and previous versions'>Download</a></td>
<td><a href='../easource/' class='EASOURCE' title='Source files of EuroAssembler itself'>Source</a></td>
<td><a href='../maclib/' class='MACLIB' title='Macro libraries shipped with &euro;ASM'>Macros</a></td>
<td rowspan='2' title='Find the searched token in any text file on this site'>
<form method='post' action='../search.php' enctype='multipart/form-data' accept-charset='utf-8'>
<input type='text' id='q' placeholder='Searched word(s)' name='q' value=''/>
<br/><label title='Check the box to find the expression even if it is surrounded by other letters | digits.'>
<input type='checkbox' name='EW'/><small>Embedded word</small></label>
<br/><label title='Check the box for case-insensitive search.'>
<input type='checkbox' name='CI'/><small>Case ins.</small></label>
<input type='submit' title='Search for the specified word|expression in all site files.' name='find' value='Search'/>
</form></td></tr><tr>
<td><a href='../sitemap.htm' title='List of directories and files on this site'>Sitemap</a></td>
<td><a href='../eadoc/links.htm' class='EADOC' title='References and external links to resources used in EuroAssembler developement'>Links</a></td>
<td><a href='https://euroassembler.eu/forum/' title='Discussion forum concerning EuroAssembler'>Forum</a></td>
<td><a href='../eatests/' class='EATESTS' title='Program snippets for testing the function of &euro;ASM'>Tests</a></td>
<td><a href='../objlib/' class='OBJLIB' title='Skeletons and sample objects and projects shipped with &euro;ASM'>Projects</a></td>
</tr></table></div>
<!--Contents above the marker {!==/HEADMENU==} was generated by "generate.php".-->
<!--/HEADMENU-->
<h1 id='TestTitle'>Test <a class='EXT' href='t9120.htm'>t9120</a>:
<!--T-->LIBCOF library for 32bit Windows links LIBCOF library
</h1><button onclick='window.location="../eatests/manager.php?test=t9120";'>Manage t9120</button>
<br class='CLEAR'/>
<dl><dt>Source &amp; expected listing <q>t9120.htm.lst</q></dt><dd><samp>
|                       |  EUROASM AUTOSEGMENT=ON,CPU=386,DUMPWIDTH=25
|7439313230             |%test %SET t9120
|                       |;;
|                       |;;  Create the first auxilliary COFF module "%test.WB.obj".
|                       |%test.WB PROGRAM FORMAT=COFF,MODEL=FLAT,WIDTH=32
|[.text]                ::::Section changed.
|00000000:              |Write.W32:: PROC         ; Display ASCIIZ string pointed to by ESI using Windows.
|                       |  IMPORT GetStdHandle:,WriteFile: ; Declare imported Windows kernel functions.
|00000000:6AF5          |  PUSH -11               ; %1 Identifier of standard output STD_OUTPUT_HANDLE.
|00000002:E8(00000000)  |  CALL GetStdHandle:     ; Stdcall the imported Windows function with 1 argument.
|00000007:89C3          |  MOV EBX,EAX            ; Save the returned StdOutput handle to EBX.
|00000009:89F7          |  MOV EDI,ESI            ; Use EDI to find the end of input string.
|0000000B:31C9          |  XOR ECX,ECX            ; Clear ECX to keep the size of input string.
|0000000D:31C0          |  XOR EAX,EAX            ; Clear AL, the searched NUL character.
|0000000F:F7D1          |  NOT ECX                ; Assume unlimited possible string size.
|00000011:F2AE          |  REPNE SCASB            ; Find the zero terminator.
|00000013:F7D1          |  NOT ECX                ; Get string size to ECX.
|00000015:52            |  PUSH EDX               ; Alloc temporary DWORD memory variable on stack.
|00000016:89E2          |    MOV EDX,ESP          ; Get address of this DWORD to EDX.
|00000018:50            |    PUSH EAX             ; %5 No overlap of WriteFile.
|00000019:52            |    PUSH EDX             ; %4 Memory variable for number of bytes.
|0000001A:51            |    PUSH ECX             ; %3 String size.
|0000001B:56            |    PUSH ESI             ; %2 String address.
|0000001C:53            |    PUSH EBX             ; %1 Standard output file handle.
|0000001D:E8(00000000)  |    CALL WriteFile:      ; Stdcall the imported function with 5 arguments.
|00000022:5A            |  POP EDX                ; Free and discard the temporary DWORD on stack.
|00000023:C3            |  RET                    ; Return to caller.
|00000024:              | ENDPROC Write.W32:
|                       |;;
|00000024:              |Beep.W32:: PROC          ; Play a sound in 32bit Windows.
|00000024:BE[00000000]  |  MOV ESI,=B"Beeping..." ; Define a literal string in [.rodata].
|00000029:E8D2FFFFFF    |  CALL Write.W32::       ; Display the notification "Beeping...".
|                       |  IMPORT Beep:           ; Declare imported Windows kernel function.
|0000002E:68C8000000    |  PUSH 200               ; %2 Sound duration [ms].
|00000033:68B8010000    |  PUSH 440               ; %1 Sound frequency [Hz].
|00000038:E8(00000000)  |  CALL Beep:             ; Stdcall the imported function with 2 arguments.
|0000003D:6890010000    |  PUSH 400               ; %2 Sound duration [ms].
|00000042:684B020000    |  PUSH 587               ; %1 Sound frequency [Hz].
|00000047:E8(00000000)  |  CALL Beep:             ; Stdcall the imported function with 2 arguments.
|0000004C:C3            |  RET                    ; Return to caller.
|0000004D:              | ENDPROC Beep.W32:
|[@LT1]                 ====ListLiterals in section [@LT1].
|00000000:42656570696E~~=B"Beeping..."
|                       |ENDPROGRAM %test.WB
|        **** ListMap "t9120.WB.obj",model=FLAT,groups=0,segments=3,entry=,stack=
|          [.text],FA=0000008Ch,RVA=00000000h,size=0000004Dh=77,width=32,align=0010h,purpose=CODE
|          [.rodata],FA=0000010Ch,RVA=00000000h,size=0000000Bh=11,width=32,align=0010h,purpose=RODATA+LITERAL
|          [.drectve],FA=00000117h,RVA=00000000h,size=00000034h=52,width=0,align=1,purpose=DRECTVE
|        **** ListGlobals "t9120.WB.obj",Global=0,Public=2,Extern=0,eXport=0,Import=3
|        Beep,[Beep]:00000000h,scope='I',lib="kernel32.dll"
|        Beep.W32,[.text]:00000024h,scope='P'
|        GetStdHandle,[GetStdHandle]:00000000h,scope='I',lib="kernel32.dll"
|        Write.W32,[.text]:00000000h,scope='P'
|        WriteFile,[WriteFile]:00000000h,scope='I',lib="kernel32.dll"
|                       |;;
|                       |;;  Create the second auxilliary COFF module "%test.EX.obj".
|                       |%test.EX PROGRAM FORMAT=COFF,MODEL=FLAT,WIDTH=32
|[.text]                ::::Section changed.
|00000000:              |Exit.W32:: PROC          ; Display the message "End" and terminate the program.
|00000000:BE[00000000]  |  MOV ESI,.M:            ; Address in segment [.bss] for the message.
|00000005:C706456E6400  |  MOVD [ESI+0],"End"     ; Dynamically define the message "End".
|0000000B:C746030D0A0000|  MOVD [ESI+3],0x0A0D    ; CR+LF.
|00000012:E8(00000000)  |  CALL Write.W32::       ; Display the notification "End".
|                       |  IMPORT ExitProcess:    ; Use imported Windows kernel function.
|00000017:6A00          |  PUSH 0                 ; %1 Terminate with errorlevel 0.
|00000019:E9(00000000)  |  JMP ExitProcess:       ; Use imported function with 1 argument.
|[.bss]                 ::::Section changed.
|00000000:..............|.M: DB 7*BYTE            ; Reserve space for ASCIIZ string "End" in segment [.bss].
|[.text]                ::::Section changed.
|0000001E:              | ENDPROC Exit.W32:
|                       |ENDPROGRAM %test.EX
|        **** ListMap "t9120.EX.obj",model=FLAT,groups=0,segments=3,entry=,stack=
|          [.text],FA=0000008Ch,RVA=00000000h,size=0000001Eh=30,width=32,align=0010h,purpose=CODE
|          [.bss],FA=00000000h,RVA=00000000h,size=00000007h=7,width=32,align=0010h,purpose=BSS
|          [.drectve],FA=000000C8h,RVA=00000000h,size=00000014h=20,width=0,align=1,purpose=DRECTVE
|        **** ListGlobals "t9120.EX.obj",Global=0,Public=1,Extern=1,eXport=0,Import=1
|        Exit.W32,[.text]:00000000h,scope='P'
|        ExitProcess,[ExitProcess]:00000000h,scope='I',lib="kernel32.dll"
|        Write.W32,[Write.W32]:00000000h,scope='E'
|                       |;;
|                       |;; Create the auxilliary LIBCOF library from two COFF modules.
|                       |%test.coff PROGRAM FORMAT=LIBCOF,MODEL=FLAT,WIDTH=32
|                       |      LINK %test.WB.obj, %test.EX.obj
|                       |     ENDPROGRAM %test.coff
|# I0560 Linking COFF module "./t9120.WB.obj".
|# I0563 Accepting link directive '/IMPORT:GetStdHandle'.
|# I0563 Accepting link directive '/IMPORT:WriteFile'.
|# I0563 Accepting link directive '/IMPORT:Beep'.
|# I0560 Linking COFF module "./t9120.EX.obj".
|# I0563 Accepting link directive '/IMPORT:ExitProcess'.
|        **** ListMap "t9120.coff.lib",model=FLAT,groups=0,segments=0,entry=,stack=
|        **** ListGlobals "t9120.coff.lib",Global=0,Public=0,Extern=0,eXport=0,Import=0
|                       |;;
|                       |;; Create the main LIBCOF library from LIBCOF library.
|                       |%test PROGRAM FORMAT=LIBCOF,MODEL=FLAT,WIDTH=32
|                       |      GLOBAL Write.W32, Beep.W32, Exit.W32
|                       |      LINK %test.coff.lib
|[.data]                ::::Section changed.
|00000000:333262697420~~|Msg:: DB '%^WIDTH[]bit %^MODEL %^FORMAT program "%^OUTFILE".',13,10,0
|                       |   ENDPROGRAM %test
|# I0561 Linking LIBCOF library "./t9120.coff.lib".
|        **** ListMap "t9120.lib",model=FLAT,groups=0,segments=1,entry=,stack=
|          [.data],FA=0000003Ch,RVA=00000000h,size=00000029h=41,width=32,align=0010h,purpose=DATA
|        **** ListGlobals "t9120.lib",Global=0,Public=1,Extern=3,eXport=0,Import=0
|        Beep.W32,[Beep.W32]:00000000h,scope='E'
|        Exit.W32,[Exit.W32]:00000000h,scope='E'
|        Msg,[.data]:00000000h,scope='P'
|        Write.W32,[Write.W32]:00000000h,scope='E'
</samp></dd></dl>
<dl><dt>Expected messages <q>t9120.out</q></dt><dd><code class='PRE'>
<!--M-->I0180 Assembling source file "t9120.htm".
<!--M-->I0270 Assembling source "t9120".
<!--M-->I0310 Assembling source pass 1.
<!--M-->I0330 Assembling source pass 2 - final.
<!--M-->I0470 Assembling program "t9120.WB". "t9120.htm"{45}
<!--M-->I0510 Assembling program pass 1. "t9120.htm"{45}
<!--M-->I0510 Assembling program pass 2. "t9120.htm"{45}
<!--M-->I0530 Assembling program pass 3 - final. "t9120.htm"{45}
<!--M-->I0660 32bit FLAT COFF file "t9120.WB.obj" created, size=654. "t9120.htm"{84}
<!--M-->I0650 Program "t9120.WB" assembled in 3 passes with errorlevel 0. "t9120.htm"{84}
<!--M-->I0470 Assembling program "t9120.EX". "t9120.htm"{97}
<!--M-->I0510 Assembling program pass 1. "t9120.htm"{97}
<!--M-->I0510 Assembling program pass 2. "t9120.htm"{97}
<!--M-->I0530 Assembling program pass 3 - final. "t9120.htm"{97}
<!--M-->I0660 32bit FLAT COFF file "t9120.EX.obj" created, size=473. "t9120.htm"{111}
<!--M-->I0650 Program "t9120.EX" assembled in 3 passes with errorlevel 0. "t9120.htm"{111}
<!--M-->I0470 Assembling program "t9120.coff". "t9120.htm"{122}
<!--M-->I0510 Assembling program pass 1. "t9120.htm"{122}
<!--M-->I0530 Assembling program pass 2 - final. "t9120.htm"{122}
<!--M-->I0560 Linking COFF module "./t9120.WB.obj". "t9120.htm"{124}
<!--M-->I0563 Accepting link directive '/IMPORT:GetStdHandle'. "t9120.htm"{124}
<!--M-->I0563 Accepting link directive '/IMPORT:WriteFile'. "t9120.htm"{124}
<!--M-->I0563 Accepting link directive '/IMPORT:Beep'. "t9120.htm"{124}
<!--M-->I0560 Linking COFF module "./t9120.EX.obj". "t9120.htm"{124}
<!--M-->I0563 Accepting link directive '/IMPORT:ExitProcess'. "t9120.htm"{124}
<!--M-->I0660 32bit FLAT LIBCOF file "t9120.coff.lib" created, size=1917. "t9120.htm"{124}
<!--M-->I0650 Program "t9120.coff" assembled in 2 passes with errorlevel 0. "t9120.htm"{124}
<!--M-->I0470 Assembling program "t9120". "t9120.htm"{135}
<!--M-->I0510 Assembling program pass 1. "t9120.htm"{135}
<!--M-->I0510 Assembling program pass 2. "t9120.htm"{135}
<!--M-->I0530 Assembling program pass 3 - final. "t9120.htm"{135}
<!--M-->I0561 Linking LIBCOF library "./t9120.coff.lib". "t9120.htm"{140}
<!--M-->I0660 32bit FLAT LIBCOF file "t9120.lib" created, size=2273. "t9120.htm"{140}
<!--M-->I0650 Program "t9120" assembled in 3 passes with errorlevel 0. "t9120.htm"{140}
<!--M-->I0750 Source "t9120" (338 lines) assembled in 2 passes with errorlevel 0.
<!--M-->I0860 Listing file "t9120.htm.lst" created, size=7945.
<!--M-->I0990 EuroAssembler terminated with errorlevel 0.
</code></dd></dl>
<dl><dt>Expected output file <q>t9120.
<!--E-->lib
</q></dt><dd><pre>
<!--B-->0000: 21 3C 61 72 63 68 3E 0A 2F 20 20 20 20 20 20 20  !&lt;arch&gt;&not;/&macr;&macr;&macr;&macr;&macr;&macr;&macr;
<!--B-->0010: 20 20 20 20 20 20 20 20 30 20 20 20 20 20 20 20  &macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;&macr;&macr;
<!--B-->0020: 20 20 20 20 30 20 20 20 20 20 30 20 20 20 20 20  &macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;
<!--B-->0030: 31 30 30 36 36 36 20 20 31 36 30 20 20 20 20 20  100666&macr;&macr;160&macr;&macr;&macr;&macr;&macr;
<!--B-->0040: 20 20 60 0A 00 00 00 0D 00 00 02 04 00 00 02 04  &macr;&macr;`&not;&deg;&deg;&deg;&middot;&deg;&deg;&middot;&middot;&deg;&deg;&middot;&middot;
<!--B-->0050: 00 00 03 44 00 00 03 A6 00 00 04 10 00 00 04 78  &deg;&deg;&middot;D&deg;&deg;&middot;&curren;&deg;&deg;&middot;&middot;&deg;&deg;&middot;x
<!--B-->0060: 00 00 04 78 00 00 04 78 00 00 04 78 00 00 06 C2  &deg;&deg;&middot;x&deg;&deg;&middot;x&deg;&deg;&middot;x&deg;&deg;&middot;&curren;
<!--B-->0070: 00 00 07 2C 00 00 07 2C 00 00 07 2C 2E 64 61 74  &deg;&deg;&middot;,&deg;&deg;&middot;,&deg;&deg;&middot;,.dat
<!--B-->0080: 61 00 4D 73 67 00 42 65 65 70 00 47 65 74 53 74  a&deg;Msg&deg;Beep&deg;GetSt
<!--B-->0090: 64 48 61 6E 64 6C 65 00 57 72 69 74 65 46 69 6C  dHandle&deg;WriteFil
<!--B-->00A0: 65 00 2E 74 65 78 74 00 2E 72 6F 64 61 74 61 00  e&deg;.text&deg;.rodata&deg;
<!--B-->00B0: 42 65 65 70 2E 57 33 32 00 57 72 69 74 65 2E 57  Beep.W32&deg;Write.W
<!--B-->00C0: 33 32 00 45 78 69 74 50 72 6F 63 65 73 73 00 2E  32&deg;ExitProcess&deg;.
<!--B-->00D0: 74 65 78 74 00 2E 62 73 73 00 45 78 69 74 2E 57  text&deg;.bss&deg;Exit.W
<!--B-->00E0: 33 32 00 0A 2F 20 20 20 20 20 20 20 20 20 20 20  32&deg;&not;/&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;
<!--B-->00F0: 20 20 20 20 30 20 20 20 20 20 20 20 20 20 20 20  &macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;
<!--B-->0100: 30 20 20 20 20 20 30 20 20 20 20 20 31 30 30 36  0&macr;&macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;1006
<!--B-->0110: 36 36 20 20 31 36 36 20 20 20 20 20 20 20 60 0A  66&macr;&macr;166&macr;&macr;&macr;&macr;&macr;&macr;&macr;`&not;
<!--B-->0120: 07 00 00 00 04 02 00 00 44 03 00 00 A6 03 00 00  &middot;&deg;&deg;&deg;&middot;&middot;&deg;&deg;D&middot;&deg;&deg;&curren;&middot;&deg;&deg;
<!--B-->0130: 10 04 00 00 78 04 00 00 C2 06 00 00 2C 07 00 00  &middot;&middot;&deg;&deg;x&middot;&deg;&deg;&curren;&middot;&deg;&deg;,&middot;&deg;&deg;
<!--B-->0140: 0D 00 00 00 07 00 01 00 05 00 07 00 05 00 02 00  &middot;&deg;&deg;&deg;&middot;&deg;&middot;&deg;&middot;&deg;&middot;&deg;&middot;&deg;&middot;&deg;
<!--B-->0150: 05 00 07 00 06 00 03 00 01 00 05 00 04 00 2E 62  &middot;&deg;&middot;&deg;&middot;&deg;&middot;&deg;&middot;&deg;&middot;&deg;&middot;&deg;.b
<!--B-->0160: 73 73 00 2E 64 61 74 61 00 2E 72 6F 64 61 74 61  ss&deg;.data&deg;.rodata
<!--B-->0170: 00 2E 74 65 78 74 00 2E 74 65 78 74 00 42 65 65  &deg;.text&deg;.text&deg;Bee
<!--B-->0180: 70 00 42 65 65 70 2E 57 33 32 00 45 78 69 74 2E  p&deg;Beep.W32&deg;Exit.
<!--B-->0190: 57 33 32 00 45 78 69 74 50 72 6F 63 65 73 73 00  W32&deg;ExitProcess&deg;
<!--B-->01A0: 47 65 74 53 74 64 48 61 6E 64 6C 65 00 4D 73 67  GetStdHandle&deg;Msg
<!--B-->01B0: 00 57 72 69 74 65 2E 57 33 32 00 57 72 69 74 65  &deg;Write.W32&deg;Write
<!--B-->01C0: 46 69 6C 65 00 0A 2F 2F 20 20 20 20 20 20 20 20  File&deg;&not;//&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;
<!--B-->01D0: 20 20 20 20 20 20 30 20 20 20 20 20 20 20 20 20  &macr;&macr;&macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;
<!--B-->01E0: 20 20 30 20 20 20 20 20 30 20 20 20 20 20 31 30  &macr;&macr;0&macr;&macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;10
<!--B-->01F0: 30 36 36 36 20 20 32 20 20 20 20 20 20 20 20 20  0666&macr;&macr;2&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;
<!--B-->0200: 60 0A 00 0A 74 39 31 32 30 2F 20 20 20 20 20 20  `&not;&deg;&not;t9120/&macr;&macr;&macr;&macr;&macr;&macr;
<!--B-->0210: 20 20 20 20 30 20 20 20 20 20 20 20 20 20 20 20  &macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;
<!--B-->0220: 30 20 20 20 20 20 30 20 20 20 20 20 31 30 30 36  0&macr;&macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;1006
<!--B-->0230: 36 36 20 20 32 36 30 20 20 20 20 20 20 20 60 0A  66&macr;&macr;260&macr;&macr;&macr;&macr;&macr;&macr;&macr;`&not;
<!--B-->0240: 4C 01 01 00 00 00 00 00 66 00 00 00 08 00 00 00  L&middot;&middot;&deg;&deg;&deg;&deg;&deg;f&deg;&deg;&deg;&middot;&deg;&deg;&deg;
<!--B-->0250: 00 00 00 01 2E 64 61 74 61 00 00 00 00 00 00 00  &deg;&deg;&deg;&middot;.data&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0260: 00 00 00 00 29 00 00 00 3C 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;)&deg;&deg;&deg;&lt;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0270: 00 00 00 00 00 00 00 00 40 00 50 C0 33 32 62 69  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;@&deg;P&curren;32bi
<!--B-->0280: 74 20 46 4C 41 54 20 4C 49 42 43 4F 46 20 70 72  t&macr;FLAT&macr;LIBCOF&macr;pr
<!--B-->0290: 6F 67 72 61 6D 20 22 74 39 31 32 30 2E 6C 69 62  ogram&macr;&quot;t9120.lib
<!--B-->02A0: 22 2E 0D 0A 00 00 2E 66 69 6C 65 00 00 00 00 00  &quot;.&middot;&not;&deg;&deg;.file&deg;&deg;&deg;&deg;&deg;
<!--B-->02B0: 00 00 FE FF 00 00 67 01 74 39 31 32 30 2E 68 74  &deg;&deg;&curren;&curren;&deg;&deg;g&middot;t9120.ht
<!--B-->02C0: 6D 00 00 00 00 00 00 00 00 00 2E 64 61 74 61 00  m&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;.data&deg;
<!--B-->02D0: 00 00 00 00 00 00 01 00 00 00 03 01 29 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&middot;)&deg;&deg;&deg;
<!--B-->02E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 42 65  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;Be
<!--B-->02F0: 65 70 2E 57 33 32 00 00 00 00 00 00 01 01 02 00  ep.W32&deg;&deg;&deg;&deg;&deg;&deg;&middot;&middot;&middot;&deg;
<!--B-->0300: 45 78 69 74 2E 57 33 32 00 00 00 00 00 00 01 01  Exit.W32&deg;&deg;&deg;&deg;&deg;&deg;&middot;&middot;
<!--B-->0310: 02 00 4D 73 67 00 00 00 00 00 00 00 00 00 01 00  &middot;&deg;Msg&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;
<!--B-->0320: 0C 00 02 00 00 00 00 00 04 00 00 00 00 00 00 00  &middot;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0330: 00 00 01 01 02 00 0E 00 00 00 57 72 69 74 65 2E  &deg;&deg;&middot;&middot;&middot;&deg;&middot;&deg;&deg;&deg;Write.
<!--B-->0340: 57 33 32 00 42 65 65 70 2F 20 20 20 20 20 20 20  W32&deg;Beep/&macr;&macr;&macr;&macr;&macr;&macr;&macr;
<!--B-->0350: 20 20 20 20 30 20 20 20 20 20 20 20 20 20 20 20  &macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;
<!--B-->0360: 30 20 20 20 20 20 30 20 20 20 20 20 31 30 30 36  0&macr;&macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;1006
<!--B-->0370: 36 36 20 20 33 38 20 20 20 20 20 20 20 20 60 0A  66&macr;&macr;38&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;`&not;
<!--B-->0380: 00 00 FF FF 00 00 4C 01 00 00 00 00 12 00 00 00  &deg;&deg;&curren;&curren;&deg;&deg;L&middot;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;
<!--B-->0390: 00 00 04 00 42 65 65 70 00 6B 65 72 6E 65 6C 33  &deg;&deg;&middot;&deg;Beep&deg;kernel3
<!--B-->03A0: 32 2E 64 6C 6C 00 47 65 74 53 74 64 48 61 6E 64  2.dll&deg;GetStdHand
<!--B-->03B0: 6C 65 2F 20 20 20 30 20 20 20 20 20 20 20 20 20  le/&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;
<!--B-->03C0: 20 20 30 20 20 20 20 20 30 20 20 20 20 20 31 30  &macr;&macr;0&macr;&macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;10
<!--B-->03D0: 30 36 36 36 20 20 34 36 20 20 20 20 20 20 20 20  0666&macr;&macr;46&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;
<!--B-->03E0: 60 0A 00 00 FF FF 00 00 4C 01 00 00 00 00 1A 00  `&not;&deg;&deg;&curren;&curren;&deg;&deg;L&middot;&deg;&deg;&deg;&deg;&middot;&deg;
<!--B-->03F0: 00 00 00 00 04 00 47 65 74 53 74 64 48 61 6E 64  &deg;&deg;&deg;&deg;&middot;&deg;GetStdHand
<!--B-->0400: 6C 65 00 6B 65 72 6E 65 6C 33 32 2E 64 6C 6C 00  le&deg;kernel32.dll&deg;
<!--B-->0410: 57 72 69 74 65 46 69 6C 65 2F 20 20 20 20 20 20  WriteFile/&macr;&macr;&macr;&macr;&macr;&macr;
<!--B-->0420: 30 20 20 20 20 20 20 20 20 20 20 20 30 20 20 20  0&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;0&macr;&macr;&macr;
<!--B-->0430: 20 20 30 20 20 20 20 20 31 30 30 36 36 36 20 20  &macr;&macr;0&macr;&macr;&macr;&macr;&macr;100666&macr;&macr;
<!--B-->0440: 34 33 20 20 20 20 20 20 20 20 60 0A 00 00 FF FF  43&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;`&not;&deg;&deg;&curren;&curren;
<!--B-->0450: 00 00 4C 01 00 00 00 00 17 00 00 00 00 00 04 00  &deg;&deg;L&middot;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&middot;&deg;
<!--B-->0460: 57 72 69 74 65 46 69 6C 65 00 6B 65 72 6E 65 6C  WriteFile&deg;kernel
<!--B-->0470: 33 32 2E 64 6C 6C 00 10 74 39 31 32 30 2E 57 42  32.dll&deg;&middot;t9120.WB
<!--B-->0480: 2F 20 20 20 20 20 20 20 30 20 20 20 20 20 20 20  /&macr;&macr;&macr;&macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;&macr;&macr;
<!--B-->0490: 20 20 20 20 30 20 20 20 20 20 30 20 20 20 20 20  &macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;
<!--B-->04A0: 31 30 30 36 36 36 20 20 35 32 36 20 20 20 20 20  100666&macr;&macr;526&macr;&macr;&macr;&macr;&macr;
<!--B-->04B0: 20 20 60 0A 4C 01 02 00 00 00 00 00 F0 00 00 00  &macr;&macr;`&not;L&middot;&middot;&deg;&deg;&deg;&deg;&deg;&curren;&deg;&deg;&deg;
<!--B-->04C0: 0D 00 00 00 00 00 00 01 2E 74 65 78 74 00 00 00  &middot;&deg;&deg;&deg;&deg;&deg;&deg;&middot;.text&deg;&deg;&deg;
<!--B-->04D0: 00 00 00 00 00 00 00 00 4D 00 00 00 64 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;M&deg;&deg;&deg;d&deg;&deg;&deg;
<!--B-->04E0: B2 00 00 00 00 00 00 00 05 00 00 00 20 00 50 60  &curren;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&macr;&deg;P`
<!--B-->04F0: 2E 72 6F 64 61 74 61 00 00 00 00 00 00 00 00 00  .rodata&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0500: 0B 00 00 00 E4 00 00 00 00 00 00 00 00 00 00 00  &middot;&deg;&deg;&deg;&curren;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0510: 00 00 00 00 40 00 50 40 6A F5 E8 00 00 00 00 89  &deg;&deg;&deg;&deg;@&deg;P@j&curren;&curren;&deg;&deg;&deg;&deg;&curren;
<!--B-->0520: C3 89 F7 31 C9 31 C0 F7 D1 F2 AE F7 D1 52 89 E2  &curren;&curren;&curren;1&curren;1&curren;&curren;&curren;&curren;&curren;&curren;&curren;R&curren;&curren;
<!--B-->0530: 50 52 51 56 53 E8 00 00 00 00 5A C3 BE 00 00 00  PRQVS&curren;&deg;&deg;&deg;&deg;Z&curren;&curren;&deg;&deg;&deg;
<!--B-->0540: 00 E8 D2 FF FF FF 68 C8 00 00 00 68 B8 01 00 00  &deg;&curren;&curren;&curren;&curren;&curren;h&curren;&deg;&deg;&deg;h&curren;&middot;&deg;&deg;
<!--B-->0550: E8 00 00 00 00 68 90 01 00 00 68 4B 02 00 00 E8  &curren;&deg;&deg;&deg;&deg;h&curren;&middot;&deg;&deg;hK&middot;&deg;&deg;&curren;
<!--B-->0560: 00 00 00 00 C3 00 03 00 00 00 0A 00 00 00 14 00  &deg;&deg;&deg;&deg;&curren;&deg;&middot;&deg;&deg;&deg;&not;&deg;&deg;&deg;&middot;&deg;
<!--B-->0570: 1E 00 00 00 0C 00 00 00 14 00 25 00 00 00 02 00  &middot;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;%&deg;&deg;&deg;&middot;&deg;
<!--B-->0580: 00 00 06 00 39 00 00 00 08 00 00 00 14 00 48 00  &deg;&deg;&middot;&deg;9&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;H&deg;
<!--B-->0590: 00 00 08 00 00 00 14 00 42 65 65 70 69 6E 67 2E  &deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;Beeping.
<!--B-->05A0: 2E 2E 00 00 2E 66 69 6C 65 00 00 00 00 00 00 00  ..&deg;&deg;.file&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->05B0: FE FF 00 00 67 01 74 39 31 32 30 2E 68 74 6D 00  &curren;&curren;&deg;&deg;g&middot;t9120.htm&deg;
<!--B-->05C0: 00 00 00 00 00 00 00 00 2E 72 6F 64 61 74 61 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;.rodata&deg;
<!--B-->05D0: 00 00 00 00 02 00 00 00 03 01 0B 00 00 00 00 00  &deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&middot;&middot;&deg;&deg;&deg;&deg;&deg;
<!--B-->05E0: 00 00 00 00 00 00 00 00 00 00 00 00 2E 74 65 78  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;.tex
<!--B-->05F0: 74 00 00 00 00 00 00 00 01 00 00 00 03 01 4D 00  t&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&middot;M&deg;
<!--B-->0600: 00 00 05 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0610: 00 00 00 00 04 00 00 00 00 00 00 00 02 00 0C 00  &deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&middot;&deg;
<!--B-->0620: 03 00 40 4C 54 31 00 00 00 00 00 00 00 00 02 00  &middot;&deg;@LT1&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;
<!--B-->0630: 01 01 03 00 42 65 65 70 00 00 00 00 00 00 00 00  &middot;&middot;&middot;&deg;Beep&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0640: 00 00 01 01 02 00 42 65 65 70 2E 57 33 32 24 00  &deg;&deg;&middot;&middot;&middot;&deg;Beep.W32$&deg;
<!--B-->0650: 00 00 01 00 01 02 02 00 00 00 00 00 13 00 00 00  &deg;&deg;&middot;&deg;&middot;&middot;&middot;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;
<!--B-->0660: 00 00 00 00 00 00 01 01 02 00 00 00 00 00 20 00  &deg;&deg;&deg;&deg;&deg;&deg;&middot;&middot;&middot;&deg;&deg;&deg;&deg;&deg;&macr;&deg;
<!--B-->0670: 00 00 00 00 00 00 01 00 01 02 02 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&middot;&middot;&middot;&deg;&deg;&deg;&deg;&deg;
<!--B-->0680: 2A 00 00 00 00 00 00 00 00 00 01 01 02 00 34 00  *&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&middot;&middot;&deg;4&deg;
<!--B-->0690: 00 00 3D 42 22 42 65 65 70 69 6E 67 2E 2E 2E 22  &deg;&deg;=B&quot;Beeping...&quot;
<!--B-->06A0: 00 47 65 74 53 74 64 48 61 6E 64 6C 65 00 57 72  &deg;GetStdHandle&deg;Wr
<!--B-->06B0: 69 74 65 2E 57 33 32 00 57 72 69 74 65 46 69 6C  ite.W32&deg;WriteFil
<!--B-->06C0: 65 00 45 78 69 74 50 72 6F 63 65 73 73 2F 20 20  e&deg;ExitProcess/&macr;&macr;
<!--B-->06D0: 20 20 30 20 20 20 20 20 20 20 20 20 20 20 30 20  &macr;&macr;0&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;0&macr;
<!--B-->06E0: 20 20 20 20 30 20 20 20 20 20 31 30 30 36 36 36  &macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;100666
<!--B-->06F0: 20 20 34 35 20 20 20 20 20 20 20 20 60 0A 00 00  &macr;&macr;45&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;`&not;&deg;&deg;
<!--B-->0700: FF FF 00 00 4C 01 00 00 00 00 19 00 00 00 00 00  &curren;&curren;&deg;&deg;L&middot;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;
<!--B-->0710: 04 00 45 78 69 74 50 72 6F 63 65 73 73 00 6B 65  &middot;&deg;ExitProcess&deg;ke
<!--B-->0720: 72 6E 65 6C 33 32 2E 64 6C 6C 00 10 74 39 31 32  rnel32.dll&deg;&middot;t912
<!--B-->0730: 30 2E 45 58 2F 20 20 20 20 20 20 20 30 20 20 20  0.EX/&macr;&macr;&macr;&macr;&macr;&macr;&macr;0&macr;&macr;&macr;
<!--B-->0740: 20 20 20 20 20 20 20 20 30 20 20 20 20 20 30 20  &macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;0&macr;
<!--B-->0750: 20 20 20 20 31 30 30 36 36 36 20 20 33 37 37 20  &macr;&macr;&macr;&macr;100666&macr;&macr;377&macr;
<!--B-->0760: 20 20 20 20 20 20 60 0A 4C 01 02 00 00 00 00 00  &macr;&macr;&macr;&macr;&macr;&macr;`&not;L&middot;&middot;&deg;&deg;&deg;&deg;&deg;
<!--B-->0770: A0 00 00 00 0A 00 00 00 00 00 00 01 2E 74 65 78  &curren;&deg;&deg;&deg;&not;&deg;&deg;&deg;&deg;&deg;&deg;&middot;.tex
<!--B-->0780: 74 00 00 00 00 00 00 00 00 00 00 00 1E 00 00 00  t&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;
<!--B-->0790: 64 00 00 00 82 00 00 00 00 00 00 00 03 00 00 00  d&deg;&deg;&deg;&curren;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;
<!--B-->07A0: 20 00 50 60 2E 62 73 73 00 00 00 00 00 00 00 00  &macr;&deg;P`.bss&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->07B0: 00 00 00 00 07 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->07C0: 00 00 00 00 00 00 00 00 80 00 50 C0 BE 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&curren;&deg;P&curren;&curren;&deg;&deg;&deg;
<!--B-->07D0: 00 C7 06 45 6E 64 00 C7 46 03 0D 0A 00 00 E8 00  &deg;&curren;&middot;End&deg;&curren;F&middot;&middot;&not;&deg;&deg;&curren;&deg;
<!--B-->07E0: 00 00 00 6A 00 E9 00 00 00 00 01 00 00 00 02 00  &deg;&deg;&deg;j&deg;&curren;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;
<!--B-->07F0: 00 00 06 00 13 00 00 00 09 00 00 00 14 00 1A 00  &deg;&deg;&middot;&deg;&middot;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;&middot;&deg;
<!--B-->0800: 00 00 08 00 00 00 14 00 2E 66 69 6C 65 00 00 00  &deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;.file&deg;&deg;&deg;
<!--B-->0810: 00 00 00 00 FE FF 00 00 67 01 74 39 31 32 30 2E  &deg;&deg;&deg;&deg;&curren;&curren;&deg;&deg;g&middot;t9120.
<!--B-->0820: 68 74 6D 00 00 00 00 00 00 00 00 00 2E 62 73 73  htm&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;.bss
<!--B-->0830: 00 00 00 00 00 00 00 00 02 00 00 00 03 01 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&middot;&deg;&deg;
<!--B-->0840: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0850: 2E 74 65 78 74 00 00 00 00 00 00 00 01 00 00 00  .text&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;
<!--B-->0860: 03 01 1E 00 00 00 03 00 00 00 00 00 00 00 00 00  &middot;&middot;&middot;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0870: 00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0880: 02 00 0C 00 03 00 45 78 69 74 2E 57 33 32 00 00  &middot;&deg;&middot;&deg;&middot;&deg;Exit.W32&deg;&deg;
<!--B-->0890: 00 00 01 00 01 02 02 00 00 00 00 00 0F 00 00 00  &deg;&deg;&middot;&deg;&middot;&middot;&middot;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;
<!--B-->08A0: 00 00 00 00 00 00 01 01 02 00 00 00 00 00 1B 00  &deg;&deg;&deg;&deg;&deg;&deg;&middot;&middot;&middot;&deg;&deg;&deg;&deg;&deg;&middot;&deg;
<!--B-->08B0: 00 00 00 00 00 00 00 00 01 01 02 00 25 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&middot;&middot;&deg;%&deg;&deg;&deg;
<!--B-->08C0: 45 78 69 74 2E 57 33 32 2E 4D 00 45 78 69 74 50  Exit.W32.M&deg;ExitP
<!--B-->08D0: 72 6F 63 65 73 73 00 57 72 69 74 65 2E 57 33 32  rocess&deg;Write.W32
<!--B-->08E0: 00                                               &deg;
</pre></dd></dl>
<!--TAILMENU-->
<!--Contents below the marker {!==TAILMENU==} was generated by "generate.php".-->
<br class='CLEAR'/><a id='bottom' href='#top'>&#x25B2;Back to the top&#x25B2;</a>
</body></html>