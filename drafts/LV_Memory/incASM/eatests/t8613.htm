<!doctype html><html lang='en'><head>
<meta http-equiv='Content-Type' content='text/html; charset=utf-8'/>
<meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=2.0, user-scalable=yes'>
<meta name='robots' content='ALL,FOLLOW'/>
<meta name='description' content='t8613.htm test file'/>
<meta name='version' content='20250318'/>
<meta name='author' content='Pavel vitsoft Šrubař'/>
<link rel='stylesheet' href='../euroasm.css' type='text/css'/>
<link rel='shortcut icon' href='../favicon.ico'/>
<title>t8613.htm test file</title>
</head>
<body class='EATESTS' id='top'><div class='HEADMENU'><table>
<tr><td rowspan='2' title='&euro;ASM - assembler and linker'><img src='../favicon.ico' alt='EuroAssembler' />
<td><a href='../index.htm' title='Alphabetical index of all &euro;ASM elements, directives and instructions'>Index</a></td>
<td><a href='../eadoc/' class='EADOC' title='Documentation of EuroAssembler'>Manual</a></td>
<td><a href='https://euroassembler.eu/download/' title='History &amp; download of the latest and previous versions'>Download</a></td>
<td><a href='../easource/' class='EASOURCE' title='Source files of EuroAssembler itself'>Source</a></td>
<td><a href='../maclib/' class='MACLIB' title='Macro libraries shipped with &euro;ASM'>Macros</a></td>
<td rowspan='2' title='Find the searched token in any text file on this site'>
<form method='post' action='../search.php' enctype='multipart/form-data' accept-charset='utf-8'>
<input type='text' id='q' placeholder='Searched word(s)' name='q' value=''/>
<br/><label title='Check the box to find the expression even if it is surrounded by other letters | digits.'>
<input type='checkbox' name='EW'/><small>Embedded word</small></label>
<br/><label title='Check the box for case-insensitive search.'>
<input type='checkbox' name='CI'/><small>Case ins.</small></label>
<input type='submit' title='Search for the specified word|expression in all site files.' name='find' value='Search'/>
</form></td></tr><tr>
<td><a href='../sitemap.htm' title='List of directories and files on this site'>Sitemap</a></td>
<td><a href='../eadoc/links.htm' class='EADOC' title='References and external links to resources used in EuroAssembler developement'>Links</a></td>
<td><a href='https://euroassembler.eu/forum/' title='Discussion forum concerning EuroAssembler'>Forum</a></td>
<td><a href='../eatests/' class='EATESTS' title='Program snippets for testing the function of &euro;ASM'>Tests</a></td>
<td><a href='../objlib/' class='OBJLIB' title='Skeletons and sample objects and projects shipped with &euro;ASM'>Projects</a></td>
</tr></table></div>
<!--Contents above the marker {!==/HEADMENU==} was generated by "generate.php".-->
<!--/HEADMENU-->
<h1 id='TestTitle'>Test <a class='EXT' href='t8613.htm'>t8613</a>:
<!--T-->LIBOMF library for 32bit Windows from COFF modules
</h1><button onclick='window.location="../eatests/manager.php?test=t8613";'>Manage t8613</button>
<br class='CLEAR'/>
<dl><dt>Source &amp; expected listing <q>t8613.htm.lst</q></dt><dd><samp>
|                       |  EUROASM AUTOSEGMENT=ON,CPU=386,DUMPWIDTH=25
|7438363133             |%test %SET t8613
|                       |;;
|                       |;;  Create the first auxilliary COFF module "%test.WB.obj".
|                       |%test.WB PROGRAM FORMAT=COFF,MODEL=FLAT,WIDTH=32
|[.text]                ::::Section changed.
|00000000:              |Write.W32:: PROC         ; Display ASCIIZ string pointed to by ESI using Windows.
|                       |  IMPORT GetStdHandle:,WriteFile: ; Declare imported Windows kernel functions.
|00000000:6AF5          |  PUSH -11               ; %1 Identifier of standard output STD_OUTPUT_HANDLE.
|00000002:E8(00000000)  |  CALL GetStdHandle:     ; Stdcall the imported Windows function with 1 argument.
|00000007:89C3          |  MOV EBX,EAX            ; Save the returned StdOutput handle to EBX.
|00000009:89F7          |  MOV EDI,ESI            ; Use EDI to find the end of input string.
|0000000B:31C9          |  XOR ECX,ECX            ; Clear ECX to keep the size of input string.
|0000000D:31C0          |  XOR EAX,EAX            ; Clear AL, the searched NUL character.
|0000000F:F7D1          |  NOT ECX                ; Assume unlimited possible string size.
|00000011:F2AE          |  REPNE SCASB            ; Find the zero terminator.
|00000013:F7D1          |  NOT ECX                ; Get string size to ECX.
|00000015:52            |  PUSH EDX               ; Alloc temporary DWORD memory variable on stack.
|00000016:89E2          |    MOV EDX,ESP          ; Get address of this DWORD to EDX.
|00000018:50            |    PUSH EAX             ; %5 No overlap of WriteFile.
|00000019:52            |    PUSH EDX             ; %4 Memory variable for number of bytes.
|0000001A:51            |    PUSH ECX             ; %3 String size.
|0000001B:56            |    PUSH ESI             ; %2 String address.
|0000001C:53            |    PUSH EBX             ; %1 Standard output file handle.
|0000001D:E8(00000000)  |    CALL WriteFile:      ; Stdcall the imported function with 5 arguments.
|00000022:5A            |  POP EDX                ; Free and discard the temporary DWORD on stack.
|00000023:C3            |  RET                    ; Return to caller.
|00000024:              | ENDPROC Write.W32:
|                       |;;
|00000024:              |Beep.W32:: PROC          ; Play a sound in 32bit Windows.
|00000024:BE[00000000]  |  MOV ESI,=B"Beeping..." ; Define a literal string in [.rodata].
|00000029:E8D2FFFFFF    |  CALL Write.W32::       ; Display the notification "Beeping...".
|                       |  IMPORT Beep:           ; Declare imported Windows kernel function.
|0000002E:68C8000000    |  PUSH 200               ; %2 Sound duration [ms].
|00000033:68B8010000    |  PUSH 440               ; %1 Sound frequency [Hz].
|00000038:E8(00000000)  |  CALL Beep:             ; Stdcall the imported function with 2 arguments.
|0000003D:6890010000    |  PUSH 400               ; %2 Sound duration [ms].
|00000042:684B020000    |  PUSH 587               ; %1 Sound frequency [Hz].
|00000047:E8(00000000)  |  CALL Beep:             ; Stdcall the imported function with 2 arguments.
|0000004C:C3            |  RET                    ; Return to caller.
|0000004D:              | ENDPROC Beep.W32:
|[@LT1]                 ====ListLiterals in section [@LT1].
|00000000:42656570696E~~=B"Beeping..."
|                       |ENDPROGRAM %test.WB
|        **** ListMap "t8613.WB.obj",model=FLAT,groups=0,segments=3,entry=,stack=
|          [.text],FA=0000008Ch,RVA=00000000h,size=0000004Dh=77,width=32,align=0010h,purpose=CODE
|          [.rodata],FA=0000010Ch,RVA=00000000h,size=0000000Bh=11,width=32,align=0010h,purpose=RODATA+LITERAL
|          [.drectve],FA=00000117h,RVA=00000000h,size=00000034h=52,width=0,align=1,purpose=DRECTVE
|        **** ListGlobals "t8613.WB.obj",Global=0,Public=2,Extern=0,eXport=0,Import=3
|        Beep,[Beep]:00000000h,scope='I',lib="kernel32.dll"
|        Beep.W32,[.text]:00000024h,scope='P'
|        GetStdHandle,[GetStdHandle]:00000000h,scope='I',lib="kernel32.dll"
|        Write.W32,[.text]:00000000h,scope='P'
|        WriteFile,[WriteFile]:00000000h,scope='I',lib="kernel32.dll"
|                       |;;
|                       |;;  Create the second auxilliary COFF module "%test.EX.obj".
|                       |%test.EX PROGRAM FORMAT=COFF,MODEL=FLAT,WIDTH=32
|[.text]                ::::Section changed.
|00000000:              |Exit.W32:: PROC          ; Display the message "End" and terminate the program.
|00000000:BE[00000000]  |  MOV ESI,.M:            ; Address in segment [.bss] for the message.
|00000005:C706456E6400  |  MOVD [ESI+0],"End"     ; Dynamically define the message "End".
|0000000B:C746030D0A0000|  MOVD [ESI+3],0x0A0D    ; CR+LF.
|00000012:E8(00000000)  |  CALL Write.W32::       ; Display the notification "End".
|                       |  IMPORT ExitProcess:    ; Use imported Windows kernel function.
|00000017:6A00          |  PUSH 0                 ; %1 Terminate with errorlevel 0.
|00000019:E9(00000000)  |  JMP ExitProcess:       ; Use imported function with 1 argument.
|[.bss]                 ::::Section changed.
|00000000:..............|.M: DB 7*BYTE            ; Reserve space for ASCIIZ string "End" in segment [.bss].
|[.text]                ::::Section changed.
|0000001E:              | ENDPROC Exit.W32:
|                       |ENDPROGRAM %test.EX
|        **** ListMap "t8613.EX.obj",model=FLAT,groups=0,segments=3,entry=,stack=
|          [.text],FA=0000008Ch,RVA=00000000h,size=0000001Eh=30,width=32,align=0010h,purpose=CODE
|          [.bss],FA=00000000h,RVA=00000000h,size=00000007h=7,width=32,align=0010h,purpose=BSS
|          [.drectve],FA=000000C8h,RVA=00000000h,size=00000014h=20,width=0,align=1,purpose=DRECTVE
|        **** ListGlobals "t8613.EX.obj",Global=0,Public=1,Extern=1,eXport=0,Import=1
|        Exit.W32,[.text]:00000000h,scope='P'
|        ExitProcess,[ExitProcess]:00000000h,scope='I',lib="kernel32.dll"
|        Write.W32,[Write.W32]:00000000h,scope='E'
|                       |;;
|                       |;; Create the main LIBOMF library from two auxilliary COFF modules.
|                       |%test PROGRAM FORMAT=LIBOMF,MODEL=FLAT,WIDTH=32
|                       |    LINK %test.WB.obj, %test.EX.obj
|[.data]                ::::Section changed.
|00000000:333262697420~~|Msg:: DB '%^WIDTH[]bit %^MODEL %^FORMAT program "%^OUTFILE".',13,10,0
|                       |   ENDPROGRAM %test
|# I0560 Linking COFF module "./t8613.WB.obj".
|# I0563 Accepting link directive '/IMPORT:GetStdHandle'.
|# I0563 Accepting link directive '/IMPORT:WriteFile'.
|# I0563 Accepting link directive '/IMPORT:Beep'.
|# I0560 Linking COFF module "./t8613.EX.obj".
|# I0563 Accepting link directive '/IMPORT:ExitProcess'.
|        **** ListMap "t8613.lib",model=FLAT,groups=0,segments=1,entry=,stack=
|          [.data],FA=00000059h,RVA=00000000h,size=00000029h=41,width=32,align=0010h,purpose=DATA
|        **** ListGlobals "t8613.lib",Global=0,Public=1,Extern=0,eXport=0,Import=0
|        Msg,[.data]:00000000h,scope='P'
</samp></dd></dl>
<dl><dt>Expected messages <q>t8613.out</q></dt><dd><code class='PRE'>
<!--M-->I0180 Assembling source file "t8613.htm".
<!--M-->I0270 Assembling source "t8613".
<!--M-->I0310 Assembling source pass 1.
<!--M-->I0330 Assembling source pass 2 - final.
<!--M-->I0470 Assembling program "t8613.WB". "t8613.htm"{45}
<!--M-->I0510 Assembling program pass 1. "t8613.htm"{45}
<!--M-->I0510 Assembling program pass 2. "t8613.htm"{45}
<!--M-->I0530 Assembling program pass 3 - final. "t8613.htm"{45}
<!--M-->I0660 32bit FLAT COFF file "t8613.WB.obj" created, size=654. "t8613.htm"{84}
<!--M-->I0650 Program "t8613.WB" assembled in 3 passes with errorlevel 0. "t8613.htm"{84}
<!--M-->I0470 Assembling program "t8613.EX". "t8613.htm"{97}
<!--M-->I0510 Assembling program pass 1. "t8613.htm"{97}
<!--M-->I0510 Assembling program pass 2. "t8613.htm"{97}
<!--M-->I0530 Assembling program pass 3 - final. "t8613.htm"{97}
<!--M-->I0660 32bit FLAT COFF file "t8613.EX.obj" created, size=473. "t8613.htm"{111}
<!--M-->I0650 Program "t8613.EX" assembled in 3 passes with errorlevel 0. "t8613.htm"{111}
<!--M-->I0470 Assembling program "t8613". "t8613.htm"{122}
<!--M-->I0510 Assembling program pass 1. "t8613.htm"{122}
<!--M-->I0510 Assembling program pass 2. "t8613.htm"{122}
<!--M-->I0530 Assembling program pass 3 - final. "t8613.htm"{122}
<!--M-->I0560 Linking COFF module "./t8613.WB.obj". "t8613.htm"{126}
<!--M-->I0563 Accepting link directive '/IMPORT:GetStdHandle'. "t8613.htm"{126}
<!--M-->I0563 Accepting link directive '/IMPORT:WriteFile'. "t8613.htm"{126}
<!--M-->I0563 Accepting link directive '/IMPORT:Beep'. "t8613.htm"{126}
<!--M-->I0560 Linking COFF module "./t8613.EX.obj". "t8613.htm"{126}
<!--M-->I0563 Accepting link directive '/IMPORT:ExitProcess'. "t8613.htm"{126}
<!--M-->I0660 32bit FLAT LIBOMF file "t8613.lib" created, size=2048. "t8613.htm"{126}
<!--M-->I0650 Program "t8613" assembled in 3 passes with errorlevel 0. "t8613.htm"{126}
<!--M-->I0750 Source "t8613" (305 lines) assembled in 2 passes with errorlevel 0.
<!--M-->I0860 Listing file "t8613.htm.lst" created, size=7206.
<!--M-->I0990 EuroAssembler terminated with errorlevel 0.
</code></dd></dl>
<dl><dt>Expected output file <q>t8613.
<!--E-->lib
</q></dt><dd><pre>
<!--B-->0000: F0 0D 00 00 04 00 00 02 00 01 00 00 00 00 00 00  &curren;&middot;&deg;&deg;&middot;&deg;&deg;&middot;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0010: 82 07 00 05 74 38 36 31 33 2C 88 10 00 00 00 45  &curren;&middot;&deg;&middot;t8613,&curren;&middot;&deg;&deg;&deg;E
<!--B-->0020: 75 72 6F 41 73 73 65 6D 62 6C 65 72 2F 88 05 00  uroAssembler/&curren;&middot;&deg;
<!--B-->0030: 00 9D 33 66 3D 96 08 00 00 05 2E 64 61 74 61 95  &deg;&curren;3f=&curren;&middot;&deg;&deg;&middot;.data&curren;
<!--B-->0040: 99 09 00 69 29 00 00 00 02 01 00 C9 90 0A 00 00  &curren;&middot;&deg;i)&deg;&deg;&deg;&middot;&middot;&deg;&curren;&curren;&not;&deg;&deg;
<!--B-->0050: 01 03 4D 73 67 00 00 00 3B A1 2F 00 01 00 00 00  &middot;&middot;Msg&deg;&deg;&deg;;&curren;/&deg;&middot;&deg;&deg;&deg;
<!--B-->0060: 00 33 32 62 69 74 20 46 4C 41 54 20 4C 49 42 4F  &deg;32bit&macr;FLAT&macr;LIBO
<!--B-->0070: 4D 46 20 70 72 6F 67 72 61 6D 20 22 74 38 36 31  MF&macr;program&macr;&quot;t861
<!--B-->0080: 33 2E 6C 69 62 22 2E 0D 0A 00 FF 8B 02 00 00 73  3.lib&quot;.&middot;&not;&deg;&curren;&curren;&middot;&deg;&deg;s
<!--B-->0090: 82 0A 00 08 74 38 36 31 33 2E 57 42 5F 88 10 00  &curren;&not;&deg;&middot;t8613.WB_&curren;&middot;&deg;
<!--B-->00A0: 00 00 45 75 72 6F 41 73 73 65 6D 62 6C 65 72 2F  &deg;&deg;EuroAssembler/
<!--B-->00B0: 88 05 00 00 9D 33 66 3D 88 1C 00 80 A0 01 00 04  &curren;&middot;&deg;&deg;&curren;3f=&curren;&middot;&deg;&curren;&curren;&middot;&deg;&middot;
<!--B-->00C0: 42 65 65 70 0C 6B 65 72 6E 65 6C 33 32 2E 64 6C  Beep&middot;kernel32.dl
<!--B-->00D0: 6C 04 42 65 65 70 DF 88 2C 00 80 A0 01 00 0C 47  l&middot;Beep&curren;&curren;,&deg;&curren;&curren;&middot;&deg;&middot;G
<!--B-->00E0: 65 74 53 74 64 48 61 6E 64 6C 65 0C 6B 65 72 6E  etStdHandle&middot;kern
<!--B-->00F0: 65 6C 33 32 2E 64 6C 6C 0C 47 65 74 53 74 64 48  el32.dll&middot;GetStdH
<!--B-->0100: 61 6E 64 6C 65 89 88 26 00 80 A0 01 00 09 57 72  andle&curren;&curren;&amp;&deg;&curren;&curren;&middot;&deg;&middot;Wr
<!--B-->0110: 69 74 65 46 69 6C 65 0C 6B 65 72 6E 65 6C 33 32  iteFile&middot;kernel32
<!--B-->0120: 2E 64 6C 6C 09 57 72 69 74 65 46 69 6C 65 AD 96  .dll&middot;WriteFile&curren;&curren;
<!--B-->0130: 10 00 00 05 2E 74 65 78 74 07 2E 72 6F 64 61 74  &middot;&deg;&deg;&middot;.text&middot;.rodat
<!--B-->0140: 61 B2 99 09 00 69 4D 00 00 00 02 01 00 A5 99 09  a&curren;&curren;&middot;&deg;iM&deg;&deg;&deg;&middot;&middot;&deg;&curren;&curren;&middot;
<!--B-->0150: 00 69 0B 00 00 00 03 01 00 E6 8C 07 00 04 42 65  &deg;i&middot;&deg;&deg;&deg;&middot;&middot;&deg;&curren;&curren;&middot;&deg;&middot;Be
<!--B-->0160: 65 70 00 ED 8C 0F 00 0C 47 65 74 53 74 64 48 61  ep&deg;&curren;&curren;&middot;&deg;&middot;GetStdHa
<!--B-->0170: 6E 64 6C 65 00 C2 8C 0C 00 09 57 72 69 74 65 46  ndle&deg;&curren;&curren;&middot;&deg;&middot;WriteF
<!--B-->0180: 69 6C 65 00 D4 90 0F 00 00 01 08 42 65 65 70 2E  ile&deg;&curren;&curren;&middot;&deg;&deg;&middot;&middot;Beep.
<!--B-->0190: 57 33 32 24 00 00 CE 90 10 00 00 01 09 57 72 69  W32$&deg;&deg;&curren;&curren;&middot;&deg;&deg;&middot;&middot;Wri
<!--B-->01A0: 74 65 2E 57 33 32 00 00 00 61 A1 53 00 01 00 00  te.W32&deg;&deg;&deg;a&curren;S&deg;&middot;&deg;&deg;
<!--B-->01B0: 00 00 6A F5 E8 00 00 00 00 89 C3 89 F7 31 C9 31  &deg;&deg;j&curren;&curren;&deg;&deg;&deg;&deg;&curren;&curren;&curren;&curren;1&curren;1
<!--B-->01C0: C0 F7 D1 F2 AE F7 D1 52 89 E2 50 52 51 56 53 E8  &curren;&curren;&curren;&curren;&curren;&curren;&curren;R&curren;&curren;PRQVS&curren;
<!--B-->01D0: 00 00 00 00 5A C3 BE 00 00 00 00 E8 D2 FF FF FF  &deg;&deg;&deg;&deg;Z&curren;&curren;&deg;&deg;&deg;&deg;&curren;&curren;&curren;&curren;&curren;
<!--B-->01E0: 68 C8 00 00 00 68 B8 01 00 00 E8 00 00 00 00 68  h&curren;&deg;&deg;&deg;h&curren;&middot;&deg;&deg;&curren;&deg;&deg;&deg;&deg;h
<!--B-->01F0: 90 01 00 00 68 4B 02 00 00 E8 00 00 00 00 C3 78  &curren;&middot;&deg;&deg;hK&middot;&deg;&deg;&curren;&deg;&deg;&deg;&deg;&curren;x
<!--B-->0200: 9D 15 00 A4 03 56 02 A4 1E 56 03 E4 25 54 02 A4  &curren;&middot;&deg;&curren;&middot;V&middot;&curren;&middot;V&middot;&curren;%T&middot;&curren;
<!--B-->0210: 39 56 01 A4 48 56 01 5E A1 11 00 02 00 00 00 00  9V&middot;&curren;HV&middot;^&curren;&middot;&deg;&middot;&deg;&deg;&deg;&deg;
<!--B-->0220: 42 65 65 70 69 6E 67 2E 2E 2E 00 08 8B 11 00 00  Beeping...&deg;&middot;&curren;&middot;&deg;&deg;
<!--B-->0230: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 64  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;d
<!--B-->0240: 82 0A 00 08 74 38 36 31 33 2E 45 58 5B 88 10 00  &curren;&not;&deg;&middot;t8613.EX[&curren;&middot;&deg;
<!--B-->0250: 00 00 45 75 72 6F 41 73 73 65 6D 62 6C 65 72 2F  &deg;&deg;EuroAssembler/
<!--B-->0260: 88 05 00 00 9D 33 66 3D 88 2A 00 80 A0 01 00 0B  &curren;&middot;&deg;&deg;&curren;3f=&curren;*&deg;&curren;&curren;&middot;&deg;&middot;
<!--B-->0270: 45 78 69 74 50 72 6F 63 65 73 73 0C 6B 65 72 6E  ExitProcess&middot;kern
<!--B-->0280: 65 6C 33 32 2E 64 6C 6C 0B 45 78 69 74 50 72 6F  el32.dll&middot;ExitPro
<!--B-->0290: 63 65 73 73 C9 96 0D 00 00 05 2E 74 65 78 74 04  cess&curren;&curren;&middot;&deg;&deg;&middot;.text&middot;
<!--B-->02A0: 2E 62 73 73 EB 99 09 00 69 1E 00 00 00 02 01 00  .bss&curren;&curren;&middot;&deg;i&middot;&deg;&deg;&deg;&middot;&middot;&deg;
<!--B-->02B0: D4 99 09 00 69 07 00 00 00 03 01 00 EA 8C 0E 00  &curren;&curren;&middot;&deg;i&middot;&deg;&deg;&deg;&middot;&middot;&deg;&curren;&curren;&middot;&deg;
<!--B-->02C0: 0B 45 78 69 74 50 72 6F 63 65 73 73 00 E2 8C 0C  &middot;ExitProcess&deg;&curren;&curren;&middot;
<!--B-->02D0: 00 09 57 72 69 74 65 2E 57 33 32 00 6A 90 0F 00  &deg;&middot;Write.W32&deg;j&curren;&middot;&deg;
<!--B-->02E0: 00 01 08 45 78 69 74 2E 57 33 32 00 00 00 D4 A1  &deg;&middot;&middot;Exit.W32&deg;&deg;&deg;&curren;&curren;
<!--B-->02F0: 24 00 01 00 00 00 00 BE 00 00 00 00 C7 06 45 6E  $&deg;&middot;&deg;&deg;&deg;&deg;&curren;&deg;&deg;&deg;&deg;&curren;&middot;En
<!--B-->0300: 64 00 C7 46 03 0D 0A 00 00 E8 00 00 00 00 6A 00  d&deg;&curren;F&middot;&middot;&not;&deg;&deg;&curren;&deg;&deg;&deg;&deg;j&deg;
<!--B-->0310: E9 00 00 00 00 36 9D 0D 00 E4 01 54 02 A4 13 56  &curren;&deg;&deg;&deg;&deg;6&curren;&middot;&deg;&curren;&middot;T&middot;&curren;&middot;V
<!--B-->0320: 02 A4 1A 56 01 F7 8B 07 00 00 00 00 00 00 00 6E  &middot;&curren;&middot;V&middot;&curren;&curren;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;n
<!--B-->0330: F1 CD 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &curren;&curren;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->03A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->03B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->03C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->03D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->03E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->03F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 42  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;B
<!--B-->0400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 21  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;!
<!--B-->0410: 00 00 00 00 00 00 00 00 00 13 19 00 27 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&middot;&deg;&#039;&deg;&deg;&deg;
<!--B-->0420: 00 00 00 00 00 2D 08 42 65 65 70 2E 57 33 32 09  &deg;&deg;&deg;&deg;&deg;-&middot;Beep.W32&middot;
<!--B-->0430: 00 00 0C 47 65 74 53 74 64 48 61 6E 64 6C 65 09  &deg;&deg;&middot;GetStdHandle&middot;
<!--B-->0440: 00 00 09 57 72 69 74 65 46 69 6C 65 09 00 08 45  &deg;&deg;&middot;WriteFile&middot;&deg;&middot;E
<!--B-->0450: 78 69 74 2E 57 33 32 24 00 00 00 00 00 00 00 00  xit.W32$&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0490: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->04A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->04B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->04C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->04D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->04E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->04F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0510: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0570: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0590: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->05A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->05B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->05C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->05D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->05E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->05F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0600: 00 00 00 1A 20 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&middot;&macr;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0610: 00 00 16 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0620: 00 00 00 13 00 27 03 4D 73 67 01 00 04 42 65 65  &deg;&deg;&deg;&middot;&deg;&#039;&middot;Msg&middot;&deg;&middot;Bee
<!--B-->0630: 70 09 00 00 09 57 72 69 74 65 2E 57 33 32 09 00  p&middot;&deg;&deg;&middot;Write.W32&middot;&deg;
<!--B-->0640: 0B 45 78 69 74 50 72 6F 63 65 73 73 24 00 00 00  &middot;ExitProcess$&deg;&deg;&deg;
<!--B-->0650: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0660: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0670: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0680: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0690: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->06A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->06B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->06C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->06D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->06E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->06F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0700: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0710: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0720: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0740: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0750: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->07A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->07B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->07C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->07D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->07E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->07F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
</pre></dd></dl>
<!--TAILMENU-->
<!--Contents below the marker {!==TAILMENU==} was generated by "generate.php".-->
<br class='CLEAR'/><a id='bottom' href='#top'>&#x25B2;Back to the top&#x25B2;</a>
</body></html>