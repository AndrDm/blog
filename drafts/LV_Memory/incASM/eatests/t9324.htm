<!doctype html><html lang='en'><head>
<meta http-equiv='Content-Type' content='text/html; charset=utf-8'/>
<meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=2.0, user-scalable=yes'>
<meta name='robots' content='ALL,FOLLOW'/>
<meta name='description' content='t9324.htm test file'/>
<meta name='version' content='20250318'/>
<meta name='author' content='Pavel vitsoft Šrubař'/>
<link rel='stylesheet' href='../euroasm.css' type='text/css'/>
<link rel='shortcut icon' href='../favicon.ico'/>
<title>t9324.htm test file</title>
</head>
<body class='EATESTS' id='top'><div class='HEADMENU'><table>
<tr><td rowspan='2' title='&euro;ASM - assembler and linker'><img src='../favicon.ico' alt='EuroAssembler' />
<td><a href='../index.htm' title='Alphabetical index of all &euro;ASM elements, directives and instructions'>Index</a></td>
<td><a href='../eadoc/' class='EADOC' title='Documentation of EuroAssembler'>Manual</a></td>
<td><a href='https://euroassembler.eu/download/' title='History &amp; download of the latest and previous versions'>Download</a></td>
<td><a href='../easource/' class='EASOURCE' title='Source files of EuroAssembler itself'>Source</a></td>
<td><a href='../maclib/' class='MACLIB' title='Macro libraries shipped with &euro;ASM'>Macros</a></td>
<td rowspan='2' title='Find the searched token in any text file on this site'>
<form method='post' action='../search.php' enctype='multipart/form-data' accept-charset='utf-8'>
<input type='text' id='q' placeholder='Searched word(s)' name='q' value=''/>
<br/><label title='Check the box to find the expression even if it is surrounded by other letters | digits.'>
<input type='checkbox' name='EW'/><small>Embedded word</small></label>
<br/><label title='Check the box for case-insensitive search.'>
<input type='checkbox' name='CI'/><small>Case ins.</small></label>
<input type='submit' title='Search for the specified word|expression in all site files.' name='find' value='Search'/>
</form></td></tr><tr>
<td><a href='../sitemap.htm' title='List of directories and files on this site'>Sitemap</a></td>
<td><a href='../eadoc/links.htm' class='EADOC' title='References and external links to resources used in EuroAssembler developement'>Links</a></td>
<td><a href='https://euroassembler.eu/forum/' title='Discussion forum concerning EuroAssembler'>Forum</a></td>
<td><a href='../eatests/' class='EATESTS' title='Program snippets for testing the function of &euro;ASM'>Tests</a></td>
<td><a href='../objlib/' class='OBJLIB' title='Skeletons and sample objects and projects shipped with &euro;ASM'>Projects</a></td>
</tr></table></div>
<!--Contents above the marker {!==/HEADMENU==} was generated by "generate.php".-->
<!--/HEADMENU-->
<h1 id='TestTitle'>Test <a class='EXT' href='t9324.htm'>t9324</a>:
<!--T-->LIBCOF library for 64bit Linux links LIBCOF library
</h1><button onclick='window.location="../eatests/manager.php?test=t9324";'>Manage t9324</button>
<br class='CLEAR'/>
<dl><dt>Source &amp; expected listing <q>t9324.htm.lst</q></dt><dd><samp>
|                          |  EUROASM AUTOSEGMENT=ON,CPU=x64,DUMPWIDTH=28
|7439333234                |%test %SET t9324
|                          |;;
|                          |;; Create the first auxiliary COFF module.
|                          |%test.WB PROGRAM FORMAT=COFF,MODEL=FLAT,WIDTH=64
|[.text]                   ::::Section changed.
|00000000:                 |Write.L64:: PROC           ; Display ASCIIZ string pointed to by RSI using 64bit Linux.
|00000000:31C9             |  XOR ECX,ECX              ; Clear RCX to keep the size of input string.
|00000002:31C0             |  XOR EAX,EAX              ; Clear AL, the searched terminating character
|00000004:4889F7           |  MOV RDI,RSI              ; %2 String address in RSI,RDI.
|00000007:48F7D1           |  NOT RCX                  ; Assume unlimited possible string size.
|0000000A:F2AE             |  REPNE SCASB              ; Find the zero terminator.
|0000000C:48F7D1           |  NOT RCX                  ; Get string size to RCX.
|0000000F:B801000000       |  MOV RAX,1                ; Kernel service sys_write.
|00000014:BF01000000       |  MOV RDI,1                ; %1 I/O handle STDOUT_FILENO.
|00000019:89CA             |  MOV EDX,ECX              ; %3 String size.
|0000001B:0F05             |  SYSCALL                  ; Invoke kernel.
|0000001D:C3               |  RET                      ; Return to caller. RAX,RCX,RDX,RSI,RDI,R11 are clobbered.
|0000001E:                 | ENDPROC Write.L64:
|                          |;;
|0000001E:                 |Beep.L64:: PROC            ; Display message "Beeping.." and play a sound using 64bit Linux.
|0000001E:488D35(00000000) |  LEA RSI,[=B"Beeping..."] ; Define a literal string in [.rodata].
|00000025:E8D6FFFFFF       |  CALL Write.L64::         ; Display the notification "Beeping...".
|0000002A:488D35(00000000) |  LEA RSI,[=W(0x0007)]     ; Define ASCIIZ string with BEL character in [.rodata].
|00000031:E8CAFFFFFF       |  CALL Write.L64::         ; Play the beep sound.
|00000036:C3               |  RET                      ; Return to caller. RAX,RCX,RDX,RSI,RDI,R11 are clobbered.
|00000037:                 | ENDPROC Beep.L64:
|[@LT2]                    ====ListLiterals in section [@LT2].
|00000000:0700             =W(0x0007)
|[@LT1]                    ====ListLiterals in section [@LT1].
|00000000:42656570696E672E~=B"Beeping..."
|                          |ENDPROGRAM %test.WB
|        **** ListMap "t9324.WB.obj",model=FLAT,groups=0,segments=2,entry=,stack=
|          [.text],FA=00000064h,RVA=00000000h,size=00000037h=55,width=64,align=0010h,purpose=CODE
|          [.rodata],FA=000000B0h,RVA=00000000h,size=0000000Dh=13,width=64,align=0010h,purpose=RODATA+LITERAL
|        **** ListGlobals "t9324.WB.obj",Global=0,Public=2,Extern=0,eXport=0,Import=0
|        Beep.L64,[.text]:0000001Eh,scope='P'
|        Write.L64,[.text]:00000000h,scope='P'
|                          |;;
|                          |;; Create the second auxiliary COFF module.
|                          |%test.EX PROGRAM FORMAT=COFF,MODEL=FLAT,WIDTH=64
|[.text]                   ::::Section changed.
|00000000:                 |Exit.L64:: PROC            ; Display message "End", terminate the program.
|00000000:488D35(00000000) |  LEA RSI,[.M:]            ; String "End" will be defined in segment [.bss] at RSI.
|00000007:C706456E6400     |  MOVD [RSI+0],"End"       ; Dynamically define the message "End".
|0000000D:C746030A000000   |  MOVD [RSI+3],0x0A        ; LF+NUL.
|00000014:E8(00000000)     |  CALL Write.L64::         ; Display the notification "End".
|00000019:31FF             |  XOR EDI,EDI              ; %1 Errorlevel=0.
|0000001B:B83C000000       |  MOV RAX,60               ; Kernel service sys_exit.
|00000020:0F05             |  SYSCALL                  ; Invoke kernel. No return to caller.
|[.bss]                    ::::Section changed.
|00000000:..............   |.M:DB 7*BYTE               ; Reserve space for ASCIIZ string "End" in [.bss].
|[.text]                   ::::Section changed.
|00000022:                 | ENDPROC Exit.L64:
|                          |ENDPROGRAM %test.EX
|        **** ListMap "t9324.EX.obj",model=FLAT,groups=0,segments=2,entry=,stack=
|          [.text],FA=00000064h,RVA=00000000h,size=00000022h=34,width=64,align=0010h,purpose=CODE
|          [.bss],FA=00000000h,RVA=00000000h,size=00000007h=7,width=64,align=0010h,purpose=BSS
|        **** ListGlobals "t9324.EX.obj",Global=0,Public=1,Extern=1,eXport=0,Import=0
|        Exit.L64,[.text]:00000000h,scope='P'
|        Write.L64,[Write.L64]:00000000h,scope='E'
|                          |;;
|                          |;; Create the auxiliary LIBCOF library.
|                          |%test.coff PROGRAM FORMAT=LIBCOF,MODEL=FLAT,WIDTH=64
|                          |   GLOBAL Write.L64,Beep.L64,Exit.L64
|                          |   LINK %test.WB.obj, %test.EX.obj
|                          | ENDPROGRAM %test.coff
|# I0560 Linking COFF module "./t9324.WB.obj".
|# I0560 Linking COFF module "./t9324.EX.obj".
|        **** ListMap "t9324.coff.lib",model=FLAT,groups=0,segments=0,entry=,stack=
|        **** ListGlobals "t9324.coff.lib",Global=0,Public=0,Extern=3,eXport=0,Import=0
|        Beep.L64,[Beep.L64]:00000000h,scope='E'
|        Exit.L64,[Exit.L64]:00000000h,scope='E'
|        Write.L64,[Write.L64]:00000000h,scope='E'
|                          |;;
|                          |;; Create the main LIBCOF library.
|                          |%test PROGRAM FORMAT=LIBCOF,MODEL=FLAT,WIDTH=64
|                          |   GLOBAL Write.L64,Beep.L64,Exit.L64
|                          |      LINK %test.coff.lib
|[.data]                   ::::Section changed.
|00000000:363462697420464C~|Msg:: DB '%^WIDTH[]bit %^MODEL %^FORMAT program "%^OUTFILE".',10,0
|                          | ENDPROGRAM %test
|# I0561 Linking LIBCOF library "./t9324.coff.lib".
|        **** ListMap "t9324.lib",model=FLAT,groups=0,segments=1,entry=,stack=
|          [.data],FA=0000003Ch,RVA=00000000h,size=00000028h=40,width=64,align=0010h,purpose=DATA
|        **** ListGlobals "t9324.lib",Global=0,Public=1,Extern=3,eXport=0,Import=0
|        Beep.L64,[Beep.L64]:00000000h,scope='E'
|        Exit.L64,[Exit.L64]:00000000h,scope='E'
|        Msg,[.data]:00000000h,scope='P'
|        Write.L64,[Write.L64]:00000000h,scope='E'
</samp></dd></dl>
<dl><dt>Expected messages <q>t9324.out</q></dt><dd><code class='PRE'>
<!--M-->I0180 Assembling source file "t9324.htm".
<!--M-->I0270 Assembling source "t9324".
<!--M-->I0310 Assembling source pass 1.
<!--M-->I0330 Assembling source pass 2 - final.
<!--M-->I0470 Assembling program "t9324.WB". "t9324.htm"{45}
<!--M-->I0510 Assembling program pass 1. "t9324.htm"{45}
<!--M-->I0510 Assembling program pass 2. "t9324.htm"{45}
<!--M-->I0530 Assembling program pass 3 - final. "t9324.htm"{45}
<!--M-->I0660 64bit FLAT COFF file "t9324.WB.obj" created, size=446. "t9324.htm"{72}
<!--M-->I0650 Program "t9324.WB" assembled in 3 passes with errorlevel 0. "t9324.htm"{72}
<!--M-->I0470 Assembling program "t9324.EX". "t9324.htm"{81}
<!--M-->I0510 Assembling program pass 1. "t9324.htm"{81}
<!--M-->I0510 Assembling program pass 2. "t9324.htm"{81}
<!--M-->I0530 Assembling program pass 3 - final. "t9324.htm"{81}
<!--M-->I0660 64bit FLAT COFF file "t9324.EX.obj" created, size=341. "t9324.htm"{95}
<!--M-->I0650 Program "t9324.EX" assembled in 3 passes with errorlevel 0. "t9324.htm"{95}
<!--M-->I0470 Assembling program "t9324.coff". "t9324.htm"{104}
<!--M-->I0510 Assembling program pass 1. "t9324.htm"{104}
<!--M-->I0510 Assembling program pass 2. "t9324.htm"{104}
<!--M-->I0530 Assembling program pass 3 - final. "t9324.htm"{104}
<!--M-->I0560 Linking COFF module "./t9324.WB.obj". "t9324.htm"{107}
<!--M-->I0560 Linking COFF module "./t9324.EX.obj". "t9324.htm"{107}
<!--M-->I0660 64bit FLAT LIBCOF file "t9324.coff.lib" created, size=1267. "t9324.htm"{107}
<!--M-->I0650 Program "t9324.coff" assembled in 3 passes with errorlevel 0. "t9324.htm"{107}
<!--M-->I0470 Assembling program "t9324". "t9324.htm"{117}
<!--M-->I0510 Assembling program pass 1. "t9324.htm"{117}
<!--M-->I0510 Assembling program pass 2. "t9324.htm"{117}
<!--M-->I0530 Assembling program pass 3 - final. "t9324.htm"{117}
<!--M-->I0561 Linking LIBCOF library "./t9324.coff.lib". "t9324.htm"{122}
<!--M-->I0660 64bit FLAT LIBCOF file "t9324.lib" created, size=1621. "t9324.htm"{122}
<!--M-->I0650 Program "t9324" assembled in 3 passes with errorlevel 0. "t9324.htm"{122}
<!--M-->I0750 Source "t9324" (276 lines) assembled in 2 passes with errorlevel 0.
<!--M-->I0860 Listing file "t9324.htm.lst" created, size=6446.
<!--M-->I0990 EuroAssembler terminated with errorlevel 0.
</code></dd></dl>
<dl><dt>Expected output file <q>t9324.
<!--E-->lib
</q></dt><dd><pre>
<!--B-->0000: 21 3C 61 72 63 68 3E 0A 2F 20 20 20 20 20 20 20  !&lt;arch&gt;&not;/&macr;&macr;&macr;&macr;&macr;&macr;&macr;
<!--B-->0010: 20 20 20 20 20 20 20 20 30 20 20 20 20 20 20 20  &macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;&macr;&macr;
<!--B-->0020: 20 20 20 20 30 20 20 20 20 20 30 20 20 20 20 20  &macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;
<!--B-->0030: 31 30 30 36 36 36 20 20 31 30 34 20 20 20 20 20  100666&macr;&macr;104&macr;&macr;&macr;&macr;&macr;
<!--B-->0040: 20 20 60 0A 00 00 00 09 00 00 01 8C 00 00 01 8C  &macr;&macr;`&not;&deg;&deg;&deg;&middot;&deg;&deg;&middot;&curren;&deg;&deg;&middot;&curren;
<!--B-->0050: 00 00 02 CA 00 00 02 CA 00 00 02 CA 00 00 02 CA  &deg;&deg;&middot;&curren;&deg;&deg;&middot;&curren;&deg;&deg;&middot;&curren;&deg;&deg;&middot;&curren;
<!--B-->0060: 00 00 04 C4 00 00 04 C4 00 00 04 C4 2E 64 61 74  &deg;&deg;&middot;&curren;&deg;&deg;&middot;&curren;&deg;&deg;&middot;&curren;.dat
<!--B-->0070: 61 00 4D 73 67 00 2E 74 65 78 74 00 2E 72 6F 64  a&deg;Msg&deg;.text&deg;.rod
<!--B-->0080: 61 74 61 00 42 65 65 70 2E 4C 36 34 00 57 72 69  ata&deg;Beep.L64&deg;Wri
<!--B-->0090: 74 65 2E 4C 36 34 00 2E 74 65 78 74 00 2E 62 73  te.L64&deg;.text&deg;.bs
<!--B-->00A0: 73 00 45 78 69 74 2E 4C 36 34 00 0A 2F 20 20 20  s&deg;Exit.L64&deg;&not;/&macr;&macr;&macr;
<!--B-->00B0: 20 20 20 20 20 20 20 20 20 20 20 20 30 20 20 20  &macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;0&macr;&macr;&macr;
<!--B-->00C0: 20 20 20 20 20 20 20 20 30 20 20 20 20 20 30 20  &macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;0&macr;
<!--B-->00D0: 20 20 20 20 31 30 30 36 36 36 20 20 31 30 32 20  &macr;&macr;&macr;&macr;100666&macr;&macr;102&macr;
<!--B-->00E0: 20 20 20 20 20 20 60 0A 03 00 00 00 8C 01 00 00  &macr;&macr;&macr;&macr;&macr;&macr;`&not;&middot;&deg;&deg;&deg;&curren;&middot;&deg;&deg;
<!--B-->00F0: CA 02 00 00 C4 04 00 00 09 00 00 00 03 00 01 00  &curren;&middot;&deg;&deg;&curren;&middot;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;&middot;&deg;
<!--B-->0100: 02 00 02 00 03 00 02 00 03 00 01 00 02 00 2E 62  &middot;&deg;&middot;&deg;&middot;&deg;&middot;&deg;&middot;&deg;&middot;&deg;&middot;&deg;.b
<!--B-->0110: 73 73 00 2E 64 61 74 61 00 2E 72 6F 64 61 74 61  ss&deg;.data&deg;.rodata
<!--B-->0120: 00 2E 74 65 78 74 00 2E 74 65 78 74 00 42 65 65  &deg;.text&deg;.text&deg;Bee
<!--B-->0130: 70 2E 4C 36 34 00 45 78 69 74 2E 4C 36 34 00 4D  p.L64&deg;Exit.L64&deg;M
<!--B-->0140: 73 67 00 57 72 69 74 65 2E 4C 36 34 00 0A 2F 2F  sg&deg;Write.L64&deg;&not;//
<!--B-->0150: 20 20 20 20 20 20 20 20 20 20 20 20 20 20 30 20  &macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;0&macr;
<!--B-->0160: 20 20 20 20 20 20 20 20 20 20 30 20 20 20 20 20  &macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;
<!--B-->0170: 30 20 20 20 20 20 31 30 30 36 36 36 20 20 32 20  0&macr;&macr;&macr;&macr;&macr;100666&macr;&macr;2&macr;
<!--B-->0180: 20 20 20 20 20 20 20 20 60 0A 00 0A 74 39 33 32  &macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;`&not;&deg;&not;t932
<!--B-->0190: 34 2F 20 20 20 20 20 20 20 20 20 20 30 20 20 20  4/&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;0&macr;&macr;&macr;
<!--B-->01A0: 20 20 20 20 20 20 20 20 30 20 20 20 20 20 30 20  &macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;0&macr;
<!--B-->01B0: 20 20 20 20 31 30 30 36 36 36 20 20 32 35 38 20  &macr;&macr;&macr;&macr;100666&macr;&macr;258&macr;
<!--B-->01C0: 20 20 20 20 20 20 60 0A 64 86 01 00 00 00 00 00  &macr;&macr;&macr;&macr;&macr;&macr;`&not;d&curren;&middot;&deg;&deg;&deg;&deg;&deg;
<!--B-->01D0: 64 00 00 00 08 00 00 00 00 00 20 00 2E 64 61 74  d&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&macr;&deg;.dat
<!--B-->01E0: 61 00 00 00 00 00 00 00 00 00 00 00 28 00 00 00  a&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;(&deg;&deg;&deg;
<!--B-->01F0: 3C 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &lt;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0200: 40 00 50 C0 36 34 62 69 74 20 46 4C 41 54 20 4C  @&deg;P&curren;64bit&macr;FLAT&macr;L
<!--B-->0210: 49 42 43 4F 46 20 70 72 6F 67 72 61 6D 20 22 74  IBCOF&macr;program&macr;&quot;t
<!--B-->0220: 39 33 32 34 2E 6C 69 62 22 2E 0A 00 2E 66 69 6C  9324.lib&quot;.&not;&deg;.fil
<!--B-->0230: 65 00 00 00 00 00 00 00 FE FF 00 00 67 01 74 39  e&deg;&deg;&deg;&deg;&deg;&deg;&deg;&curren;&curren;&deg;&deg;g&middot;t9
<!--B-->0240: 33 32 34 2E 68 74 6D 00 00 00 00 00 00 00 00 00  324.htm&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0250: 2E 64 61 74 61 00 00 00 00 00 00 00 01 00 00 00  .data&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;
<!--B-->0260: 03 01 28 00 00 00 00 00 00 00 00 00 00 00 00 00  &middot;&middot;(&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0270: 00 00 00 00 42 65 65 70 2E 4C 36 34 00 00 00 00  &deg;&deg;&deg;&deg;Beep.L64&deg;&deg;&deg;&deg;
<!--B-->0280: 00 00 01 01 02 00 45 78 69 74 2E 4C 36 34 00 00  &deg;&deg;&middot;&middot;&middot;&deg;Exit.L64&deg;&deg;
<!--B-->0290: 00 00 00 00 01 01 02 00 4D 73 67 00 00 00 00 00  &deg;&deg;&deg;&deg;&middot;&middot;&middot;&deg;Msg&deg;&deg;&deg;&deg;&deg;
<!--B-->02A0: 00 00 00 00 01 00 0C 00 02 00 00 00 00 00 04 00  &deg;&deg;&deg;&deg;&middot;&deg;&middot;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&middot;&deg;
<!--B-->02B0: 00 00 00 00 00 00 00 00 01 01 02 00 0E 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&middot;&middot;&deg;&middot;&deg;&deg;&deg;
<!--B-->02C0: 57 72 69 74 65 2E 4C 36 34 00 74 39 33 32 34 2E  Write.L64&deg;t9324.
<!--B-->02D0: 57 42 2F 20 20 20 20 20 20 20 30 20 20 20 20 20  WB/&macr;&macr;&macr;&macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;
<!--B-->02E0: 20 20 20 20 20 20 30 20 20 20 20 20 30 20 20 20  &macr;&macr;&macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;0&macr;&macr;&macr;
<!--B-->02F0: 20 20 31 30 30 36 36 36 20 20 34 34 36 20 20 20  &macr;&macr;100666&macr;&macr;446&macr;&macr;&macr;
<!--B-->0300: 20 20 20 20 60 0A 64 86 02 00 00 00 00 00 BE 00  &macr;&macr;&macr;&macr;`&not;d&curren;&middot;&deg;&deg;&deg;&deg;&deg;&curren;&deg;
<!--B-->0310: 00 00 0C 00 00 00 00 00 20 00 2E 74 65 78 74 00  &deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&macr;&deg;.text&deg;
<!--B-->0320: 00 00 00 00 00 00 00 00 00 00 37 00 00 00 64 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;7&deg;&deg;&deg;d&deg;
<!--B-->0330: 00 00 9C 00 00 00 00 00 00 00 02 00 00 00 20 00  &deg;&deg;&curren;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&macr;&deg;
<!--B-->0340: 50 60 2E 72 6F 64 61 74 61 00 00 00 00 00 00 00  P`.rodata&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0350: 00 00 0D 00 00 00 B0 00 00 00 00 00 00 00 00 00  &deg;&deg;&middot;&deg;&deg;&deg;&curren;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0360: 00 00 00 00 00 00 40 00 50 40 31 C9 31 C0 48 89  &deg;&deg;&deg;&deg;&deg;&deg;@&deg;P@1&curren;1&curren;H&curren;
<!--B-->0370: F7 48 F7 D1 F2 AE 48 F7 D1 B8 01 00 00 00 BF 01  &curren;H&curren;&curren;&curren;&curren;H&curren;&curren;&curren;&middot;&deg;&deg;&deg;&curren;&middot;
<!--B-->0380: 00 00 00 89 CA 0F 05 C3 48 8D 35 02 00 00 00 E8  &deg;&deg;&deg;&curren;&curren;&middot;&middot;&curren;H&curren;5&middot;&deg;&deg;&deg;&curren;
<!--B-->0390: D6 FF FF FF 48 8D 35 00 00 00 00 E8 CA FF FF FF  &curren;&curren;&curren;&curren;H&curren;5&deg;&deg;&deg;&deg;&curren;&curren;&curren;&curren;&curren;
<!--B-->03A0: C3 00 21 00 00 00 02 00 00 00 04 00 2D 00 00 00  &curren;&deg;!&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;-&deg;&deg;&deg;
<!--B-->03B0: 02 00 00 00 04 00 07 00 42 65 65 70 69 6E 67 2E  &middot;&deg;&deg;&deg;&middot;&deg;&middot;&deg;Beeping.
<!--B-->03C0: 2E 2E 00 00 2E 66 69 6C 65 00 00 00 00 00 00 00  ..&deg;&deg;.file&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->03D0: FE FF 00 00 67 01 74 39 33 32 34 2E 68 74 6D 00  &curren;&curren;&deg;&deg;g&middot;t9324.htm&deg;
<!--B-->03E0: 00 00 00 00 00 00 00 00 2E 72 6F 64 61 74 61 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;.rodata&deg;
<!--B-->03F0: 00 00 00 00 02 00 00 00 03 01 0D 00 00 00 00 00  &deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&middot;&middot;&deg;&deg;&deg;&deg;&deg;
<!--B-->0400: 00 00 00 00 00 00 00 00 00 00 00 00 2E 74 65 78  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;.tex
<!--B-->0410: 74 00 00 00 00 00 00 00 01 00 00 00 03 01 37 00  t&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&middot;7&deg;
<!--B-->0420: 00 00 02 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0430: 00 00 00 00 04 00 00 00 02 00 00 00 02 00 0C 00  &deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;&middot;&deg;
<!--B-->0440: 03 00 00 00 00 00 13 00 00 00 00 00 00 00 02 00  &middot;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;
<!--B-->0450: 0D 00 03 00 40 4C 54 31 00 00 00 00 02 00 00 00  &middot;&deg;&middot;&deg;@LT1&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;
<!--B-->0460: 02 00 01 01 03 00 40 4C 54 32 00 00 00 00 00 00  &middot;&deg;&middot;&middot;&middot;&deg;@LT2&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0470: 00 00 02 00 01 01 03 00 42 65 65 70 2E 4C 36 34  &deg;&deg;&middot;&deg;&middot;&middot;&middot;&deg;Beep.L64
<!--B-->0480: 1E 00 00 00 01 00 01 02 02 00 00 00 00 00 1E 00  &middot;&deg;&deg;&deg;&middot;&deg;&middot;&middot;&middot;&deg;&deg;&deg;&deg;&deg;&middot;&deg;
<!--B-->0490: 00 00 00 00 00 00 01 00 01 02 02 00 28 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&middot;&middot;&middot;&deg;(&deg;&deg;&deg;
<!--B-->04A0: 3D 42 22 42 65 65 70 69 6E 67 2E 2E 2E 22 00 3D  =B&quot;Beeping...&quot;&deg;=
<!--B-->04B0: 57 28 30 78 30 30 30 37 29 00 57 72 69 74 65 2E  W(0x0007)&deg;Write.
<!--B-->04C0: 4C 36 34 00 74 39 33 32 34 2E 45 58 2F 20 20 20  L64&deg;t9324.EX/&macr;&macr;&macr;
<!--B-->04D0: 20 20 20 20 30 20 20 20 20 20 20 20 20 20 20 20  &macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;&macr;
<!--B-->04E0: 30 20 20 20 20 20 30 20 20 20 20 20 31 30 30 36  0&macr;&macr;&macr;&macr;&macr;0&macr;&macr;&macr;&macr;&macr;1006
<!--B-->04F0: 36 36 20 20 33 34 31 20 20 20 20 20 20 20 60 0A  66&macr;&macr;341&macr;&macr;&macr;&macr;&macr;&macr;&macr;`&not;
<!--B-->0500: 64 86 02 00 00 00 00 00 9A 00 00 00 09 00 00 00  d&curren;&middot;&deg;&deg;&deg;&deg;&deg;&curren;&deg;&deg;&deg;&middot;&deg;&deg;&deg;
<!--B-->0510: 00 00 20 00 2E 74 65 78 74 00 00 00 00 00 00 00  &deg;&deg;&macr;&deg;.text&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0520: 00 00 00 00 22 00 00 00 64 00 00 00 86 00 00 00  &deg;&deg;&deg;&deg;&quot;&deg;&deg;&deg;d&deg;&deg;&deg;&curren;&deg;&deg;&deg;
<!--B-->0530: 00 00 00 00 02 00 00 00 20 00 50 60 2E 62 73 73  &deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&macr;&deg;P`.bss
<!--B-->0540: 00 00 00 00 00 00 00 00 00 00 00 00 07 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;
<!--B-->0550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0560: 80 00 50 C0 48 8D 35 00 00 00 00 C7 06 45 6E 64  &curren;&deg;P&curren;H&curren;5&deg;&deg;&deg;&deg;&curren;&middot;End
<!--B-->0570: 00 C7 46 03 0A 00 00 00 E8 00 00 00 00 31 FF B8  &deg;&curren;F&middot;&not;&deg;&deg;&deg;&curren;&deg;&deg;&deg;&deg;1&curren;&curren;
<!--B-->0580: 3C 00 00 00 0F 05 03 00 00 00 02 00 00 00 04 00  &lt;&deg;&deg;&deg;&middot;&middot;&middot;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;
<!--B-->0590: 15 00 00 00 08 00 00 00 04 00 2E 66 69 6C 65 00  &middot;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;.file&deg;
<!--B-->05A0: 00 00 00 00 00 00 FE FF 00 00 67 01 74 39 33 32  &deg;&deg;&deg;&deg;&deg;&deg;&curren;&curren;&deg;&deg;g&middot;t932
<!--B-->05B0: 34 2E 68 74 6D 00 00 00 00 00 00 00 00 00 2E 62  4.htm&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;.b
<!--B-->05C0: 73 73 00 00 00 00 00 00 00 00 02 00 00 00 03 01  ss&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&middot;
<!--B-->05D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->05E0: 00 00 2E 74 65 78 74 00 00 00 00 00 00 00 01 00  &deg;&deg;.text&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;
<!--B-->05F0: 00 00 03 01 22 00 00 00 02 00 00 00 00 00 00 00  &deg;&deg;&middot;&middot;&quot;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0600: 00 00 00 00 00 00 00 00 00 00 04 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;
<!--B-->0610: 00 00 02 00 0C 00 03 00 45 78 69 74 2E 4C 36 34  &deg;&deg;&middot;&deg;&middot;&deg;&middot;&deg;Exit.L64
<!--B-->0620: 00 00 00 00 01 00 01 02 02 00 00 00 00 00 0F 00  &deg;&deg;&deg;&deg;&middot;&deg;&middot;&middot;&middot;&deg;&deg;&deg;&deg;&deg;&middot;&deg;
<!--B-->0630: 00 00 00 00 00 00 00 00 01 01 02 00 19 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&middot;&middot;&deg;&middot;&deg;&deg;&deg;
<!--B-->0640: 45 78 69 74 2E 4C 36 34 2E 4D 00 57 72 69 74 65  Exit.L64.M&deg;Write
<!--B-->0650: 2E 4C 36 34 00                                   .L64&deg;
</pre></dd></dl>
<!--TAILMENU-->
<!--Contents below the marker {!==TAILMENU==} was generated by "generate.php".-->
<br class='CLEAR'/><a id='bottom' href='#top'>&#x25B2;Back to the top&#x25B2;</a>
</body></html>