<!doctype html><html lang='en'><head>
<meta http-equiv='Content-Type' content='text/html; charset=utf-8'/>
<meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=2.0, user-scalable=yes'>
<meta name='robots' content='ALL,FOLLOW'/>
<meta name='description' content='t8625.htm test file'/>
<meta name='version' content='20250318'/>
<meta name='author' content='Pavel vitsoft Šrubař'/>
<link rel='stylesheet' href='../euroasm.css' type='text/css'/>
<link rel='shortcut icon' href='../favicon.ico'/>
<title>t8625.htm test file</title>
</head>
<body class='EATESTS' id='top'><div class='HEADMENU'><table>
<tr><td rowspan='2' title='&euro;ASM - assembler and linker'><img src='../favicon.ico' alt='EuroAssembler' />
<td><a href='../index.htm' title='Alphabetical index of all &euro;ASM elements, directives and instructions'>Index</a></td>
<td><a href='../eadoc/' class='EADOC' title='Documentation of EuroAssembler'>Manual</a></td>
<td><a href='https://euroassembler.eu/download/' title='History &amp; download of the latest and previous versions'>Download</a></td>
<td><a href='../easource/' class='EASOURCE' title='Source files of EuroAssembler itself'>Source</a></td>
<td><a href='../maclib/' class='MACLIB' title='Macro libraries shipped with &euro;ASM'>Macros</a></td>
<td rowspan='2' title='Find the searched token in any text file on this site'>
<form method='post' action='../search.php' enctype='multipart/form-data' accept-charset='utf-8'>
<input type='text' id='q' placeholder='Searched word(s)' name='q' value=''/>
<br/><label title='Check the box to find the expression even if it is surrounded by other letters | digits.'>
<input type='checkbox' name='EW'/><small>Embedded word</small></label>
<br/><label title='Check the box for case-insensitive search.'>
<input type='checkbox' name='CI'/><small>Case ins.</small></label>
<input type='submit' title='Search for the specified word|expression in all site files.' name='find' value='Search'/>
</form></td></tr><tr>
<td><a href='../sitemap.htm' title='List of directories and files on this site'>Sitemap</a></td>
<td><a href='../eadoc/links.htm' class='EADOC' title='References and external links to resources used in EuroAssembler developement'>Links</a></td>
<td><a href='https://euroassembler.eu/forum/' title='Discussion forum concerning EuroAssembler'>Forum</a></td>
<td><a href='../eatests/' class='EATESTS' title='Program snippets for testing the function of &euro;ASM'>Tests</a></td>
<td><a href='../objlib/' class='OBJLIB' title='Skeletons and sample objects and projects shipped with &euro;ASM'>Projects</a></td>
</tr></table></div>
<!--Contents above the marker {!==/HEADMENU==} was generated by "generate.php".-->
<!--/HEADMENU-->
<h1 id='TestTitle'>Test <a class='EXT' href='t8625.htm'>t8625</a>:
<!--T-->LIBOMF library for 32bit Windows links DLL library
</h1><button onclick='window.location="../eatests/manager.php?test=t8625";'>Manage t8625</button>
<br class='CLEAR'/>
<dl><dt>Source &amp; expected listing <q>t8625.htm.lst</q></dt><dd><samp>
|                       |  EUROASM AUTOSEGMENT=ON,CPU=386,DUMPWIDTH=25
|7438363235             |%test %SET t8625
|                       |;;
|                       |;; Create auxilliary DLL library.
|                       |%test PROGRAM FORMAT=DLL,MODEL=FLAT,WIDTH=32,ICONFILE=
|[.text]                ::::Section changed.
|00000000:              |Write.W32:: PROC         ; Display ASCIIZ string pointed to by ESI using Windows.
|                       |  IMPORT GetStdHandle:,WriteFile: ; Declare imported Windows kernel functions.
|00000000:6AF5          |  PUSH -11               ; %1 Identifier of standard output STD_OUTPUT_HANDLE.
|00000002:E8(00000000)  |  CALL GetStdHandle:     ; Stdcall the imported Windows function with 1 argument.
|00000007:89C3          |  MOV EBX,EAX            ; Save the returned StdOutput handle to EBX.
|00000009:89F7          |  MOV EDI,ESI            ; Use EDI to find the end of input string.
|0000000B:31C9          |  XOR ECX,ECX            ; Clear ECX to keep the size of input string.
|0000000D:31C0          |  XOR EAX,EAX            ; Clear AL, the searched NUL character.
|0000000F:F7D1          |  NOT ECX                ; Assume unlimited possible string size.
|00000011:F2AE          |  REPNE SCASB            ; Find the zero terminator.
|00000013:F7D1          |  NOT ECX                ; Get string size to ECX.
|00000015:52            |  PUSH EDX               ; Alloc temporary DWORD memory variable on stack.
|00000016:89E2          |    MOV EDX,ESP          ; Get address of this DWORD to EDX.
|00000018:50            |    PUSH EAX             ; %5 No overlap of WriteFile.
|00000019:52            |    PUSH EDX             ; %4 Memory variable for number of bytes.
|0000001A:51            |    PUSH ECX             ; %3 String size.
|0000001B:56            |    PUSH ESI             ; %2 String address.
|0000001C:53            |    PUSH EBX             ; %1 Standard output file handle.
|0000001D:E8(00000000)  |    CALL WriteFile:      ; Stdcall the imported function with 5 arguments.
|00000022:5A            |  POP EDX                ; Free and discard the temporary DWORD on stack.
|00000023:C3            |  RET                    ; Return to caller.
|00000024:              | ENDPROC Write.W32:
|                       |;;
|00000024:              |Beep.W32:: PROC          ; Play a sound in 32bit Windows.
|00000024:BE[00000000]  |  MOV ESI,=B"Beeping..." ; Define a literal string in [.rodata].
|00000029:E8D2FFFFFF    |  CALL Write.W32::       ; Display the notification "Beeping...".
|                       |  IMPORT Beep:           ; Declare imported Windows kernel function.
|0000002E:68C8000000    |  PUSH 200               ; %2 Sound duration [ms].
|00000033:68B8010000    |  PUSH 440               ; %1 Sound frequency [Hz].
|00000038:E8(00000000)  |  CALL Beep:             ; Stdcall the imported function with 2 arguments.
|0000003D:6890010000    |  PUSH 400               ; %2 Sound duration [ms].
|00000042:684B020000    |  PUSH 587               ; %1 Sound frequency [Hz].
|00000047:E8(00000000)  |  CALL Beep:             ; Stdcall the imported function with 2 arguments.
|0000004C:C3            |  RET                    ; Return to caller.
|0000004D:              | ENDPROC Beep.W32:
|                       |;;
|0000004D:              |Exit.W32:: PROC          ; Display the message "End" and terminate the program.
|0000004D:BE[00000000]  |  MOV ESI,.M:            ; Address in segment [.bss] for the message.
|00000052:C706456E6400  |  MOVD [ESI+0],"End"     ; Dynamically define the message "End".
|00000058:C746030D0A0000|  MOVD [ESI+3],0x0A0D    ; CR+LF.
|0000005F:E89CFFFFFF    |  CALL Write.W32::       ; Display the notification "End".
|                       |  IMPORT ExitProcess:    ; Use imported Windows kernel function.
|00000064:6A00          |  PUSH 0                 ; %1 Terminate with errorlevel 0.
|00000066:E9(00000000)  |  JMP ExitProcess:       ; Use imported function with 1 argument.
|[.bss]                 ::::Section changed.
|00000000:..............|.M: DB 7*BYTE            ; Reserve space for ASCIIZ string "End" in segment [.bss].
|[.text]                ::::Section changed.
|0000006B:              | ENDPROC Exit.W32:
|                       |;;
|                       |    EXPORT Write.W32,Beep.W32,Exit.W32
|[@LT1]                 ====ListLiterals in section [@LT1].
|00000000:42656570696E~~=B"Beeping..."
|                       |ENDPROGRAM %test
|        **** ListMap "t8625.dll",model=FLAT,groups=0,segments=6,entry=,stack=
|          [.text],FA=00000400h,VA=10001000h,size=0000006Bh=107,width=32,align=0010h,purpose=CODE
|          [.rodata],FA=00000600h,VA=10002000h,size=0000000Bh=11,width=32,align=0010h,purpose=RODATA+LITERAL
|          [.bss],FA=00000800h,VA=10003000h,size=00000007h=7,width=32,align=0010h,purpose=BSS
|          [.idata],FA=00000800h,VA=10004000h,size=000000ABh=171,width=32,align=8,purpose=IMPORT+IAT
|          [.edata],FA=00000A00h,VA=10005000h,size=0000006Ch=108,width=0,align=8,purpose=EXPORT
|          [.reloc],FA=00000C00h,VA=10006000h,size=0000001Ch=28,width=32,align=4,purpose=BASERELOC
|        **** ListGlobals "t8625.dll",Global=0,Public=0,Extern=0,eXport=3,Import=4
|        Beep,[.idata]:0000009Dh,VA=1000409Dh,scope='I',lib="kernel32.dll"
|        Beep.W32,[.text]:00000024h,VA=10001024h,scope='X'
|        Exit.W32,[.text]:0000004Dh,VA=1000104Dh,scope='X'
|        ExitProcess,[.idata]:000000A4h,VA=100040A4h,scope='I',lib="kernel32.dll"
|        GetStdHandle,[.idata]:0000008Fh,VA=1000408Fh,scope='I',lib="kernel32.dll"
|        Write.W32,[.text]:00000000h,VA=10001000h,scope='X'
|        WriteFile,[.idata]:00000096h,VA=10004096h,scope='I',lib="kernel32.dll"
|                       |;;
|                       |;; Create the main LIBOMF import library.
|                       |%test PROGRAM FORMAT=LIBOMF,MODEL=FLAT,WIDTH=32
|                       |   LINK %test.dll
|                       |ENDPROGRAM %test
|# I0561 Linking DLL library "./t8625.dll".
|        **** ListMap "t8625.lib",model=FLAT,groups=0,segments=0,entry=,stack=
|        **** ListGlobals "t8625.lib",Global=0,Public=0,Extern=0,eXport=0,Import=0
</samp></dd></dl>
<dl><dt>Expected messages <q>t8625.out</q></dt><dd><code class='PRE'>
<!--M-->I0180 Assembling source file "t8625.htm".
<!--M-->I0270 Assembling source "t8625".
<!--M-->I0310 Assembling source pass 1.
<!--M-->I0330 Assembling source pass 2 - final.
<!--M-->I0470 Assembling program "t8625". "t8625.htm"{45}
<!--M-->I0510 Assembling program pass 1. "t8625.htm"{45}
<!--M-->I0510 Assembling program pass 2. "t8625.htm"{45}
<!--M-->I0530 Assembling program pass 3 - final. "t8625.htm"{45}
<!--M-->I0660 32bit FLAT DLL file "t8625.dll" created, size=3100. "t8625.htm"{99}
<!--M-->I0650 Program "t8625" assembled in 3 passes with errorlevel 0. "t8625.htm"{99}
<!--M-->I0470 Assembling program "t8625". "t8625.htm"{117}
<!--M-->I0510 Assembling program pass 1. "t8625.htm"{117}
<!--M-->I0530 Assembling program pass 2 - final. "t8625.htm"{117}
<!--M-->I0561 Linking DLL library "./t8625.dll". "t8625.htm"{119}
<!--M-->I0660 32bit FLAT LIBOMF file "t8625.lib" created, size=1536. "t8625.htm"{119}
<!--M-->I0650 Program "t8625" assembled in 2 passes with errorlevel 0. "t8625.htm"{119}
<!--M-->I0750 Source "t8625" (247 lines) assembled in 2 passes with errorlevel 0.
<!--M-->I0860 Listing file "t8625.htm.lst" created, size=6267.
<!--M-->I0990 EuroAssembler terminated with errorlevel 0.
</code></dd></dl>
<dl><dt>Expected output file <q>t8625.
<!--E-->lib
</q></dt><dd><pre>
<!--B-->0000: F0 0D 00 00 02 00 00 02 00 01 00 00 00 00 00 00  &curren;&middot;&deg;&deg;&middot;&deg;&deg;&middot;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0010: 82 0A 00 08 42 65 65 70 2E 57 33 32 06 88 10 00  &curren;&not;&deg;&middot;Beep.W32&middot;&curren;&middot;&deg;
<!--B-->0020: 00 00 45 75 72 6F 41 73 73 65 6D 62 6C 65 72 2F  &deg;&deg;EuroAssembler/
<!--B-->0030: 88 05 00 00 9D 33 66 3D 88 21 00 80 A0 01 00 08  &curren;&middot;&deg;&deg;&curren;3f=&curren;!&deg;&curren;&curren;&middot;&deg;&middot;
<!--B-->0040: 42 65 65 70 2E 57 33 32 09 74 38 36 32 35 2E 64  Beep.W32&middot;t8625.d
<!--B-->0050: 6C 6C 08 42 65 65 70 2E 57 33 32 9E 96 02 00 00  ll&middot;Beep.W32&curren;&curren;&middot;&deg;&deg;
<!--B-->0060: 68 8C 0B 00 08 42 65 65 70 2E 57 33 32 00 FB 8B  h&curren;&middot;&deg;&middot;Beep.W32&deg;&curren;&curren;
<!--B-->0070: 0E 00 00 00 00 00 00 00 00 00 00 00 00 00 00 67  &middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;g
<!--B-->0080: 82 0A 00 08 45 78 69 74 2E 57 33 32 E8 88 10 00  &curren;&not;&deg;&middot;Exit.W32&curren;&curren;&middot;&deg;
<!--B-->0090: 00 00 45 75 72 6F 41 73 73 65 6D 62 6C 65 72 2F  &deg;&deg;EuroAssembler/
<!--B-->00A0: 88 05 00 00 9D 33 66 3D 88 21 00 80 A0 01 00 08  &curren;&middot;&deg;&deg;&curren;3f=&curren;!&deg;&curren;&curren;&middot;&deg;&middot;
<!--B-->00B0: 45 78 69 74 2E 57 33 32 09 74 38 36 32 35 2E 64  Exit.W32&middot;t8625.d
<!--B-->00C0: 6C 6C 08 45 78 69 74 2E 57 33 32 62 96 02 00 00  ll&middot;Exit.W32b&curren;&middot;&deg;&deg;
<!--B-->00D0: 68 8C 0B 00 08 45 78 69 74 2E 57 33 32 00 DD 8B  h&curren;&middot;&deg;&middot;Exit.W32&deg;&curren;&curren;
<!--B-->00E0: 0E 00 00 00 00 00 00 00 00 00 00 00 00 00 00 67  &middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;g
<!--B-->00F0: 82 0B 00 09 57 72 69 74 65 2E 57 33 32 75 88 10  &curren;&middot;&deg;&middot;Write.W32u&curren;&middot;
<!--B-->0100: 00 00 00 45 75 72 6F 41 73 73 65 6D 62 6C 65 72  &deg;&deg;&deg;EuroAssembler
<!--B-->0110: 2F 88 05 00 00 9D 33 66 3D 88 23 00 80 A0 01 00  /&curren;&middot;&deg;&deg;&curren;3f=&curren;#&deg;&curren;&curren;&middot;&deg;
<!--B-->0120: 09 57 72 69 74 65 2E 57 33 32 09 74 38 36 32 35  &middot;Write.W32&middot;t8625
<!--B-->0130: 2E 64 6C 6C 09 57 72 69 74 65 2E 57 33 32 7C 96  .dll&middot;Write.W32|&curren;
<!--B-->0140: 02 00 00 68 8C 0C 00 09 57 72 69 74 65 2E 57 33  &middot;&deg;&deg;h&curren;&middot;&deg;&middot;Write.W3
<!--B-->0150: 32 00 6A 8B 0A 00 00 00 00 00 00 00 00 00 00 6B  2&deg;j&curren;&not;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;k
<!--B-->0160: F1 9D 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &curren;&curren;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0170: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0180: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0190: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->01A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->01B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->01C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->01D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->01E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->01F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 72  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;r
<!--B-->0200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0210: 00 00 00 00 00 00 00 00 00 13 00 00 19 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&middot;&deg;&deg;&deg;
<!--B-->0220: 00 00 00 00 00 1F 08 42 65 65 70 2E 57 33 32 01  &deg;&deg;&deg;&deg;&deg;&middot;&middot;Beep.W32&middot;
<!--B-->0230: 00 00 08 45 78 69 74 2E 57 33 32 08 00 00 00 00  &deg;&deg;&middot;Exit.W32&middot;&deg;&deg;&deg;&deg;
<!--B-->0240: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0250: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0260: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0270: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0280: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0290: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->02A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->02B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->02C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->02D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->02E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->02F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0300: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0310: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0330: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0350: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0360: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0370: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0380: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0390: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->03A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->03B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->03C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->03D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->03E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->03F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0410: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0420: 00 00 00 13 00 19 09 57 72 69 74 65 2E 57 33 32  &deg;&deg;&deg;&middot;&deg;&middot;&middot;Write.W32
<!--B-->0430: 0F 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0440: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0450: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0460: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0470: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0490: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->04A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->04B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->04C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->04D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->04E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->04F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0500: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0510: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0520: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0530: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0540: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0550: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0560: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0570: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0580: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0590: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->05A0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->05B0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->05C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->05D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->05E0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->05F0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
</pre></dd></dl>
<!--TAILMENU-->
<!--Contents below the marker {!==TAILMENU==} was generated by "generate.php".-->
<br class='CLEAR'/><a id='bottom' href='#top'>&#x25B2;Back to the top&#x25B2;</a>
</body></html>