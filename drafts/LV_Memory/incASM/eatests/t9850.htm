<!doctype html><html lang='en'><head>
<meta http-equiv='Content-Type' content='text/html; charset=utf-8'/>
<meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=2.0, user-scalable=yes'>
<meta name='robots' content='ALL,FOLLOW'/>
<meta name='description' content='t9850.htm test file'/>
<meta name='version' content='20250318'/>
<meta name='author' content='Pavel vitsoft Šrubař'/>
<link rel='stylesheet' href='../euroasm.css' type='text/css'/>
<link rel='shortcut icon' href='../favicon.ico'/>
<title>t9850.htm test file</title>
</head>
<body class='EATESTS' id='top'><div class='HEADMENU'><table>
<tr><td rowspan='2' title='&euro;ASM - assembler and linker'><img src='../favicon.ico' alt='EuroAssembler' />
<td><a href='../index.htm' title='Alphabetical index of all &euro;ASM elements, directives and instructions'>Index</a></td>
<td><a href='../eadoc/' class='EADOC' title='Documentation of EuroAssembler'>Manual</a></td>
<td><a href='https://euroassembler.eu/download/' title='History &amp; download of the latest and previous versions'>Download</a></td>
<td><a href='../easource/' class='EASOURCE' title='Source files of EuroAssembler itself'>Source</a></td>
<td><a href='../maclib/' class='MACLIB' title='Macro libraries shipped with &euro;ASM'>Macros</a></td>
<td rowspan='2' title='Find the searched token in any text file on this site'>
<form method='post' action='../search.php' enctype='multipart/form-data' accept-charset='utf-8'>
<input type='text' id='q' placeholder='Searched word(s)' name='q' value=''/>
<br/><label title='Check the box to find the expression even if it is surrounded by other letters | digits.'>
<input type='checkbox' name='EW'/><small>Embedded word</small></label>
<br/><label title='Check the box for case-insensitive search.'>
<input type='checkbox' name='CI'/><small>Case ins.</small></label>
<input type='submit' title='Search for the specified word|expression in all site files.' name='find' value='Search'/>
</form></td></tr><tr>
<td><a href='../sitemap.htm' title='List of directories and files on this site'>Sitemap</a></td>
<td><a href='../eadoc/links.htm' class='EADOC' title='References and external links to resources used in EuroAssembler developement'>Links</a></td>
<td><a href='https://euroassembler.eu/forum/' title='Discussion forum concerning EuroAssembler'>Forum</a></td>
<td><a href='../eatests/' class='EATESTS' title='Program snippets for testing the function of &euro;ASM'>Tests</a></td>
<td><a href='../objlib/' class='OBJLIB' title='Skeletons and sample objects and projects shipped with &euro;ASM'>Projects</a></td>
</tr></table></div>
<!--Contents above the marker {!==/HEADMENU==} was generated by "generate.php".-->
<!--/HEADMENU-->
<h1 id='TestTitle'>Test <a class='EXT' href='t9850.htm'>t9850</a>:
<!--T-->ELFX program for 64bit Linux
</h1><button onclick='window.location="../eatests/manager.php?test=t9850";'>Manage t9850</button>
<br class='CLEAR'/>
<dl><dt>Source &amp; expected listing <q>t9850.htm.lst</q></dt><dd><samp>
|                          |  EUROASM AUTOSEGMENT=ON,CPU=x64,DUMPWIDTH=28
|7439383530                |%test %SET t9850
|00000000:                 |
|                          |%test PROGRAM FORMAT=ELFX,MODEL=FLAT,WIDTH=64,ENTRY=Start:
|[.text]                   ::::Section changed.
|00000000:                 |Write.L64:: PROC           ; Display ASCIIZ string pointed to by RSI using 64bit Linux.
|00000000:31C9             |  XOR ECX,ECX              ; Clear RCX to keep the size of input string.
|00000002:31C0             |  XOR EAX,EAX              ; Clear AL, the searched terminating character
|00000004:4889F7           |  MOV RDI,RSI              ; %2 String address in RSI,RDI.
|00000007:48F7D1           |  NOT RCX                  ; Assume unlimited possible string size.
|0000000A:F2AE             |  REPNE SCASB              ; Find the zero terminator.
|0000000C:48F7D1           |  NOT RCX                  ; Get string size to RCX.
|0000000F:B801000000       |  MOV RAX,1                ; Kernel service sys_write.
|00000014:BF01000000       |  MOV RDI,1                ; %1 I/O handle STDOUT_FILENO.
|00000019:89CA             |  MOV EDX,ECX              ; %3 String size.
|0000001B:0F05             |  SYSCALL                  ; Invoke kernel.
|0000001D:C3               |  RET                      ; Return to caller. RAX,RCX,RDX,RSI,RDI,R11 are clobbered.
|0000001E:                 | ENDPROC Write.L64:
|                          |;;
|0000001E:                 |Beep.L64:: PROC            ; Display message "Beeping.." and play a sound using 64bit Linux.
|0000001E:488D35(00000000) |  LEA RSI,[=B"Beeping..."] ; Define a literal string in [.rodata].
|00000025:E8D6FFFFFF       |  CALL Write.L64::         ; Display the notification "Beeping...".
|0000002A:488D35(00000000) |  LEA RSI,[=W(0x0007)]     ; Define ASCIIZ string with BEL character in [.rodata].
|00000031:E8CAFFFFFF       |  CALL Write.L64::         ; Play the beep sound.
|00000036:C3               |  RET                      ; Return to caller. RAX,RCX,RDX,RSI,RDI,R11 are clobbered.
|00000037:                 | ENDPROC Beep.L64:
|                          |;;
|00000037:                 |Exit.L64:: PROC            ; Display message "End", terminate the program.
|00000037:488D35(00000000) |  LEA RSI,[.M:]            ; String "End" will be defined in segment [.bss] at RSI.
|0000003E:C706456E6400     |  MOVD [RSI+0],"End"       ; Dynamically define the message "End".
|00000044:C746030A000000   |  MOVD [RSI+3],0x0A        ; LF+NUL.
|0000004B:E8B0FFFFFF       |  CALL Write.L64::         ; Display the notification "End".
|00000050:31FF             |  XOR EDI,EDI              ; %1 Errorlevel=0.
|00000052:B83C000000       |  MOV RAX,60               ; Kernel service sys_exit.
|00000057:0F05             |  SYSCALL                  ; Invoke kernel. No return to caller.
|[.bss]                    ::::Section changed.
|00000000:..............   |.M:DB 7*BYTE               ; Reserve space for ASCIIZ string "End" in [.bss].
|[.text]                   ::::Section changed.
|00000059:                 | ENDPROC Exit.L64:
|                          |;;
|00000059:90               |Start: NOP                 ; Entry point of the program.
|0000005A:488D35(00000000) |  LEA RSI,[Msg:]           ; Offset of the message.
|00000061:E89AFFFFFF       |  CALL Write.L64:          ; Write the ASCIIZ string RSI.
|00000066:E8B3FFFFFF       |  CALL Beep.L64:           ; Play a beep sound.
|0000006B:E8C7FFFFFF       |  CALL Exit.L64:           ; Terminate the program with errorlevel 0.
|[.data]                   ::::Section changed.
|00000000:363462697420464C~|Msg: DB '%^WIDTH[]bit %^MODEL %^FORMAT program "%^OUTFILE".',10,0
|[@LT2]                    ====ListLiterals in section [@LT2].
|00000000:0700             =W(0x0007)
|[@LT1]                    ====ListLiterals in section [@LT1].
|00000000:42656570696E672E~=B"Beeping..."
|                          |ENDPROGRAM %test
|        **** ListMap "t9850.x",model=FLAT,groups=4,segments=8,entry=Start:,stack=
|        [LOAD.HDR],FA=00000000h,VA=00400000h,size=000004CAh=1226,group [.symtab] [.strtab] [.shstrtab]
|          [],FA=00000000h,VA=00000000h,size=00000000h=0,width=0,align=0,purpose=
|          [.symtab],FA=00000320h,VA=00400320h,size=00000120h=288,width=0,align=8,purpose=SYMBOLS
|          [.strtab],FA=00000440h,VA=00400440h,size=00000056h=86,width=0,align=1,purpose=STRINGS
|          [.shstrtab],FA=00000496h,VA=00400496h,size=00000034h=52,width=0,align=1,purpose=STRINGS
|        [LOAD.CODE],FA=000004D0h,VA=004014D0h,size=00000070h=112,group [.text]
|          [.text],FA=000004D0h,VA=004014D0h,size=00000070h=112,width=64,align=0010h,purpose=CODE
|        [LOAD.RODATA],FA=00000540h,VA=00402540h,size=0000000Dh=13,group [.rodata]
|          [.rodata],FA=00000540h,VA=00402540h,size=0000000Dh=13,width=64,align=0010h,purpose=RODATA+LITERAL
|        [LOAD.DATA],FA=00000550h,VA=00403550h,size=00000037h=55,group [.data] [.bss]
|          [.data],FA=00000550h,VA=00403550h,size=00000024h=36,width=64,align=0010h,purpose=DATA
|          [.bss],FA=00000580h,VA=00403580h,size=00000007h=7,width=64,align=0010h,purpose=BSS
|        **** ListGlobals "t9850.x",Global=0,Public=4,Extern=0,eXport=0,Import=0
|        Beep.L64,[.text]:0000001Eh,VA=004014EEh,scope='P'
|        Exit.L64,[.text]:00000037h,VA=00401507h,scope='P'
|        Start,[.text]:00000059h,VA=00401529h,scope='P'
|        Write.L64,[.text]:00000000h,VA=004014D0h,scope='P'
</samp></dd></dl>
<dl><dt>Expected messages <q>t9850.out</q></dt><dd><code class='PRE'>
<!--M-->I0180 Assembling source file "t9850.htm".
<!--M-->I0270 Assembling source "t9850".
<!--M-->I0310 Assembling source pass 1.
<!--M-->I0330 Assembling source pass 2 - final.
<!--M-->I0470 Assembling program "t9850". "t9850.htm"{44}
<!--M-->I0510 Assembling program pass 1. "t9850.htm"{44}
<!--M-->I0510 Assembling program pass 2. "t9850.htm"{44}
<!--M-->I0530 Assembling program pass 3 - final. "t9850.htm"{44}
<!--M-->I0660 64bit FLAT ELFX file "t9850.x" created, size=1396. "t9850.htm"{92}
<!--M-->I0650 Program "t9850" assembled in 3 passes with errorlevel 0. "t9850.htm"{92}
<!--M-->I0750 Source "t9850" (221 lines) assembled in 2 passes with errorlevel 0.
<!--M-->I0860 Listing file "t9850.htm.lst" created, size=5555.
<!--M-->I0990 EuroAssembler terminated with errorlevel 0.
</code></dd></dl>
<dl><dt>Expected output file <q>t9850.
<!--E-->x
</q></dt><dd><pre>
<!--B-->0000: 7F 45 4C 46 02 01 01 00 00 00 00 00 00 00 00 00  &curren;ELF&middot;&middot;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0010: 02 00 3E 00 01 00 00 00 29 15 40 00 00 00 00 00  &middot;&deg;&gt;&deg;&middot;&deg;&deg;&deg;)&middot;@&deg;&deg;&deg;&deg;&deg;
<!--B-->0020: 40 00 00 00 00 00 00 00 20 01 00 00 00 00 00 00  @&deg;&deg;&deg;&deg;&deg;&deg;&deg;&macr;&middot;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0030: 00 00 00 00 40 00 38 00 04 00 40 00 08 00 03 00  &deg;&deg;&deg;&deg;@&deg;8&deg;&middot;&deg;@&deg;&middot;&deg;&middot;&deg;
<!--B-->0040: 01 00 00 00 04 00 00 00 00 00 00 00 00 00 00 00  &middot;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0050: 00 00 40 00 00 00 00 00 00 00 40 00 00 00 00 00  &deg;&deg;@&deg;&deg;&deg;&deg;&deg;&deg;&deg;@&deg;&deg;&deg;&deg;&deg;
<!--B-->0060: CA 04 00 00 00 00 00 00 CA 04 00 00 00 00 00 00  &curren;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&curren;&middot;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0070: 00 10 00 00 00 00 00 00 01 00 00 00 05 00 00 00  &deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;&deg;&deg;
<!--B-->0080: D0 04 00 00 00 00 00 00 D0 14 40 00 00 00 00 00  &curren;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&curren;&middot;@&deg;&deg;&deg;&deg;&deg;
<!--B-->0090: D0 14 40 00 00 00 00 00 70 00 00 00 00 00 00 00  &curren;&middot;@&deg;&deg;&deg;&deg;&deg;p&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->00A0: 70 00 00 00 00 00 00 00 00 10 00 00 00 00 00 00  p&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->00B0: 01 00 00 00 04 00 00 00 40 05 00 00 00 00 00 00  &middot;&deg;&deg;&deg;&middot;&deg;&deg;&deg;@&middot;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->00C0: 40 25 40 00 00 00 00 00 40 25 40 00 00 00 00 00  @%@&deg;&deg;&deg;&deg;&deg;@%@&deg;&deg;&deg;&deg;&deg;
<!--B-->00D0: 0D 00 00 00 00 00 00 00 0D 00 00 00 00 00 00 00  &middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->00E0: 00 10 00 00 00 00 00 00 01 00 00 00 06 00 00 00  &deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;&deg;&deg;
<!--B-->00F0: 50 05 00 00 00 00 00 00 50 35 40 00 00 00 00 00  P&middot;&deg;&deg;&deg;&deg;&deg;&deg;P5@&deg;&deg;&deg;&deg;&deg;
<!--B-->0100: 50 35 40 00 00 00 00 00 37 00 00 00 00 00 00 00  P5@&deg;&deg;&deg;&deg;&deg;7&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0110: 37 00 00 00 00 00 00 00 00 10 00 00 00 00 00 00  7&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0120: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0130: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0140: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0150: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0160: 01 00 00 00 02 00 00 00 00 00 00 00 00 00 00 00  &middot;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0170: 20 03 40 00 00 00 00 00 20 03 00 00 00 00 00 00  &macr;&middot;@&deg;&deg;&deg;&deg;&deg;&macr;&middot;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0180: 20 01 00 00 00 00 00 00 02 00 00 00 08 00 00 00  &macr;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;&deg;&deg;
<!--B-->0190: 08 00 00 00 00 00 00 00 18 00 00 00 00 00 00 00  &middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->01A0: 09 00 00 00 03 00 00 00 00 00 00 00 00 00 00 00  &middot;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->01B0: 40 04 40 00 00 00 00 00 40 04 00 00 00 00 00 00  @&middot;@&deg;&deg;&deg;&deg;&deg;@&middot;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->01C0: 56 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  V&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->01D0: 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->01E0: 11 00 00 00 03 00 00 00 00 00 00 00 00 00 00 00  &middot;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->01F0: 96 04 40 00 00 00 00 00 96 04 00 00 00 00 00 00  &curren;&middot;@&deg;&deg;&deg;&deg;&deg;&curren;&middot;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0200: 34 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  4&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0210: 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0220: 1B 00 00 00 01 00 00 00 06 00 00 00 00 00 00 00  &middot;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0230: D0 14 40 00 00 00 00 00 D0 04 00 00 00 00 00 00  &curren;&middot;@&deg;&deg;&deg;&deg;&deg;&curren;&middot;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0240: 70 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  p&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0250: 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0260: 21 00 00 00 01 00 00 00 02 00 00 00 00 00 00 00  !&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0270: 40 25 40 00 00 00 00 00 40 05 00 00 00 00 00 00  @%@&deg;&deg;&deg;&deg;&deg;@&middot;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0280: 0D 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0290: 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->02A0: 29 00 00 00 01 00 00 00 03 00 00 00 00 00 00 00  )&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->02B0: 50 35 40 00 00 00 00 00 50 05 00 00 00 00 00 00  P5@&deg;&deg;&deg;&deg;&deg;P&middot;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->02C0: 24 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  $&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->02D0: 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->02E0: 2F 00 00 00 08 00 00 00 03 00 00 00 00 00 00 00  /&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->02F0: 80 35 40 00 00 00 00 00 80 05 00 00 00 00 00 00  &curren;5@&deg;&deg;&deg;&deg;&deg;&curren;&middot;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0300: 07 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0310: 10 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0320: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0330: 00 00 00 00 00 00 00 00 01 00 00 00 04 00 F1 FF  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;&curren;&curren;
<!--B-->0340: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0350: 0B 00 00 00 03 00 07 00 80 35 40 00 00 00 00 00  &middot;&deg;&deg;&deg;&middot;&deg;&middot;&deg;&curren;5@&deg;&deg;&deg;&deg;&deg;
<!--B-->0360: 00 00 00 00 00 00 00 00 10 00 00 00 03 00 06 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;&middot;&deg;
<!--B-->0370: 50 35 40 00 00 00 00 00 00 00 00 00 00 00 00 00  P5@&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0380: 16 00 00 00 03 00 05 00 40 25 40 00 00 00 00 00  &middot;&deg;&deg;&deg;&middot;&deg;&middot;&deg;@%@&deg;&deg;&deg;&deg;&deg;
<!--B-->0390: 00 00 00 00 00 00 00 00 1E 00 00 00 03 00 02 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;&middot;&deg;
<!--B-->03A0: 40 04 40 00 00 00 00 00 00 00 00 00 00 00 00 00  @&middot;@&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->03B0: 26 00 00 00 03 00 01 00 20 03 40 00 00 00 00 00  &amp;&deg;&deg;&deg;&middot;&deg;&middot;&deg;&macr;&middot;@&deg;&deg;&deg;&deg;&deg;
<!--B-->03C0: 00 00 00 00 00 00 00 00 2E 00 00 00 03 00 04 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;.&deg;&deg;&deg;&middot;&deg;&middot;&deg;
<!--B-->03D0: D0 14 40 00 00 00 00 00 00 00 00 00 00 00 00 00  &curren;&middot;@&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->03E0: 34 00 00 00 12 00 04 00 EE 14 40 00 00 00 00 00  4&deg;&deg;&deg;&middot;&deg;&middot;&deg;&curren;&middot;@&deg;&deg;&deg;&deg;&deg;
<!--B-->03F0: 19 00 00 00 00 00 00 00 3D 00 00 00 12 00 04 00  &middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;=&deg;&deg;&deg;&middot;&deg;&middot;&deg;
<!--B-->0400: 07 15 40 00 00 00 00 00 22 00 00 00 00 00 00 00  &middot;&middot;@&deg;&deg;&deg;&deg;&deg;&quot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0410: 46 00 00 00 12 00 04 00 29 15 40 00 00 00 00 00  F&deg;&deg;&deg;&middot;&deg;&middot;&deg;)&middot;@&deg;&deg;&deg;&deg;&deg;
<!--B-->0420: 01 00 00 00 00 00 00 00 4C 00 00 00 12 00 04 00  &middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;L&deg;&deg;&deg;&middot;&deg;&middot;&deg;
<!--B-->0430: D0 14 40 00 00 00 00 00 1E 00 00 00 00 00 00 00  &curren;&middot;@&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0440: 00 74 39 38 35 30 2E 68 74 6D 00 2E 62 73 73 00  &deg;t9850.htm&deg;.bss&deg;
<!--B-->0450: 2E 64 61 74 61 00 2E 72 6F 64 61 74 61 00 2E 73  .data&deg;.rodata&deg;.s
<!--B-->0460: 74 72 74 61 62 00 2E 73 79 6D 74 61 62 00 2E 74  trtab&deg;.symtab&deg;.t
<!--B-->0470: 65 78 74 00 42 65 65 70 2E 4C 36 34 00 45 78 69  ext&deg;Beep.L64&deg;Exi
<!--B-->0480: 74 2E 4C 36 34 00 53 74 61 72 74 00 57 72 69 74  t.L64&deg;Start&deg;Writ
<!--B-->0490: 65 2E 4C 36 34 00 00 2E 73 79 6D 74 61 62 00 2E  e.L64&deg;&deg;.symtab&deg;.
<!--B-->04A0: 73 74 72 74 61 62 00 2E 73 68 73 74 72 74 61 62  strtab&deg;.shstrtab
<!--B-->04B0: 00 2E 74 65 78 74 00 2E 72 6F 64 61 74 61 00 2E  &deg;.text&deg;.rodata&deg;.
<!--B-->04C0: 64 61 74 61 00 2E 62 73 73 00 00 00 00 00 00 00  data&deg;.bss&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->04D0: 31 C9 31 C0 48 89 F7 48 F7 D1 F2 AE 48 F7 D1 B8  1&curren;1&curren;H&curren;&curren;H&curren;&curren;&curren;&curren;H&curren;&curren;&curren;
<!--B-->04E0: 01 00 00 00 BF 01 00 00 00 89 CA 0F 05 C3 48 8D  &middot;&deg;&deg;&deg;&curren;&middot;&deg;&deg;&deg;&curren;&curren;&middot;&middot;&curren;H&curren;
<!--B-->04F0: 35 4D 10 00 00 E8 D6 FF FF FF 48 8D 35 3F 10 00  5M&middot;&deg;&deg;&curren;&curren;&curren;&curren;&curren;H&curren;5?&middot;&deg;
<!--B-->0500: 00 E8 CA FF FF FF C3 48 8D 35 72 20 00 00 C7 06  &deg;&curren;&curren;&curren;&curren;&curren;&curren;H&curren;5r&macr;&deg;&deg;&curren;&middot;
<!--B-->0510: 45 6E 64 00 C7 46 03 0A 00 00 00 E8 B0 FF FF FF  End&deg;&curren;F&middot;&not;&deg;&deg;&deg;&curren;&curren;&curren;&curren;&curren;
<!--B-->0520: 31 FF B8 3C 00 00 00 0F 05 90 48 8D 35 1F 20 00  1&curren;&curren;&lt;&deg;&deg;&deg;&middot;&middot;&curren;H&curren;5&middot;&macr;&deg;
<!--B-->0530: 00 E8 9A FF FF FF E8 B3 FF FF FF E8 C7 FF FF FF  &deg;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;
<!--B-->0540: 07 00 42 65 65 70 69 6E 67 2E 2E 2E 00 00 00 00  &middot;&deg;Beeping...&deg;&deg;&deg;&deg;
<!--B-->0550: 36 34 62 69 74 20 46 4C 41 54 20 45 4C 46 58 20  64bit&macr;FLAT&macr;ELFX&macr;
<!--B-->0560: 70 72 6F 67 72 61 6D 20 22 74 39 38 35 30 2E 78  program&macr;&quot;t9850.x
<!--B-->0570: 22 2E 0A 00                                      &quot;.&not;&deg;
</pre></dd></dl>
<!--TAILMENU-->
<!--Contents below the marker {!==TAILMENU==} was generated by "generate.php".-->
<br class='CLEAR'/><a id='bottom' href='#top'>&#x25B2;Back to the top&#x25B2;</a>
</body></html>