<!doctype html><html lang='en'><head>
<meta http-equiv='Content-Type' content='text/html; charset=utf-8'/>
<meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=2.0, user-scalable=yes'>
<meta name='robots' content='ALL,FOLLOW'/>
<meta name='description' content='t8926.htm test file'/>
<meta name='version' content='20250318'/>
<meta name='author' content='Pavel vitsoft Šrubař'/>
<link rel='stylesheet' href='../euroasm.css' type='text/css'/>
<link rel='shortcut icon' href='../favicon.ico'/>
<title>t8926.htm test file</title>
</head>
<body class='EATESTS' id='top'><div class='HEADMENU'><table>
<tr><td rowspan='2' title='&euro;ASM - assembler and linker'><img src='../favicon.ico' alt='EuroAssembler' />
<td><a href='../index.htm' title='Alphabetical index of all &euro;ASM elements, directives and instructions'>Index</a></td>
<td><a href='../eadoc/' class='EADOC' title='Documentation of EuroAssembler'>Manual</a></td>
<td><a href='https://euroassembler.eu/download/' title='History &amp; download of the latest and previous versions'>Download</a></td>
<td><a href='../easource/' class='EASOURCE' title='Source files of EuroAssembler itself'>Source</a></td>
<td><a href='../maclib/' class='MACLIB' title='Macro libraries shipped with &euro;ASM'>Macros</a></td>
<td rowspan='2' title='Find the searched token in any text file on this site'>
<form method='post' action='../search.php' enctype='multipart/form-data' accept-charset='utf-8'>
<input type='text' id='q' placeholder='Searched word(s)' name='q' value=''/>
<br/><label title='Check the box to find the expression even if it is surrounded by other letters | digits.'>
<input type='checkbox' name='EW'/><small>Embedded word</small></label>
<br/><label title='Check the box for case-insensitive search.'>
<input type='checkbox' name='CI'/><small>Case ins.</small></label>
<input type='submit' title='Search for the specified word|expression in all site files.' name='find' value='Search'/>
</form></td></tr><tr>
<td><a href='../sitemap.htm' title='List of directories and files on this site'>Sitemap</a></td>
<td><a href='../eadoc/links.htm' class='EADOC' title='References and external links to resources used in EuroAssembler developement'>Links</a></td>
<td><a href='https://euroassembler.eu/forum/' title='Discussion forum concerning EuroAssembler'>Forum</a></td>
<td><a href='../eatests/' class='EATESTS' title='Program snippets for testing the function of &euro;ASM'>Tests</a></td>
<td><a href='../objlib/' class='OBJLIB' title='Skeletons and sample objects and projects shipped with &euro;ASM'>Projects</a></td>
</tr></table></div>
<!--Contents above the marker {!==/HEADMENU==} was generated by "generate.php".-->
<!--/HEADMENU-->
<h1 id='TestTitle'>Test <a class='EXT' href='t8926.htm'>t8926</a>:
<!--T-->COFF import module for 64bit Windows from DLL library
</h1><button onclick='window.location="../eatests/manager.php?test=t8926";'>Manage t8926</button>
<br class='CLEAR'/>
<dl><dt>Source &amp; expected listing <q>t8926.htm.lst</q></dt><dd><samp>
|                          |  EUROASM AUTOSEGMENT=ON,CPU=X64,DUMPWIDTH=28
|7438393236                |%test %SET t8926
|                          |;;
|                          |;; Create auxilliary DLL library.
|                          |%test PROGRAM FORMAT=DLL,WIDTH=64,MODEL=FLAT,ICONFILE=
|[.text]                   ::::Section changed.
|00000000:                 |Write.W64: PROC            ; Write ASCIIZ string RSI in 64bit Windows.
|                          |  IMPORT GetStdHandle:,WriteFile: ; Declare imported Windows kernel functions.
|00000000:4889E5           |  MOV RBP,RSP              ; Save (perhaps unaligned) stack pointer.
|00000003:4883E4F0         |  AND RSP,-16              ; OWORD alignment downwards.
|00000007:4883EC30         |  SUB RSP,5*8+8            ; Allocate shadow space on stack for max 5 arguments.
|0000000B:48C7C1F5FFFFFF   |  MOV RCX,-11              ; %1 Identifier of standard output STD_OUTPUT_HANDLE.
|00000012:E8(00000000)     |  CALL GetStdHandle:       ; Fastcall the imported Windows function with 1 argument.
|00000017:4889C3           |  MOV RBX,RAX              ; Temporary save the returned StdOutput handle to RBX.
|0000001A:4889F7           |  MOV RDI,RSI              ; Use RDI to find the end of input string.
|0000001D:31C9             |  XOR ECX,ECX              ; Clear RCX to keep the size of input string.
|0000001F:31C0             |  XOR EAX,EAX              ; Clear AL, the searched terminating character.
|00000021:48F7D1           |  NOT RCX                  ; Assume unlimited possible string size.
|00000024:F2AE             |  REPNE SCASB              ; Find the zero terminator.
|00000026:48F7D1           |  NOT RCX                  ; Get string size to RCX.
|00000029:4889442420       |  MOV [RSP+20h],RAX        ; %5 Overlapped I/O is not used.
|0000002E:4C8D4C2418       |  LEA R9,[RSP+18h]         ; %4 Local variable for the number of written bytes uses shadowed R9.
|00000033:4989C8           |  MOV R8,RCX               ; %3 String size.
|00000036:4889F2           |  MOV RDX,RSI              ; %2 String address.
|00000039:4889D9           |  MOV RCX,RBX              ; %1 Standard output file handle.
|0000003C:E8(00000000)     |  CALL WriteFile:          ; Fastcall the imported function with 5 arguments.
|00000041:4889EC           |  MOV RSP,RBP              ; Restore the stack.
|00000044:C3               |  RET                      ; Return to caller.
|00000045:                 |ENDPROC Write.W64:
|                          |;;
|00000045:                 |Beep.W64: PROC             ; Play a sound in 64bit Windows.
|00000045:488D35(00000000) |  LEA RSI,[=B"Beeping..."] ; Define a literal string in [.rodata].
|0000004C:E8AFFFFFFF       |  CALL Write.W64::         ; Display the notification "Beeping...".
|                          |  IMPORT Beep:             ; Declare imported Windows kernel function.
|00000051:4889E5           |  MOV RBP,RSP              ; Save (perhaps unaligned) stack pointer.
|00000054:4883E4F0         |  AND RSP,-16              ; OWORD alignment downwards.
|00000058:4883EC20         |  SUB RSP,4*8              ; Allocate shadow space on stack.
|0000005C:BAC8000000       |  MOV RDX,200              ; %2 Sound duration [ms].
|00000061:B9B8010000       |  MOV RCX,440              ; %1 Sound frequency [Hz].
|00000066:E8(00000000)     |  CALL Beep:               ; Fastcall the imported function with 2 arguments.
|0000006B:BA90010000       |  MOV RDX,400              ; %2 Sound duration [ms].
|00000070:B94B020000       |  MOV RCX,587              ; %1 Sound frequency [Hz].
|00000075:E8(00000000)     |  CALL Beep:               ; Fastcall the imported function with 2 arguments.
|0000007A:4889EC           |  MOV RSP,RBP              ; Restore the stack.
|0000007D:C3               |  RET                      ; Return to caller.
|0000007E:                 |ENDPROC Beep.W64:
|                          |;;
|0000007E:                 |Exit.W64: PROC             ; Terminate program in 64bit Windows.
|0000007E:488D35(00000000) |  LEA RSI,[.M:]            ; Address in segment [.bss] for the message.
|00000085:C706456E6400     |  MOVD [RSI+0],"End"       ; Dynamically define the message "End".
|0000008B:C746030D0A0000   |  MOVD [RSI+3],0x0A0D      ; CR+LF.
|00000092:E869FFFFFF       |  CALL Write.W64::         ; Display the notification "End".
|                          |  IMPORT ExitProcess       ; Declare imported Windows kernel function.
|00000097:4883E4F0         |  AND RSP,-16              ; OWORD alignment downwards.
|0000009B:4883EC20         |  SUB RSP,4*8              ; Allocate shadow space on stack.
|0000009F:31C9             |  XOR ECX,ECX              ; %1 Terminate with errorlevel 0.
|000000A1:E9(00000000)     |  JMP ExitProcess:         ; Use imported function with 1 argument. No return.
|[.bss]                    ::::Section changed.
|00000000:..............   |.M: DB 7*BYTE              ; Reserve space for ASCIIZ string "End" in segment [.bss].
|[.text]                   ::::Section changed.
|000000A6:                 |ENDPROC Exit.W64:
|                          |;;
|                          |  EXPORT Write.W64,Beep.W64,Exit.W64
|[@LT1]                    ====ListLiterals in section [@LT1].
|00000000:42656570696E672E~=B"Beeping..."
|                          |ENDPROGRAM %test
|        **** ListMap "t8926.dll",model=FLAT,groups=0,segments=6,entry=,stack=
|          [.text],FA=00000400h,VA=10001000h,size=000000A6h=166,width=64,align=0010h,purpose=CODE
|          [.rodata],FA=00000600h,VA=10002000h,size=0000000Bh=11,width=64,align=0010h,purpose=RODATA+LITERAL
|          [.bss],FA=00000800h,VA=10003000h,size=00000007h=7,width=64,align=0010h,purpose=BSS
|          [.idata],FA=00000800h,VA=10004000h,size=000000D3h=211,width=64,align=8,purpose=IMPORT+IAT
|          [.edata],FA=00000A00h,VA=10005000h,size=0000006Ch=108,width=0,align=8,purpose=EXPORT
|          [.reloc],FA=00000C00h,VA=10006000h,size=00000010h=16,width=32,align=4,purpose=BASERELOC
|        **** ListGlobals "t8926.dll",Global=0,Public=0,Extern=0,eXport=3,Import=4
|        Beep,[.idata]:000000C5h,VA=100040C5h,scope='I',lib="kernel32.dll"
|        Beep.W64,[.text]:00000045h,VA=10001045h,scope='X'
|        Exit.W64,[.text]:0000007Eh,VA=1000107Eh,scope='X'
|        ExitProcess,[.idata]:000000CCh,VA=100040CCh,scope='I',lib="kernel32.dll"
|        GetStdHandle,[.idata]:000000B7h,VA=100040B7h,scope='I',lib="kernel32.dll"
|        Write.W64,[.text]:00000000h,VA=10001000h,scope='X'
|        WriteFile,[.idata]:000000BEh,VA=100040BEh,scope='I',lib="kernel32.dll"
|                          |;;
|                          |;; Create the main COFF import module.
|                          |%test PROGRAM FORMAT=COFF
|                          |      GLOBAL Write.W64,Beep.W64,Exit.W64
|                          |      LINK %test.dll
|                          |ENDPROGRAM %test
|# I0561 Linking DLL library "./t8926.dll".
|        **** ListMap "t8926.obj",model=FLAT,groups=0,segments=1,entry=,stack=
|          [.drectve],FA=0000003Ch,RVA=00000000h,size=00000058h=88,width=0,align=1,purpose=DRECTVE
|        **** ListGlobals "t8926.obj",Global=0,Public=0,Extern=0,eXport=0,Import=3
|        Beep.W64,[Beep.W64]:00000000h,scope='I',lib="t8926.dll"
|        Exit.W64,[Exit.W64]:00000000h,scope='I',lib="t8926.dll"
|        Write.W64,[Write.W64]:00000000h,scope='I',lib="t8926.dll"
</samp></dd></dl>
<dl><dt>Expected messages <q>t8926.out</q></dt><dd><code class='PRE'>
<!--M-->I0180 Assembling source file "t8926.htm".
<!--M-->I0270 Assembling source "t8926".
<!--M-->I0310 Assembling source pass 1.
<!--M-->I0330 Assembling source pass 2 - final.
<!--M-->I0470 Assembling program "t8926". "t8926.htm"{45}
<!--M-->I0510 Assembling program pass 1. "t8926.htm"{45}
<!--M-->I0510 Assembling program pass 2. "t8926.htm"{45}
<!--M-->I0530 Assembling program pass 3 - final. "t8926.htm"{45}
<!--M-->I0660 64bit FLAT DLL file "t8926.dll" created, size=3088. "t8926.htm"{106}
<!--M-->I0650 Program "t8926" assembled in 3 passes with errorlevel 0. "t8926.htm"{106}
<!--M-->I0470 Assembling program "t8926". "t8926.htm"{124}
<!--M-->I0510 Assembling program pass 1. "t8926.htm"{124}
<!--M-->I0510 Assembling program pass 2. "t8926.htm"{124}
<!--M-->I0530 Assembling program pass 3 - final. "t8926.htm"{124}
<!--M-->I0561 Linking DLL library "./t8926.dll". "t8926.htm"{127}
<!--M-->I0660 32bit FLAT COFF file "t8926.obj" created, size=288. "t8926.htm"{127}
<!--M-->I0650 Program "t8926" assembled in 3 passes with errorlevel 0. "t8926.htm"{127}
<!--M-->I0750 Source "t8926" (182 lines) assembled in 2 passes with errorlevel 0.
<!--M-->I0860 Listing file "t8926.htm.lst" created, size=7512.
<!--M-->I0990 EuroAssembler terminated with errorlevel 0.
</code></dd></dl>
<dl><dt>Expected output file <q>t8926.
<!--E-->obj
</q></dt><dd><pre>
<!--B-->0000: 4C 01 01 00 00 00 00 00 94 00 00 00 07 00 00 00  L&middot;&middot;&deg;&deg;&deg;&deg;&deg;&curren;&deg;&deg;&deg;&middot;&deg;&deg;&deg;
<!--B-->0010: 00 00 00 01 2E 64 72 65 63 74 76 65 00 00 00 00  &deg;&deg;&deg;&middot;.drectve&deg;&deg;&deg;&deg;
<!--B-->0020: 00 00 00 00 58 00 00 00 3C 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;X&deg;&deg;&deg;&lt;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0030: 00 00 00 00 00 00 00 00 00 0A 10 02 20 2F 49 4D  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&not;&middot;&middot;&macr;/IM
<!--B-->0040: 50 4F 52 54 3A 42 65 65 70 2E 57 36 34 3A 22 74  PORT:Beep.W64:&quot;t
<!--B-->0050: 38 39 32 36 2E 64 6C 6C 22 20 2F 49 4D 50 4F 52  8926.dll&quot;&macr;/IMPOR
<!--B-->0060: 54 3A 45 78 69 74 2E 57 36 34 3A 22 74 38 39 32  T:Exit.W64:&quot;t892
<!--B-->0070: 36 2E 64 6C 6C 22 20 2F 49 4D 50 4F 52 54 3A 57  6.dll&quot;&macr;/IMPORT:W
<!--B-->0080: 72 69 74 65 2E 57 36 34 3A 22 74 38 39 32 36 2E  rite.W64:&quot;t8926.
<!--B-->0090: 64 6C 6C 22 2E 66 69 6C 65 00 00 00 00 00 00 00  dll&quot;.file&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->00A0: FE FF 00 00 67 01 74 38 39 32 36 2E 68 74 6D 00  &curren;&curren;&deg;&deg;g&middot;t8926.htm&deg;
<!--B-->00B0: 00 00 00 00 00 00 00 00 2E 64 72 65 63 74 76 65  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;.drectve
<!--B-->00C0: 00 00 00 00 01 00 00 00 03 01 58 00 00 00 00 00  &deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&middot;X&deg;&deg;&deg;&deg;&deg;
<!--B-->00D0: 00 00 00 00 00 00 00 00 00 00 00 00 42 65 65 70  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;Beep
<!--B-->00E0: 2E 57 36 34 00 00 00 00 00 00 01 01 02 00 45 78  .W64&deg;&deg;&deg;&deg;&deg;&deg;&middot;&middot;&middot;&deg;Ex
<!--B-->00F0: 69 74 2E 57 36 34 00 00 00 00 00 00 01 01 02 00  it.W64&deg;&deg;&deg;&deg;&deg;&deg;&middot;&middot;&middot;&deg;
<!--B-->0100: 00 00 00 00 04 00 00 00 00 00 00 00 00 00 01 01  &deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&middot;
<!--B-->0110: 02 00 0E 00 00 00 57 72 69 74 65 2E 57 36 34 00  &middot;&deg;&middot;&deg;&deg;&deg;Write.W64&deg;
</pre></dd></dl>
<!--TAILMENU-->
<!--Contents below the marker {!==TAILMENU==} was generated by "generate.php".-->
<br class='CLEAR'/><a id='bottom' href='#top'>&#x25B2;Back to the top&#x25B2;</a>
</body></html>