<!doctype html><html lang='en'><head>
<meta http-equiv='Content-Type' content='text/html; charset=utf-8'/>
<meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=2.0, user-scalable=yes'>
<meta name='robots' content='ALL,FOLLOW'/>
<meta name='description' content='t9833.htm test file'/>
<meta name='version' content='20250318'/>
<meta name='author' content='Pavel vitsoft Šrubař'/>
<link rel='stylesheet' href='../euroasm.css' type='text/css'/>
<link rel='shortcut icon' href='../favicon.ico'/>
<title>t9833.htm test file</title>
</head>
<body class='EATESTS' id='top'><div class='HEADMENU'><table>
<tr><td rowspan='2' title='&euro;ASM - assembler and linker'><img src='../favicon.ico' alt='EuroAssembler' />
<td><a href='../index.htm' title='Alphabetical index of all &euro;ASM elements, directives and instructions'>Index</a></td>
<td><a href='../eadoc/' class='EADOC' title='Documentation of EuroAssembler'>Manual</a></td>
<td><a href='https://euroassembler.eu/download/' title='History &amp; download of the latest and previous versions'>Download</a></td>
<td><a href='../easource/' class='EASOURCE' title='Source files of EuroAssembler itself'>Source</a></td>
<td><a href='../maclib/' class='MACLIB' title='Macro libraries shipped with &euro;ASM'>Macros</a></td>
<td rowspan='2' title='Find the searched token in any text file on this site'>
<form method='post' action='../search.php' enctype='multipart/form-data' accept-charset='utf-8'>
<input type='text' id='q' placeholder='Searched word(s)' name='q' value=''/>
<br/><label title='Check the box to find the expression even if it is surrounded by other letters | digits.'>
<input type='checkbox' name='EW'/><small>Embedded word</small></label>
<br/><label title='Check the box for case-insensitive search.'>
<input type='checkbox' name='CI'/><small>Case ins.</small></label>
<input type='submit' title='Search for the specified word|expression in all site files.' name='find' value='Search'/>
</form></td></tr><tr>
<td><a href='../sitemap.htm' title='List of directories and files on this site'>Sitemap</a></td>
<td><a href='../eadoc/links.htm' class='EADOC' title='References and external links to resources used in EuroAssembler developement'>Links</a></td>
<td><a href='https://euroassembler.eu/forum/' title='Discussion forum concerning EuroAssembler'>Forum</a></td>
<td><a href='../eatests/' class='EATESTS' title='Program snippets for testing the function of &euro;ASM'>Tests</a></td>
<td><a href='../objlib/' class='OBJLIB' title='Skeletons and sample objects and projects shipped with &euro;ASM'>Projects</a></td>
</tr></table></div>
<!--Contents above the marker {!==/HEADMENU==} was generated by "generate.php".-->
<!--/HEADMENU-->
<h1 id='TestTitle'>Test <a class='EXT' href='t9833.htm'>t9833</a>:
<!--T-->ELFX program for 32bit Linux links ELFSO library
</h1><button onclick='window.location="../eatests/manager.php?test=t9833";'>Manage t9833</button>
<br class='CLEAR'/>
<dl><dt>Source &amp; expected listing <q>t9833.htm.lst</q></dt><dd><samp>
|                          |  EUROASM AUTOSEGMENT=ON,CPU=386,DUMPWIDTH=28
|7439383333                |%test %SET t9833
|                          |;;
|                          |;; Create the auxiliary ELFSO library
|                          |%test.WBE PROGRAM FORMAT=ELFSO,MODEL=FLAT,WIDTH=32
|[.text]                   ::::Section changed.
|00000000:                 |Write.L32:: PROC           ; Display ASCIIZ string pointed to by ESI using 32bit Linux.
|00000000:31C9             |  XOR ECX,ECX              ; Clear ECX to keep the size of input string.
|00000002:31C0             |  XOR EAX,EAX              ; Clear AL, the searched terminating character
|00000004:89F7             |  MOV EDI,ESI              ; String address.
|00000006:F7D1             |  NOT ECX                  ; Assume unlimited possible string size.
|00000008:F2AE             |  REPNE SCASB              ; Find the zero terminator.
|0000000A:F7D1             |  NOT ECX                  ; Get string size to RCX.
|0000000C:B804000000       |  MOV EAX,4                ; Kernel service sys_write.
|00000011:BB01000000       |  MOV EBX,1                ; %1 I/O handle STDOUT_FILENO.
|00000016:89CA             |  MOV EDX,ECX              ; %3 String size.
|00000018:89F1             |  MOV ECX,ESI              ; %2 String address.
|0000001A:CD80             |  INT 0x80                 ; Invoke kernel.
|0000001C:C3               |  RET                      ; Return to caller. EAX,EBX,ECX,EDX,ESI,EDI are clobbered.
|0000001D:                 | ENDPROC Write.L32:
|                          |;;
|0000001D:                 |Beep.L32:: PROC            ; Display message "Beeping.." and play a sound using 32bit Linux.
|0000001D:8D35[00000000]   |  LEA ESI,[=B"Beeping..."] ; Define a literal string in [.rodata].
|00000023:E8D8FFFFFF       |  CALL Write.L32::         ; Display the notification "Beeping...".
|00000028:8D35[00000000]   |  LEA ESI,[=W(0x0007)]     ; Define ASCIIZ string with BEL character in [.rodata].
|0000002E:E8CDFFFFFF       |  CALL Write.L32::         ; Play the beep sound.
|00000033:C3               |  RET                      ; Return to caller. RAX,RCX,RDX,RSI,RDI,R11 are clobbered.
|00000034:                 | ENDPROC Beep.L32:
|                          |;;
|00000034:                 |Exit.L32:: PROC            ; Display message "End", terminate the program.
|00000034:8D35[00000000]   |  LEA ESI,[.M:]            ; String "End" will be defined in segment [.bss] at ESI.
|0000003A:C706456E6400     |  MOVD [ESI+0],"End"       ; Dynamically define the message "End".
|00000040:C746030A000000   |  MOVD [ESI+3],0x0A        ; LF+NUL.
|00000047:E8B4FFFFFF       |  CALL Write.L32::         ; Display the notification "End".
|0000004C:31DB             |  XOR EBX,EBX              ; %1 Errorlevel=0.
|0000004E:B801000000       |  MOV EAX,1                ; Kernel service sys_exit.
|00000053:CD80             |  INT 0x80                 ; Invoke kernel. No return to caller.
|[.bss]                    ::::Section changed.
|00000000:..............   |.M:DB 7*BYTE               ; Reserve space for ASCIIZ string "End" in [.bss].
|[.text]                   ::::Section changed.
|00000055:                 | ENDPROC Exit.L32:
|[@LT2]                    ====ListLiterals in section [@LT2].
|00000000:0700             =W(0x0007)
|[@LT1]                    ====ListLiterals in section [@LT1].
|00000000:42656570696E672E~=B"Beeping..."
|                          |ENDPROGRAM %test.WBE
|        **** ListMap "t9833.WBE.so",model=FLAT,groups=5,segments=12,entry=,stack=
|        [LOAD.HDR],FA=00000000h,RVA=00000000h,size=00000605h=1541,group [.symtab] [.dynsym] [.hash] [.dynstr] [.strtab] [.shstrtab]
|          [],FA=00000000h,RVA=00000000h,size=00000000h=0,width=0,align=0,purpose=
|          [.symtab],FA=000002C0h,RVA=000002C0h,size=000000E0h=224,width=0,align=0010h,purpose=SYMBOLS
|          [.dynsym],FA=000003A0h,RVA=000003A0h,size=000000D0h=208,width=0,align=0010h,purpose=SYMBOLS
|          [.rel.text],FA=00000470h,RVA=00000470h,size=00000018h=24,width=0,align=8,purpose=RELOC
|          [.hash],FA=00000488h,RVA=00000488h,size=00000048h=72,width=0,align=4,purpose=HASH
|          [.dynstr],FA=000004D0h,RVA=000004D0h,size=00000075h=117,width=0,align=1,purpose=STRINGS
|          [.strtab],FA=00000545h,RVA=00000545h,size=00000069h=105,width=0,align=1,purpose=STRINGS
|          [.shstrtab],FA=000005AEh,RVA=000005AEh,size=00000057h=87,width=0,align=1,purpose=STRINGS
|        [LOAD.CODE],FA=00001000h,RVA=00001000h,size=00000055h=85,group [.text]
|          [.text],FA=00001000h,RVA=00001000h,size=00000055h=85,width=32,align=0010h,purpose=CODE
|        [LOAD.RODATA],FA=00002000h,RVA=00002000h,size=0000000Dh=13,group [.rodata]
|          [.rodata],FA=00002000h,RVA=00002000h,size=0000000Dh=13,width=32,align=0010h,purpose=RODATA+LITERAL
|        [LOAD.DATA],FA=00003000h,RVA=00003000h,size=00000057h=87,group [.dynamic] [.bss]
|          [.dynamic],FA=00003000h,RVA=00003000h,size=00000050h=80,width=0,align=8,purpose=DYNAMIC
|          [.bss],FA=00003050h,RVA=00003050h,size=00000007h=7,width=32,align=0010h,purpose=BSS
|        [DYNAMIC],FA=00003000h,RVA=00003000h,size=00000050h=80,group
|        **** ListGlobals "t9833.WBE.so",Global=0,Public=3,Extern=0,eXport=0,Import=0
|        Beep.L32,[.text]:0000001Dh,scope='P'
|        Exit.L32,[.text]:00000034h,scope='P'
|        Write.L32,[.text]:00000000h,scope='P'
|                          |;;
|                          |;; Create the main ELFSO program.
|                          |%test PROGRAM FORMAT=ELFX,MODEL=FLAT,WIDTH=32,ENTRY=Start:
|                          |      LINK %test.WBE.so
|[.text]                   ::::Section changed.
|00000000:90               |Start:NOP                ; Entry point of the executable program.
|00000001:BE[00000000]     |    MOV ESI,Msg:         ; Address of the initial message in section [.data].
|00000006:E8(00000000)     |    CALL Write.L32::     ; Display the message.
|0000000B:E8(00000000)     |    CALL Beep.L32::      ; Play a beep sound.
|00000010:E8(00000000)     |    CALL Exit.L32::      ; Terminate the program.
|[.data]                   ::::Section changed.
|00000000:333262697420464C~|Msg:DB '%^WIDTH[]bit %^MODEL %^FORMAT program "%^OUTFILE".',10,0
|                          |ENDPROGRAM %test
|# I0561 Linking ELFSO library "./t9833.WBE.so".
|        **** ListMap "t9833.x",model=FLAT,groups=4,segments=8,entry=Start:,stack=
|        [LOAD.HDR],FA=00000000h,VA=00400000h,size=0000034Ah=842,group [.symtab] [.strtab] [.shstrtab]
|          [],FA=00000000h,VA=00000000h,size=00000000h=0,width=0,align=0,purpose=
|          [.symtab],FA=00000200h,VA=00400200h,size=000000C0h=192,width=0,align=0010h,purpose=SYMBOLS
|          [.strtab],FA=000002C0h,VA=004002C0h,size=00000056h=86,width=0,align=1,purpose=STRINGS
|          [.shstrtab],FA=00000316h,VA=00400316h,size=00000034h=52,width=0,align=1,purpose=STRINGS
|        [LOAD.CODE],FA=00000350h,VA=00401350h,size=00000075h=117,group [.text]
|          [.text],FA=00000350h,VA=00401350h,size=00000075h=117,width=32,align=0010h,purpose=CODE
|        [LOAD.RODATA],FA=000003D0h,VA=004023D0h,size=0000000Dh=13,group [.rodata]
|          [.rodata],FA=000003D0h,VA=004023D0h,size=0000000Dh=13,width=32,align=0010h,purpose=RODATA
|        [LOAD.DATA],FA=000003E0h,VA=004033E0h,size=00000037h=55,group [.data] [.bss]
|          [.data],FA=000003E0h,VA=004033E0h,size=00000024h=36,width=32,align=0010h,purpose=DATA
|          [.bss],FA=00000410h,VA=00403410h,size=00000007h=7,width=32,align=0010h,purpose=BSS
|        **** ListGlobals "t9833.x",Global=0,Public=4,Extern=0,eXport=0,Import=0
|        Beep.L32,[.text]:0000003Dh,VA=0040138Dh,scope='P'
|        Exit.L32,[.text]:00000054h,VA=004013A4h,scope='P'
|        Start,[.text]:00000000h,VA=00401350h,scope='P'
|        Write.L32,[.text]:00000020h,VA=00401370h,scope='P'
</samp></dd></dl>
<dl><dt>Expected messages <q>t9833.out</q></dt><dd><code class='PRE'>
<!--M-->I0180 Assembling source file "t9833.htm".
<!--M-->I0270 Assembling source "t9833".
<!--M-->I0310 Assembling source pass 1.
<!--M-->I0330 Assembling source pass 2 - final.
<!--M-->I0470 Assembling program "t9833.WBE". "t9833.htm"{45}
<!--M-->I0510 Assembling program pass 1. "t9833.htm"{45}
<!--M-->I0510 Assembling program pass 2. "t9833.htm"{45}
<!--M-->I0530 Assembling program pass 3 - final. "t9833.htm"{45}
<!--M-->I0660 32bit FLAT ELFSO file "t9833.WBE.so" created, size=12368. "t9833.htm"{86}
<!--M-->I0650 Program "t9833.WBE" assembled in 3 passes with errorlevel 0. "t9833.htm"{86}
<!--M-->I0470 Assembling program "t9833". "t9833.htm"{111}
<!--M-->I0510 Assembling program pass 1. "t9833.htm"{111}
<!--M-->I0510 Assembling program pass 2. "t9833.htm"{111}
<!--M-->I0530 Assembling program pass 3 - final. "t9833.htm"{111}
<!--M-->I0561 Linking ELFSO library "./t9833.WBE.so". "t9833.htm"{121}
<!--M-->I0660 32bit FLAT ELFX file "t9833.x" created, size=1028. "t9833.htm"{121}
<!--M-->I0650 Program "t9833" assembled in 3 passes with errorlevel 0. "t9833.htm"{121}
<!--M-->I0750 Source "t9833" (235 lines) assembled in 2 passes with errorlevel 0.
<!--M-->I0860 Listing file "t9833.htm.lst" created, size=7996.
<!--M-->I0990 EuroAssembler terminated with errorlevel 0.
</code></dd></dl>
<dl><dt>Expected output file <q>t9833.
<!--E-->x
</q></dt><dd><pre>
<!--B-->0000: 7F 45 4C 46 01 01 01 00 00 00 00 00 00 00 00 00  &curren;ELF&middot;&middot;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0010: 02 00 03 00 01 00 00 00 50 13 40 00 40 00 00 00  &middot;&deg;&middot;&deg;&middot;&deg;&deg;&deg;P&middot;@&deg;@&deg;&deg;&deg;
<!--B-->0020: C0 00 00 00 00 00 00 00 34 00 20 00 04 00 28 00  &curren;&deg;&deg;&deg;&deg;&deg;&deg;&deg;4&deg;&macr;&deg;&middot;&deg;(&deg;
<!--B-->0030: 08 00 03 00 00 00 00 00 00 00 00 00 00 00 00 00  &middot;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0040: 01 00 00 00 00 00 00 00 00 00 40 00 00 00 40 00  &middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;@&deg;&deg;&deg;@&deg;
<!--B-->0050: 4A 03 00 00 4A 03 00 00 04 00 00 00 00 10 00 00  J&middot;&deg;&deg;J&middot;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&middot;&deg;&deg;
<!--B-->0060: 01 00 00 00 50 03 00 00 50 13 40 00 50 13 40 00  &middot;&deg;&deg;&deg;P&middot;&deg;&deg;P&middot;@&deg;P&middot;@&deg;
<!--B-->0070: 75 00 00 00 75 00 00 00 05 00 00 00 00 10 00 00  u&deg;&deg;&deg;u&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&middot;&deg;&deg;
<!--B-->0080: 01 00 00 00 D0 03 00 00 D0 23 40 00 D0 23 40 00  &middot;&deg;&deg;&deg;&curren;&middot;&deg;&deg;&curren;#@&deg;&curren;#@&deg;
<!--B-->0090: 0D 00 00 00 0D 00 00 00 04 00 00 00 00 10 00 00  &middot;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&middot;&deg;&deg;
<!--B-->00A0: 01 00 00 00 E0 03 00 00 E0 33 40 00 E0 33 40 00  &middot;&deg;&deg;&deg;&curren;&middot;&deg;&deg;&curren;3@&deg;&curren;3@&deg;
<!--B-->00B0: 30 00 00 00 37 00 00 00 06 00 00 00 00 10 00 00  0&deg;&deg;&deg;7&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&middot;&deg;&deg;
<!--B-->00C0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->00D0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->00E0: 00 00 00 00 00 00 00 00 01 00 00 00 02 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;&deg;&deg;
<!--B-->00F0: 00 00 00 00 00 02 40 00 00 02 00 00 C0 00 00 00  &deg;&deg;&deg;&deg;&deg;&middot;@&deg;&deg;&middot;&deg;&deg;&curren;&deg;&deg;&deg;
<!--B-->0100: 02 00 00 00 08 00 00 00 10 00 00 00 10 00 00 00  &middot;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;&deg;&deg;
<!--B-->0110: 09 00 00 00 03 00 00 00 00 00 00 00 C0 02 40 00  &middot;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&curren;&middot;@&deg;
<!--B-->0120: C0 02 00 00 56 00 00 00 00 00 00 00 00 00 00 00  &curren;&middot;&deg;&deg;V&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0130: 01 00 00 00 00 00 00 00 11 00 00 00 03 00 00 00  &middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;&deg;&deg;
<!--B-->0140: 00 00 00 00 16 03 40 00 16 03 00 00 34 00 00 00  &deg;&deg;&deg;&deg;&middot;&middot;@&deg;&middot;&middot;&deg;&deg;4&deg;&deg;&deg;
<!--B-->0150: 00 00 00 00 00 00 00 00 01 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0160: 1B 00 00 00 01 00 00 00 06 00 00 00 50 13 40 00  &middot;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;&deg;&deg;P&middot;@&deg;
<!--B-->0170: 50 03 00 00 75 00 00 00 00 00 00 00 00 00 00 00  P&middot;&deg;&deg;u&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0180: 10 00 00 00 00 00 00 00 21 00 00 00 01 00 00 00  &middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;!&deg;&deg;&deg;&middot;&deg;&deg;&deg;
<!--B-->0190: 02 00 00 00 D0 23 40 00 D0 03 00 00 0D 00 00 00  &middot;&deg;&deg;&deg;&curren;#@&deg;&curren;&middot;&deg;&deg;&middot;&deg;&deg;&deg;
<!--B-->01A0: 00 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->01B0: 29 00 00 00 01 00 00 00 03 00 00 00 E0 33 40 00  )&deg;&deg;&deg;&middot;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&curren;3@&deg;
<!--B-->01C0: E0 03 00 00 24 00 00 00 00 00 00 00 00 00 00 00  &curren;&middot;&deg;&deg;$&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->01D0: 10 00 00 00 00 00 00 00 2F 00 00 00 08 00 00 00  &middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;/&deg;&deg;&deg;&middot;&deg;&deg;&deg;
<!--B-->01E0: 03 00 00 00 10 34 40 00 10 04 00 00 07 00 00 00  &middot;&deg;&deg;&deg;&middot;4@&deg;&middot;&middot;&deg;&deg;&middot;&deg;&deg;&deg;
<!--B-->01F0: 00 00 00 00 00 00 00 00 10 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0200: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0210: 01 00 00 00 00 00 00 00 00 00 00 00 04 00 F1 FF  &middot;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&middot;&deg;&curren;&curren;
<!--B-->0220: 0B 00 00 00 10 34 40 00 00 00 00 00 03 00 07 00  &middot;&deg;&deg;&deg;&middot;4@&deg;&deg;&deg;&deg;&deg;&middot;&deg;&middot;&deg;
<!--B-->0230: 10 00 00 00 E0 33 40 00 00 00 00 00 03 00 06 00  &middot;&deg;&deg;&deg;&curren;3@&deg;&deg;&deg;&deg;&deg;&middot;&deg;&middot;&deg;
<!--B-->0240: 16 00 00 00 D0 23 40 00 00 00 00 00 03 00 05 00  &middot;&deg;&deg;&deg;&curren;#@&deg;&deg;&deg;&deg;&deg;&middot;&deg;&middot;&deg;
<!--B-->0250: 1E 00 00 00 C0 02 40 00 00 00 00 00 03 00 02 00  &middot;&deg;&deg;&deg;&curren;&middot;@&deg;&deg;&deg;&deg;&deg;&middot;&deg;&middot;&deg;
<!--B-->0260: 26 00 00 00 00 02 40 00 00 00 00 00 03 00 01 00  &amp;&deg;&deg;&deg;&deg;&middot;@&deg;&deg;&deg;&deg;&deg;&middot;&deg;&middot;&deg;
<!--B-->0270: 2E 00 00 00 50 13 40 00 00 00 00 00 03 00 04 00  .&deg;&deg;&deg;P&middot;@&deg;&deg;&deg;&deg;&deg;&middot;&deg;&middot;&deg;
<!--B-->0280: 34 00 00 00 8D 13 40 00 17 00 00 00 12 00 04 00  4&deg;&deg;&deg;&curren;&middot;@&deg;&middot;&deg;&deg;&deg;&middot;&deg;&middot;&deg;
<!--B-->0290: 3D 00 00 00 A4 13 40 00 21 00 00 00 12 00 04 00  =&deg;&deg;&deg;&curren;&middot;@&deg;!&deg;&deg;&deg;&middot;&deg;&middot;&deg;
<!--B-->02A0: 46 00 00 00 50 13 40 00 01 00 00 00 12 00 04 00  F&deg;&deg;&deg;P&middot;@&deg;&middot;&deg;&deg;&deg;&middot;&deg;&middot;&deg;
<!--B-->02B0: 4C 00 00 00 70 13 40 00 1D 00 00 00 12 00 04 00  L&deg;&deg;&deg;p&middot;@&deg;&middot;&deg;&deg;&deg;&middot;&deg;&middot;&deg;
<!--B-->02C0: 00 74 39 38 33 33 2E 68 74 6D 00 2E 62 73 73 00  &deg;t9833.htm&deg;.bss&deg;
<!--B-->02D0: 2E 64 61 74 61 00 2E 72 6F 64 61 74 61 00 2E 73  .data&deg;.rodata&deg;.s
<!--B-->02E0: 74 72 74 61 62 00 2E 73 79 6D 74 61 62 00 2E 74  trtab&deg;.symtab&deg;.t
<!--B-->02F0: 65 78 74 00 42 65 65 70 2E 4C 33 32 00 45 78 69  ext&deg;Beep.L32&deg;Exi
<!--B-->0300: 74 2E 4C 33 32 00 53 74 61 72 74 00 57 72 69 74  t.L32&deg;Start&deg;Writ
<!--B-->0310: 65 2E 4C 33 32 00 00 2E 73 79 6D 74 61 62 00 2E  e.L32&deg;&deg;.symtab&deg;.
<!--B-->0320: 73 74 72 74 61 62 00 2E 73 68 73 74 72 74 61 62  strtab&deg;.shstrtab
<!--B-->0330: 00 2E 74 65 78 74 00 2E 72 6F 64 61 74 61 00 2E  &deg;.text&deg;.rodata&deg;.
<!--B-->0340: 64 61 74 61 00 2E 62 73 73 00 00 00 00 00 00 00  data&deg;.bss&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->0350: 90 BE E0 33 40 00 E8 15 00 00 00 E8 2D 00 00 00  &curren;&curren;&curren;3@&deg;&curren;&middot;&deg;&deg;&deg;&curren;-&deg;&deg;&deg;
<!--B-->0360: E8 3F 00 00 00 90 90 90 90 90 90 90 90 90 90 90  &curren;?&deg;&deg;&deg;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;
<!--B-->0370: 31 C9 31 C0 89 F7 F7 D1 F2 AE F7 D1 B8 04 00 00  1&curren;1&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&middot;&deg;&deg;
<!--B-->0380: 00 BB 01 00 00 00 89 CA 89 F1 CD 80 C3 8D 35 D2  &deg;&curren;&middot;&deg;&deg;&deg;&curren;&curren;&curren;&curren;&curren;&curren;&curren;&curren;5&curren;
<!--B-->0390: 23 40 00 E8 D8 FF FF FF 8D 35 D0 23 40 00 E8 CD  #@&deg;&curren;&curren;&curren;&curren;&curren;&curren;5&curren;#@&deg;&curren;&curren;
<!--B-->03A0: FF FF FF C3 8D 35 10 34 40 00 C7 06 45 6E 64 00  &curren;&curren;&curren;&curren;&curren;5&middot;4@&deg;&curren;&middot;End&deg;
<!--B-->03B0: C7 46 03 0A 00 00 00 E8 B4 FF FF FF 31 DB B8 01  &curren;F&middot;&not;&deg;&deg;&deg;&curren;&curren;&curren;&curren;&curren;1&curren;&curren;&middot;
<!--B-->03C0: 00 00 00 CD 80 00 00 00 00 00 00 00 00 00 00 00  &deg;&deg;&deg;&curren;&curren;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;&deg;
<!--B-->03D0: 07 00 42 65 65 70 69 6E 67 2E 2E 2E 00 00 00 00  &middot;&deg;Beeping...&deg;&deg;&deg;&deg;
<!--B-->03E0: 33 32 62 69 74 20 46 4C 41 54 20 45 4C 46 58 20  32bit&macr;FLAT&macr;ELFX&macr;
<!--B-->03F0: 70 72 6F 67 72 61 6D 20 22 74 39 38 33 33 2E 78  program&macr;&quot;t9833.x
<!--B-->0400: 22 2E 0A 00                                      &quot;.&not;&deg;
</pre></dd></dl>
<!--TAILMENU-->
<!--Contents below the marker {!==TAILMENU==} was generated by "generate.php".-->
<br class='CLEAR'/><a id='bottom' href='#top'>&#x25B2;Back to the top&#x25B2;</a>
</body></html>