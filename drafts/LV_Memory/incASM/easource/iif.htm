<!doctype html><html lang='en'><head>
<meta http-equiv='Content-Type' content='text/html; charset=utf-8'/>
<meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=2.0, user-scalable=yes'>
<meta name='robots' content='ALL,FOLLOW'/>
<meta name='description' content='iif.htm source file'/>
<meta name='version' content='20250318'/>
<meta name='author' content='Pavel vitsoft Šrubař'/>
<link rel='stylesheet' href='../euroasm.css' type='text/css'/>
<link rel='shortcut icon' href='../favicon.ico'/>
<title>iif.htm source file</title>
</head>
<body class='EASOURCE' id='top'><div class='HEADMENU'><table>
<tr><td rowspan='2' title='&euro;ASM - assembler and linker'><img src='../favicon.ico' alt='EuroAssembler' />
<td><a href='../index.htm' title='Alphabetical index of all &euro;ASM elements, directives and instructions'>Index</a></td>
<td><a href='../eadoc/' class='EADOC' title='Documentation of EuroAssembler'>Manual</a></td>
<td><a href='https://euroassembler.eu/download/' title='History &amp; download of the latest and previous versions'>Download</a></td>
<td><a href='../easource/' class='EASOURCE' title='Source files of EuroAssembler itself'>Source</a></td>
<td><a href='../maclib/' class='MACLIB' title='Macro libraries shipped with &euro;ASM'>Macros</a></td>
<td rowspan='2' title='Find the searched token in any text file on this site'>
<form method='post' action='../search.php' enctype='multipart/form-data' accept-charset='utf-8'>
<input type='text' id='q' placeholder='Searched word(s)' name='q' value=''/>
<br/><label title='Check the box to find the expression even if it is surrounded by other letters | digits.'>
<input type='checkbox' name='EW'/><small>Embedded word</small></label>
<br/><label title='Check the box for case-insensitive search.'>
<input type='checkbox' name='CI'/><small>Case ins.</small></label>
<input type='submit' title='Search for the specified word|expression in all site files.' name='find' value='Search'/>
</form></td></tr><tr>
<td><a href='../sitemap.htm' title='List of directories and files on this site'>Sitemap</a></td>
<td><a href='../eadoc/links.htm' class='EADOC' title='References and external links to resources used in EuroAssembler developement'>Links</a></td>
<td><a href='https://euroassembler.eu/forum/' title='Discussion forum concerning EuroAssembler'>Forum</a></td>
<td><a href='../eatests/' class='EATESTS' title='Program snippets for testing the function of &euro;ASM'>Tests</a></td>
<td><a href='../objlib/' class='OBJLIB' title='Skeletons and sample objects and projects shipped with &euro;ASM'>Projects</a></td>
</tr></table></div>
<!--Contents above the marker {!==/HEADMENU==} was generated by "generate.php".-->
<!--/HEADMENU-->
<h1>iif.htm
<br/><i>Enumerations</i>
<br/><a href="#IifList">IifList</a>
<br/><i>Instruction handlers</i><br/><span class="ILIST">
<a href="#IifF2XM1">F2XM1</a>
<a href="#IifF4X4">F4X4</a>
<a href="#IifFABS">FABS</a>
<a href="#IifFADD">FADD</a>
<a href="#IifFADDP">FADDP</a>
<a href="#IifFBLD">FBLD</a>
<a href="#IifFBSTP">FBSTP</a>
<a href="#IifFCLEX">FCLEX</a>
<a href="#IifFCMOVB">FCMOVB</a>
<a href="#IifFCMOVBE">FCMOVBE</a>
<a href="#IifFCMOVE">FCMOVE</a>
<a href="#IifFCMOVNB">FCMOVNB</a>
<a href="#IifFCMOVNBE">FCMOVNBE</a>
<a href="#IifFCMOVNE">FCMOVNE</a>
<a href="#IifFCMOVNU">FCMOVNU</a>
<a href="#IifFCMOVU">FCMOVU</a>
<a href="#IifFCOM">FCOM</a>
<a href="#IifFCOM2">FCOM2</a>
<a href="#IifFCOMI">FCOMI</a>
<a href="#IifFCOMIP">FCOMIP</a>
<a href="#IifFCOMP">FCOMP</a>
<a href="#IifFCOMP3">FCOMP3</a>
<a href="#IifFCOMP5">FCOMP5</a>
<a href="#IifFCOMPP">FCOMPP</a>
<a href="#IifFCOS">FCOS</a>
<a href="#IifFDECSTP">FDECSTP</a>
<a href="#IifFDISI">FDISI</a>
<a href="#IifFDIV">FDIV</a>
<a href="#IifFDIVP">FDIVP</a>
<a href="#IifFDIVR">FDIVR</a>
<a href="#IifFDIVRP">FDIVRP</a>
<a href="#IifFENI">FENI</a>
<a href="#IifFFREE">FFREE</a>
<a href="#IifFFREEP">FFREEP</a>
<a href="#IifFCHS">FCHS</a>
<a href="#IifFIADD">FIADD</a>
<a href="#IifFICOM">FICOM</a>
<a href="#IifFICOMP">FICOMP</a>
<a href="#IifFIDIV">FIDIV</a>
<a href="#IifFIDIVR">FIDIVR</a>
<a href="#IifFILD">FILD</a>
<a href="#IifFIMUL">FIMUL</a>
<a href="#IifFINCSTP">FINCSTP</a>
<a href="#IifFINIT">FINIT</a>
<a href="#IifFIST">FIST</a>
<a href="#IifFISTP">FISTP</a>
<a href="#IifFISTTP">FISTTP</a>
<a href="#IifFISUB">FISUB</a>
<a href="#IifFISUBR">FISUBR</a>
<a href="#IifFLD">FLD</a>
<a href="#IifFLD1">FLD1</a>
<a href="#IifFLDCW">FLDCW</a>
<a href="#IifFLDENV">FLDENV</a>
<a href="#IifFLDL2E">FLDL2E</a>
<a href="#IifFLDL2T">FLDL2T</a>
<a href="#IifFLDLG2">FLDLG2</a>
<a href="#IifFLDLN2">FLDLN2</a>
<a href="#IifFLDPI">FLDPI</a>
<a href="#IifFLDZ">FLDZ</a>
<a href="#IifFMUL">FMUL</a>
<a href="#IifFMUL4X4">FMUL4X4</a>
<a href="#IifFMULP">FMULP</a>
<a href="#IifFNCLEX">FNCLEX</a>
<a href="#IifFNDISI">FNDISI</a>
<a href="#IifFNENI">FNENI</a>
<a href="#IifFNINIT">FNINIT</a>
<a href="#IifFNOP">FNOP</a>
<a href="#IifFNSAVE">FNSAVE</a>
<a href="#IifFNSETPM">FNSETPM</a>
<a href="#IifFNSTCW">FNSTCW</a>
<a href="#IifFNSTENV">FNSTENV</a>
<a href="#IifFNSTSW">FNSTSW</a>
<a href="#IifFPATAN">FPATAN</a>
<a href="#IifFPREM">FPREM</a>
<a href="#IifFPREM1">FPREM1</a>
<a href="#IifFPTAN">FPTAN</a>
<a href="#IifFRICHOP">FRICHOP</a>
<a href="#IifFRINEAR">FRINEAR</a>
<a href="#IifFRINT2">FRINT2</a>
<a href="#IifFRNDINT">FRNDINT</a>
<a href="#IifFRSTOR">FRSTOR</a>
<a href="#IifFRSTPM">FRSTPM</a>
<a href="#IifFSAVE">FSAVE</a>
<a href="#IifFSBP0">FSBP0</a>
<a href="#IifFSBP1">FSBP1</a>
<a href="#IifFSBP2">FSBP2</a>
<a href="#IifFSBP3">FSBP3</a>
<a href="#IifFSCALE">FSCALE</a>
<a href="#IifFSETPM">FSETPM</a>
<a href="#IifFSIN">FSIN</a>
<a href="#IifFSINCOS">FSINCOS</a>
<a href="#IifFSQRT">FSQRT</a>
<a href="#IifFST">FST</a>
<a href="#IifFSTCW">FSTCW</a>
<a href="#IifFSTDW">FSTDW</a>
<a href="#IifFSTENV">FSTENV</a>
<a href="#IifFSTP">FSTP</a>
<a href="#IifFSTP1">FSTP1</a>
<a href="#IifFSTP8">FSTP8</a>
<a href="#IifFSTP9">FSTP9</a>
<a href="#IifFSTSG">FSTSG</a>
<a href="#IifFSTSW">FSTSW</a>
<a href="#IifFSUB">FSUB</a>
<a href="#IifFSUBP">FSUBP</a>
<a href="#IifFSUBR">FSUBR</a>
<a href="#IifFSUBRP">FSUBRP</a>
<a href="#IifFTST">FTST</a>
<a href="#IifFUCOM">FUCOM</a>
<a href="#IifFUCOMI">FUCOMI</a>
<a href="#IifFUCOMIP">FUCOMIP</a>
<a href="#IifFUCOMP">FUCOMP</a>
<a href="#IifFUCOMPP">FUCOMPP</a>
<a href="#IifFWAIT">FWAIT</a>
<a href="#IifFXAM">FXAM</a>
<a href="#IifFXCH">FXCH</a>
<a href="#IifFXCH4">FXCH4</a>
<a href="#IifFXCH7">FXCH7</a>
<a href="#IifFXRSTOR">FXRSTOR</a>
<a href="#IifFXRSTOR64">FXRSTOR64</a>
<a href="#IifFXSAVE">FXSAVE</a>
<a href="#IifFXSAVE64">FXSAVE64</a>
<a href="#IifFXTRACT">FXTRACT</a>
<a href="#IifFYL2X">FYL2X</a>
<a href="#IifFYL2XP1">FYL2XP1</a>
<a href="#IifWAIT">WAIT</a>
</span><!--IifAList-->
</h1>
<dl id="IifHandlers"><dt><a href="#top">&uarr; <em>IifHandlers</em></a> </dt>
<dd> assemble floating-point machine instructions.</dd>
<dt>See also</dt><dd><a class="EXT" href="ii.htm#IiHandlers">IiHandlers</a>,
<a class="EXTL" href="../eadoc/links.htm#IntelVol2">[IntelVol2]</a>.</dd></dl><pre>
iif PROGRAM FORMAT=COFF,MODEL=FLAT,WIDTH=32
    INCLUDEHEAD euroasm.htm, \  Interface (structures, symbols and macros) of other modules used in this source.
                ea.htm,eaopt.htm,exp.htm,ii.htm,msg.htm,pgm.htm,pgmopt.htm,sss.htm,stm.htm,sym.htm
</pre><br class="CLEAR"/><pre>
iif HEAD ; Start of module interface.
</pre>

<dl id="IifList"><dt><a href="#top">&uarr; %IifList</a></dt><dd> enumerates machine instructions
<!---->of this family which &euro;ASM can assemble.
<br/>Each instruction declared in <code>%IifList</code> requires the corresponding
<a href="#IifHandlers">handler</a> in this file.</dd>
<dt>See also</dt><dd><a class="EXT" href="dict.htm#DictLookupIi">DictLookupIi</a></dd></dl><pre>
%IifList %SET \
FWAIT, \
WAIT, \
FILD, \
FINIT, \
FLD, \
FST, \
FIST, \
FISTP, \
FISTTP, \
F2XM1, \
FABS, \
FADD, \
FADDP, \
FBLD, \
FBSTP, \
FCHS, \
FCLEX, \
FCMOVB, \
FCMOVBE, \
FCMOVE, \
FCMOVNB, \
FCMOVNBE, \
FCMOVNE, \
FCMOVNU, \
FCMOVU, \
FCOM, \
FCOMI, \
FCOMIP, \
FCOMP, \
FCOMPP, \
FCOS, \
FDECSTP, \
FDISI, \
FDIV, \
FDIVP, \
FDIVR, \
FDIVRP, \
FENI, \
FFREE, \
FFREEP, \
FIADD, \
FICOM, \
FICOMP, \
FIDIV, \
FIDIVR, \
FIMUL, \
FINCSTP, \
FISUB, \
FISUBR, \
FLD1, \
FLDCW, \
FLDENV, \
FLDL2E, \
FLDL2T, \
FLDLG2, \
FLDLN2, \
FLDPI, \
FLDZ, \
FMUL, \
FMULP, \
FNCLEX, \
FNDISI, \
FNENI, \
FNINIT, \
FNOP, \
FNSAVE, \
FNSTCW, \
FNSTENV, \
FNSTSW, \
FPATAN, \
FPREM, \
FPREM1, \
FPTAN, \
FRNDINT, \
FRSTOR, \
FSAVE, \
FSCALE, \
FSETPM, \
FSIN, \
FSINCOS, \
FSQRT, \
FSTCW, \
FSTENV, \
FSTP, \
FSTSW, \
FSUB, \
FSUBP, \
FSUBR, \
FSUBRP, \
FTST, \
FUCOM, \
FUCOMI, \
FUCOMIP, \
FUCOMP, \
FUCOMPP, \
FXAM, \
FXCH, \
FXRSTOR, \
FXRSTOR64, \
FXSAVE, \
FXSAVE64, \
FXTRACT, \
FYL2X, \
FYL2XP1, \
FTSTP, \
FRICHOP, \
FRINT2, \
FRINEAR, \
FCOM2, \
FCOMP3, \
FCOMP5, \
FSTP1, \
FSTP8, \
FSTP9, \
FXCH7, \
FSTSG, \
FSTDW, \
FXCH4, \
FRSTPM, \
FNSETPM, \
F4X4, \
FMUL4X4, \
FSBP0, \
FSBP1, \
FSBP2, \
FSBP3, \
<!--IifList-->
;
</pre><pre>
  ENDHEAD iif ; End of module interface.
</pre>

<dl id="IifFCMOVB">
<dt><a href="#IifHandlers">&uarr; FCMOVB</a></dt>
<dd>FP Conditional Move - below (CF=1)</dd>
<dt>Comment</dt>
<dd>IifFCMOVB is a common handler for FP instructions which calculate the result
<!---->of mathematic operation with numbers in two FP registers.
<!---->Both the first operand and destination is always&nbsp;ST0.
<!---->The second operand is ST0..ST7.
<dt>Reference</dt><dd><table>
<tr><th>F<i>instr</i> ST0, STi</th><td>destination=ST0, source=STi</td></tr>
<tr><th>F<i>instr</i> STi</th><td>destination=ST0, source=STi</td></tr>
<tr><th>F<i>instr</i> </th><td>destination=ST0, source=ST1</td></tr></table></dd>
<dt>See also</dt>
<dd><a href="#IifFCMOVB"  >FCMOVB</a>,
<a href="#IifFCMOVE"  >FCMOVE</a>,
<a href="#IifFCMOVBE" >FCMOVBE</a>,
<a href="#IifFCMOVU"  >FCMOVU</a>,
<a href="#IifFCMOVNB" >FCMOVNB</a>,
<a href="#IifFCMOVNE" >FCMOVNE</a>,
<a href="#IifFCMOVNBE">FCMOVNBE</a>,
<a href="#IifFCMOVNU" >FCMOVNU</a>,
<a href="#IifFUCOMI"  >FUCOMI</a>,
<a href="#IifFCOMI"   >FCOMI</a>,
<a href="#IifFUCOMIP" >FUCOMIP</a>,
<a href="#IifFCOMIP"  >FCOMIP</a>.</dd>
<dt>Category</dt>
<dd>x87fpu,datamov</dd>
<dt>Operands</dt>
<dd><b><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></b>,EST</dd>
<dt>Opcode</dt>
<dd>0xDA /0</dd>
<dt>Flags</dt>
<dd>tested:<b>.......C</b>, modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>CPU</dt>
<dd>PP+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3525.htm">t3525</a>
</dd>
</dl><pre>
IifFCMOVB:: PROC
      IiEmitOpcode 0xDA
      IiModRM /0
.om:  IiRequire 686,FPU
      IiOpEn M
      IiDispatchFormat none, STi:, STi.STi
.STi.STi:
      IiAbortIfNot Operand1, ST0
.none:IiAssumeEmpty Operand2, ST1
      IiSwap Operand1,Operand2
.STi: RET
 ENDP IifFCMOVB::
</pre>

<dl id="IifFCMOVE">
<dt><a href="#IifFCMOVB">&uarr; FCMOVE</a></dt>
<dd>FP Conditional Move - equal (ZF=1)</dd>
<dt>Category</dt>
<dd>x87fpu,datamov</dd>
<dt>Operands</dt>
<dd><b><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></b>,EST</dd>
<dt>Opcode</dt>
<dd>0xDA /1</dd>
<dt>Flags</dt>
<dd>tested:<b>....Z...</b>, modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>CPU</dt>
<dd>PP+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3525.htm">t3525</a>
</dd>
</dl><pre>
IifFCMOVE:: PROC
    IiEmitOpcode 0xDA
    IiModRM /1
    JMP IifFCMOVB.om:
 ENDP IifFCMOVE::
</pre>

<dl id="IifFCMOVBE">
<dt><a href="#IifFCMOVB">&uarr; FCMOVBE</a></dt>
<dd>FP Conditional Move - below or equal (CF=1 or ZF=1)</dd>
<dt>Category</dt>
<dd>x87fpu,datamov</dd>
<dt>Operands</dt>
<dd><b><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></b>,EST</dd>
<dt>Opcode</dt>
<dd>0xDA /2</dd>
<dt>Flags</dt>
<dd>tested:<b>....Z...</b>, modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>CPU</dt>
<dd>PP+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3525.htm">t3525</a>
</dd>
</dl><pre>
IifFCMOVBE:: PROC
    IiEmitOpcode 0xDA
    IiModRM /2
    JMP IifFCMOVB.om:
 ENDP IifFCMOVBE::
</pre>

<dl id="IifFCMOVU">
<dt><a href="#IifFCMOVB">&uarr; FCMOVU</a></dt>
<dd>FP Conditional Move - unordered (PF=1)</dd>
<dt>Category</dt>
<dd>x87fpu,datamov</dd>
<dt>Operands</dt>
<dd><b><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></b>,EST</dd>
<dt>Opcode</dt>
<dd>0xDA /3</dd>
<dt>Flags</dt>
<dd>tested:<b>......P.</b>, modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>CPU</dt>
<dd>PP+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3525.htm">t3525</a>
</dd>
</dl><pre>
IifFCMOVU:: PROC
    IiEmitOpcode 0xDA
    IiModRM /3
    MOV BL,0xD8
    JMP IifFCMOVB.om:
 ENDP IifFCMOVU::
</pre>

<dl id="IifFCMOVNB">
<dt><a href="#IifFCMOVB">&uarr; FCMOVNB</a></dt>
<dd>FP Conditional Move - not below (CF=0)</dd>
<dt>Category</dt>
<dd>x87fpu,datamov</dd>
<dt>Operands</dt>
<dd><b><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></b>,EST</dd>
<dt>Opcode</dt>
<dd>0xDB /0</dd>
<dt>Flags</dt>
<dd>tested:<b>.......C</b>, modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>CPU</dt>
<dd>PP+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3530.htm">t3530</a>
</dd>
</dl><pre>
IifFCMOVNB:: PROC
    IiEmitOpcode 0xDB
    IiModRM /0
    JMP IifFCMOVB.om:
 ENDP IifFCMOVNB::
</pre>

<dl id="IifFCMOVNE">
<dt><a href="#IifFCMOVB">&uarr; FCMOVNE</a></dt>
<dd>FP Conditional Move - not equal (ZF=0)</dd>
<dt>Category</dt>
<dd>x87fpu,datamov</dd>
<dt>Operands</dt>
<dd><b><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></b>,EST</dd>
<dt>Opcode</dt>
<dd>0xDB /1</dd>
<dt>Flags</dt>
<dd>tested:<b>....Z...</b>, modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>CPU</dt>
<dd>PP+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3530.htm">t3530</a>
</dd>
</dl><pre>
IifFCMOVNE:: PROC
    IiEmitOpcode 0xDB
    IiModRM /1
    JMP IifFCMOVB.om:
 ENDP IifFCMOVNE::
</pre>

<dl id="IifFCMOVNBE">
<dt><a href="#IifFCMOVB">&uarr; FCMOVNBE</a></dt>
<dd>FP Conditional Move - below or equal (CF=0 and ZF=0)</dd>
<dt>Category</dt>
<dd>x87fpu,datamov</dd>
<dt>Operands</dt>
<dd><b><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></b>,EST</dd>
<dt>Opcode</dt>
<dd>0xDB /2</dd>
<dt>Flags</dt>
<dd>tested:<b>....Z...</b>, modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>CPU</dt>
<dd>PP+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3530.htm">t3530</a>
</dd>
</dl><pre>
IifFCMOVNBE:: PROC
    IiEmitOpcode 0xDB
    IiModRM /2
    JMP IifFCMOVB.om:
 ENDP IifFCMOVNBE::
</pre>

<dl id="IifFCMOVNU">
<dt><a href="#IifFCMOVB">&uarr; FCMOVNU</a></dt>
<dd>FP Conditional Move - not unordered (PF=0)</dd>
<dt>Category</dt>
<dd>x87fpu,datamov</dd>
<dt>Operands</dt>
<dd><b><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></b>,EST</dd>
<dt>Opcode</dt>
<dd>0xDB /3</dd>
<dt>Flags</dt>
<dd>tested:<b>......P.</b>, modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>CPU</dt>
<dd>PP+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3530.htm">t3530</a>
</dd>
</dl><pre>
IifFCMOVNU:: PROC
    IiEmitOpcode 0xDB
    IiModRM /3
    JMP IifFCMOVB.om:
 ENDP IifFCMOVNU::
</pre>

<dl id="IifFUCOMI">
<dt><a href="#IifFCMOVB">&uarr; FUCOMI</a></dt>
<dd>Unordered Compare Floating Point Values and Set EFLAGS</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FCOMI:FCOMIP:FUCOMI:FUCOMIP.html">FUCOMI</a></dd>
<dt>Category</dt>
<dd>x87fpu,compar</dd>
<dt>Operands</dt>
<dd><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span>,EST</dd>
<dt>Opcode</dt>
<dd>0xDB /5</dd>
<dt>Flags</dt>
<dd>modified:<b>O...Z.PC .1..</b>, defined:<b>O...Z.PC .1..</b>, values:<b>O.......</b></dd>
<dt>CPU</dt>
<dd>PP+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3530.htm">t3530</a>
</dd>
</dl><pre>
IifFUCOMI:: PROC
    IiEmitOpcode 0xDB
    IiModRM /5
    JMP IifFCMOVB.om:
 ENDP IifFUCOMI::
</pre>

<dl id="IifFCOMI">
<dt><a href="#IifFCMOVB">&uarr; FCOMI</a></dt>
<dd>Compare Floating Point Values and Set EFLAGS</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FCOMI:FCOMIP:FUCOMI:FUCOMIP.html">FCOMI</a></dd>
<dt>Category</dt>
<dd>x87fpu,compar</dd>
<dt>Operands</dt>
<dd><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span>,EST</dd>
<dt>Opcode</dt>
<dd>0xDB /6</dd>
<dt>Flags</dt>
<dd>modified:<b>O...Z.PC .1..</b>, defined:<b>O...Z.PC .1..</b>, values:<b>O.......</b></dd>
<dt>CPU</dt>
<dd>PP+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3530.htm">t3530</a>
</dd>
</dl><pre>
IifFCOMI:: PROC
    IiEmitOpcode 0xDB
    IiModRM /6
    JMP IifFCMOVB.om:
 ENDP IifFCOMI::
</pre>

<dl id="IifFUCOMIP">
<dt><a href="#IifFCMOVB">&uarr; FUCOMIP</a></dt>
<dd>Unordered Compare Floating Point Values and Set EFLAGS and Pop</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FCOMI:FCOMIP:FUCOMI:FUCOMIP.html">FUCOMIP</a></dd>
<dt>Category</dt>
<dd>x87fpu,compar</dd>
<dt>Operands</dt>
<dd><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span>,EST</dd>
<dt>Opcode</dt>
<dd>0xDF /5</dd>
<dt>Flags</dt>
<dd>modified:<b>O...Z.PC .1..</b>, defined:<b>O...Z.PC .1..</b>, values:<b>O.......</b></dd>
<dt>CPU</dt>
<dd>PP+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3530.htm">t3530</a>
</dd>
</dl><pre>
IifFUCOMIP:: PROC
    IiEmitOpcode 0xDF
    IiModRM /5
    JMP IifFCMOVB.om:
 ENDP IifFUCOMIP::
</pre>

<dl id="IifFCOMIP">
<dt><a href="#IifFCMOVB">&uarr; FCOMIP</a></dt>
<dd>Compare Floating Point Values and Set EFLAGS and Pop</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FCOMI:FCOMIP:FUCOMI:FUCOMIP.html">FCOMIP</a></dd>
<dt>Category</dt>
<dd>x87fpu,compar</dd>
<dt>Operands</dt>
<dd><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span>,EST</dd>
<dt>Opcode</dt>
<dd>0xDF /6</dd>
<dt>Flags</dt>
<dd>modified:<b>O...Z.PC .1..</b>, defined:<b>O...Z.PC .1..</b>, values:<b>O.......</b></dd>
<dt>CPU</dt>
<dd>PP+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3530.htm">t3530</a>
</dd>
</dl><pre>
IifFCOMIP:: PROC
    IiEmitOpcode 0xDF
    IiModRM /6
    JMP IifFCMOVB.om:
 ENDP IifFCOMIP::
</pre>

<dl id="IifFADD">
<dt><a href="#IifHandlers">&uarr; FADD</a></dt>
<dd>FP Add</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FADD:FADDP:FIADD.html">FADD</a></dd>
<dt>Comment</dt>
<dd>FADD and similar are instructions with opcode 0xD8 or 0xDC,
<!---->which calculate the result of mathematic operation with two FP numbers. One source is always&nbsp;ST0,
<!---->the second source is either ST0..ST7 or memory operand with single or double precision FP value.
<br/>Result of the operation is stored back to ST0 or to ST0..ST7.</dd>
<dt>Reference</dt>
<dd><a href='#IifFADD'>FADD</a>,
<a href='#IifFMUL'>FMUL</a>,
<a href='#IifFSUB'>FSUB</a>,
<a href='#IifFSUBR'>FSUBR</a>,
<a href='#IifFDIV'>FDIV</a>,
<a href='#IifFDIVR'>FDIVR</a>,</dd>
<dt>Category</dt>
<dd>x87fpu,arith</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b>,Msr | <b><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></b>,EST | <b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b>,Mdr | <b>EST</b>,<span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></dd>
<dt>Opcode</dt>
<dd>0xD8 ^mf /0 | 0xD8 ^mf /0 | 0xDC ^Mf /0 | 0xDC /0</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3550.htm">t3550</a>
</dd>
</dl><pre>
IifFADD:: PROC
     IiModRM /0
.rm: IiRequire 086,FPU
     IiAllowModifier CODE
     IiOpEn M
     IiDataSize FloatingPoint=ON
     IiDispatchFormat STi.STi, STi:, STi.m64, STi.m32, m64, m32, none
.STi.m32:
     IiEmitOpcode 0xD8
     IiEncoding CODE=SHORT
 .op:IiAbortIfNot Operand1, ST0
     IiSwap Operand1,Operand2
     RET
.STi.m64:
     IiEmitOpcode 0xDC
     IiEncoding CODE=LONG
     JMP .op:
.STi:IiAssumeEmpty Operand2,ST0
.STi.STi:
     IiAbortIfNotST0
     JC  .SR:  ; If F* STi,ST0
     JNZ .SW:  ; If F* ST0,STi
     IiDispatchCode LONG=.SR: ; If both operands are ST0,ST0, let user choose opcode D8 or DC.
 .SW:IiSwap Operand1,Operand2
.m32:IiEmitOpcode 0xD8
     IiEncoding CODE=SHORT
     RET
.none:IiAssumeEmpty Operand1,ST0
     IiAssumeEmpty Operand2,ST1
     JMP .STi.STi:
 .SR:TESTD [EDI+II.Ppg],0x4000_0000
     JZ .m64: ; If /0, /1, /2, /3.
     XORD [EDI+II.Ppg],0x1000_0000 ; Exchange /4 <-> /5, /6 <-> /7.
.m64:IiEmitOpcode 0xDC
     IiEncoding CODE=LONG
     RET
 ENDP IifFADD::
</pre>

<dl id="IifFMUL">
<dt><a href="#IifFADD">&uarr; FMUL</a></dt>
<dd>FP Multiply</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FMUL:FMULP:FIMUL.html">FMUL</a></dd>
<dt>Category</dt>
<dd>x87fpu,arith</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b>,Msr | <b><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></b>,EST | <b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b>,Mdr | <b>EST</b>,<span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></dd>
<dt>Opcode</dt>
<dd>0xD8 ^mf /1 | 0xD8 ^mf /1 | 0xDC ^Mf /1 | 0xDC /1</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3550.htm">t3550</a>
</dd>
</dl><pre>
IifFMUL:: PROC
     IiModRM /1
     JMP IifFADD.rm:
 ENDP IifFMUL::
</pre>

<dl id="IifFSUB">
<dt><a href="#IifFADD">&uarr; FSUB</a></dt>
<dd>FP Subtract</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FSUB:FSUBP:FISUB.html">FSUB</a></dd>
<dt>Category</dt>
<dd>x87fpu,arith</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b>,Msr | <b><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></b>,EST | <b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b>,Mdr | <b>EST</b>,<span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></dd>
<dt>Opcode</dt>
<dd>0xD8 ^mf /4 | 0xD8 ^mf /4 | 0xDC ^Mf /4 | 0xDC /5</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3550.htm">t3550</a>
</dd>
</dl><pre>
IifFSUB:: PROC
    IiModRM /4
    JMP IifFADD.rm:
 ENDP IifFSUB::
</pre>

<dl id="IifFSUBR">
<dt><a href="#IifFADD">&uarr; FSUBR</a></dt>
<dd>FP Reverse Subtract</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FSUBR:FSUBRP:FISUBR.html">FSUBR</a></dd>
<dt>Category</dt>
<dd>x87fpu,arith</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b>,Msr | <b><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></b>,EST | <b>EST</b>,<span title="nr: 0, group: x87fpu, type: -, address: -">ST</span> | <b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b>,Mdr</dd>
<dt>Opcode</dt>
<dd>0xD8 ^mf /5 | 0xD8 ^mf /5 | 0xDC /4 | 0xDC ^Mf /5</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3550.htm">t3550</a>
</dd>
</dl><pre>
IifFSUBR:: PROC
    IiModRM /5
    JMP IifFADD.rm:
 ENDP IifFSUBR::
</pre>

<dl id="IifFDIV">
<dt><a href="#IifFADD">&uarr; FDIV</a></dt>
<dd>FP Divide</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FDIV:FDIVP:FIDIV.html">FDIV</a></dd>
<dt>Category</dt>
<dd>x87fpu,arith</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b>,Msr | <b><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></b>,EST | <b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b>,Mdr | <b>EST</b>,<span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></dd>
<dt>Opcode</dt>
<dd>0xD8 ^mf /6 | 0xD8 ^mf /6 | 0xDC ^Mf /6 | 0xDC /7</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3550.htm">t3550</a>
</dd>
</dl><pre>
IifFDIV:: PROC
     IiModRM /6
     JMP IifFADD.rm:
 ENDP IifFDIV::
</pre>

<dl id="IifFDIVR">
<dt><a href="#IifFADD">&uarr; FDIVR</a></dt>
<dd>FP Reverse Divide</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FDIVR:FDIVRP:FIDIVR.html">FDIVR</a></dd>
<dt>Category</dt>
<dd>x87fpu,arith</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b>,Msr | <b><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></b>,EST | <b>EST</b>,<span title="nr: 0, group: x87fpu, type: -, address: -">ST</span> | <b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b>,Mdr</dd>
<dt>Opcode</dt>
<dd>0xD8 ^mf /7 | 0xD8 ^mf /7 | 0xDC /6 | 0xDC ^Mf /7</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3550.htm">t3550</a>
</dd>
</dl><pre>
IifFDIVR:: PROC
     IiModRM /7
     JMP IifFADD.rm:
 ENDP IifFDIVR::
</pre>

<dl id="IifFCOM">
<dt><a href="#IifHandlers">&uarr; FCOM</a></dt>
<dd>FP Compare</dd>
<dt>Comment</dt>
<dd>IifFCOM is handler for instructions FCOM and FCOMP with opcode 0xD8 or 0xDC,
<!---->which compare two FP numbers and set condition codes C0,C2,C3 in FPU status word.
<br/>One source is always&nbsp;ST0, the other source is either ST0..ST7 or memory operand
<!---->with single or double precision FP value.
<!---->Undocumented reversed instructions
<!---->FCOM2, FCOMP2 behave similar as FCOM, FCOMP with swapped operands.
<br/>Operand combinations marked <b><sup>&euro;</sup></b> are &euro;ASM enhancements 
<!---->not documented in vendors specifications.</dd>
<dt>Reference</dt>
<dd><table>
<tr><th>FCOM                        m32</th><td>compare ST0 with m32</td><td>D8 /2</td></tr>
<tr><th>FCOM<sup>&euro;</sup>  ST0, m32</th><td>compare ST0 with m32</td><td>D8 /2</td></tr>
<tr><th>FCOM                        m64</th><td>compare ST0 with m64</td><td>DC /2</td></tr>
<tr><th>FCOM<sup>&euro;</sup>  ST0, m64</th><td>compare ST0 with m64</td><td>DC /2</td></tr>
<tr><th>FCOM<sup>&euro;</sup>  ST0, STi</th><td>compare ST0 with STi</td><td>D8 /2</td></tr>
<tr><th>FCOM                        STi</th><td>compare ST0 with STi</td><td>D8 /2</td></tr>
<tr><th>FCOM                           </th><td>compare ST0 with ST1</td><td>D8 /2</td></tr>
<tr><th>FCOM<sup>&euro;</sup>  STi, ST0</th><td>compare STi with ST0</td><td>DC /2</td></tr>
<tr><th>FCOM2<sup>&euro;</sup> STi, ST0</th><td>compare STi with ST0</td><td>DC /2</td></tr>
<tr><th>FCOM2<sup>&euro;</sup> STi     </th><td>compare STi with ST0</td><td>DC /2</td></tr>
<tr><th>FCOM2<sup>&euro;</sup>         </th><td>compare ST1 with ST0</td><td>DC /2</td></tr>
</table></dd>
<dt>See also</dt>
<dd><a href='#IifFCOM'>FCOM</a>,
<a href='#IifFCOM2'>FCOM2</a>,
<a href='#IifFCOMP'>FCOMP</a>,
<a href='#IifFCOMP3'>FCOMP3</a>,</dd>
<dt>Category</dt>
<dd>x87fpu,arith</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b>,Msr | <b><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></b>,EST | <b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b>,Mdr | <b>EST</b>,<span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></dd>
<dt>Opcode</dt>
<dd>0xD8 ^mf /0 | 0xD8 ^mf /0 | 0xDC ^Mf /0 | 0xDC /0</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3545.htm">t3545</a>
</dd>
</dl><pre>
IifFCOM:: PROC
     IiModRM /2
.rm: IiRequire 086,FPU
     IiAllowModifier CODE
     IiOpEn M
     IiDataSize FloatingPoint=ON
     IiDispatchFormat STi.STi, STi:, STi.m64, STi.m32, m64, m32, none
.STi.m32:
     IiAbortIfNot Operand1, ST0
     IiSwap Operand1,Operand2
.m32:IiEmitOpcode 0xD8
     IiEncoding CODE=SHORT
     RET
.STi.m64:
     IiAbortIfNot Operand1, ST0
     IiSwap Operand1,Operand2
.m64:IiEmitOpcode 0xDC
     IiEncoding CODE=LONG
     RET
.none:IiAssumeEmpty Operand1,ST1
.STi:JMP .m32:
.STi.STi:
     IiAbortIfNotST0
     JC .m64:      ; If FCOM  STi,ST0
     JNZ .STi.m32: ; If FCOM  ST0,STi
     IiDispatchCode LONG=.m64: ; If both operands are ST0,ST0, let user choose opcode D8 or DC.
     JMP .m32:
 ENDP IifFCOM::
</pre>

<dl id="IifFCOMP">
<dt><a href="#IifFCOM">&uarr; FCOMP</a></dt>
<dd>FP Compare and Pop</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FCOM:FCOMP:FCOMPP.html">FCOMP</a></dd>
<dt>Category</dt>
<dd>x87fpu,compar</dd>
<dt>Operands</dt>
<dd><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i>,ESsr | <i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i>,<i><span title="nr: 1, group: x87fpu, type: -, address: EST">ST1</span></i> | <i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i>,Mdr</dd>
<dt>Opcode</dt>
<dd>0xD8 ^mf /3 | 0xD8D9 /3 | 0xDC ^Mf /3</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>0123</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3545.htm">t3545</a>
</dd>
</dl><pre>
IifFCOMP:: PROC
     IiModRM /3
     JMP IifFCOM.rm:
 ENDP IifFCOMP::
</pre>

<dl id="IifFCOM2">
<dt><a href="#IifHandlers">&uarr; FCOM2</a></dt>
<dd>FP Compare, alternative</dd>
<dt>Comment</dt>
<dd>IifFCOM2 is handler for instructions FCOM2 and FCOMP3 with opcode 0xD8 or 0xDC,
<!---->which compare two FP numbers and set condition codes C0,C2,C3 in FPU status word.
<br/>One source is always&nbsp;ST0, the other source is either ST0..ST7.</dd>
<dt>Reference</dt>
<dd><a href='#IifFCOM'>FCOM</a>,
<a href='#IifFCOM2'>FCOM2</a>,
<a href='#IifFCOMP'>FCOMP</a>,
<a href='#IifFCOMP3'>FCOMP3</a>,</dd>
<dt>Category</dt>
<dd>x87fpu,arith</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b>,Msr | <b><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></b>,EST | <b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b>,Mdr | <b>EST</b>,<span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></dd>
<dt>Opcode</dt>
<dd>0xD8 ^mf /0 | 0xD8 ^mf /0 | 0xDC ^Mf /0 | 0xDC /0</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3545.htm">t3545</a>
</dd>
</dl><pre>
IifFCOM2:: PROC
     IiModRM /2
.rm: IiRequire 086,FPU,UNDOC
     IiAllowModifier CODE
     IiOpEn M
     IiDispatchFormat STi.STi, STi:,none
.none:IiAssumeEmpty Operand1,ST1
.STi:IiEmitOpcode 0xDC
     IiEncoding CODE=LONG
     RET
.STi.STi:
     IiAbortIfNotST0
     JC .STi:      ; If FCOM2  STi,ST0
     JNZ .Sw:      ; If FCOM2  ST0,STi
     IiDispatchCode LONG=.STi: ; If both operands are ST0,ST0, let user choose opcode D8 or DC.
 .Sw:IiSwap Operand1,Operand2
     IiEmitOpcode 0xD8
     IiEncoding CODE=SHORT
     RET
 ENDP IifFCOM2::
</pre>

<dl id="IifFCOMP3">
<dt><a href="#IifFCOM2">&uarr; FCOMP3</a></dt>
<dd>FP Reverse Compare and Pop</dd>
<dt>Category</dt>
<dd>x87fpu,compar</dd>
<dt>Operands</dt>
<dd><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i>,ESsr | <i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i>,<i><span title="nr: 1, group: x87fpu, type: -, address: EST">ST1</span></i> | <i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i>,Mdr</dd>
<dt>Opcode</dt>
<dd>0xD8 ^mf /3 | 0xD8D9 /3 | 0xDC ^Mf /3</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>0123</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3545.htm">t3545</a>
</dd>
</dl><pre>
IifFCOMP3:: PROC
     IiModRM /3
     JMP IifFCOM2.rm:
 ENDP IifFCOMP3::
</pre>

<dl id="IifFIADD">
<dt><a href="#IifHandlers">&uarr; FIADD</a></dt>
<dd>FP Add Integer</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FADD:FADDP:FIADD.html">FIADD</a></dd>
<dt>Comment</dt>
<dd>FIADD and similar are instructions with opcode 0xDA or 0xDE,
<!---->which calculate the result of mathematic operation with FP number in ST0 and
<!---->16bit or 32bit integer in memory.
<br/>Result of the operation is stored to ST0.</dd>
<dt>Reference</dt>
<dd><a href='#IifFIMUL'>FMUL</a>,
<a href='#IifFICOM'>FICOM</a>,
<a href='#IifFICOMP'>FICOMP</a>,
<a href='#IifFISUB'>FISUB</a>,
<a href='#IifFISUBR'>FISUBR</a>,
<a href='#IifFIDIV'>FIDIV</a>,
<a href='#IifFIDIVR'>FIDIVR</a>,</dd>
<dt>Category</dt>
<dd>x87fpu,arith</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b>,Mdi | <b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b>,Mwi</dd>
<dt>Opcode</dt>
<dd>0xDA ^mF /0 | 0xDE ^MF /0</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3580.htm">t3580</a>
</dd>
</dl><pre>
IifFIADD:: PROC
     IiModRM /0
.rm: IiRequire 086,FPU
     IiOpEn M
     IiDataSize FloatingPoint=ON
     IiDispatchFormat m16,m32,STi.m16,STi.m32
.m32:IiEmitOpcode 0xDA
     RET
.m16:IiEmitOpcode 0xDE
     RET
.STi.m32:
     IiEmitOpcode 0xDA
.op: IiAbortIfNot Operand1,ST0
     IiSwap Operand1,Operand2
     RET
.STi.m16:
     IiEmitOpcode 0xDE
     JMP .op:
 ENDP IifFIADD::
</pre>

<dl id="IifFIMUL">
<dt><a href="#IifFIADD">&uarr; FIMUL</a></dt>
<dd>FP Multiply Integer</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FMUL:FMULP:FIMUL.html">FIMUL</a></dd>
<dt>Category</dt>
<dd>x87fpu,arith</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b>,Mdi | <b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b>,Mwi</dd>
<dt>Opcode</dt>
<dd>0xDA ^mF /1 | 0xDE ^MF /1</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3580.htm">t3580</a>
</dd>
</dl><pre>
IifFIMUL:: PROC
     IiModRM /1
     JMP IifFIADD.rm:
 ENDP IifFIMUL::
</pre>

<dl id="IifFICOM">
<dt><a href="#IifFIADD">&uarr; FICOM</a></dt>
<dd>FP Compare Integer</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FICOM:FICOMP.html">FICOM</a></dd>
<dt>Category</dt>
<dd>x87fpu,compar</dd>
<dt>Operands</dt>
<dd><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i>,Mdi | <i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i>,Mwi</dd>
<dt>Opcode</dt>
<dd>0xDA ^mF /2 | 0xDE ^MF /2</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>0123</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3580.htm">t3580</a>
</dd>
</dl><pre>
IifFICOM:: PROC
    IiModRM /2
    JMP IifFIADD.rm:
 ENDP IifFICOM::
</pre>

<dl id="IifFICOMP">
<dt><a href="#IifFIADD">&uarr; FICOMP</a></dt>
<dd>FP Compare Integer and Pop</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FICOM:FICOMP.html">FICOMP</a></dd>
<dt>Category</dt>
<dd>x87fpu,compar</dd>
<dt>Operands</dt>
<dd><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i>,Mdi | <i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i>,Mwi</dd>
<dt>Opcode</dt>
<dd>0xDA ^mF /3 | 0xDE ^MF /3</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>0123</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3580.htm">t3580</a>
</dd>
</dl><pre>
IifFICOMP:: PROC
     IiModRM /3
     JMP IifFIADD.rm:
 ENDP IifFICOMP::
</pre>

<dl id="IifFISUB">
<dt><a href="#IifFIADD">&uarr; FISUB</a></dt>
<dd>FP Subtract Integer</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FSUB:FSUBP:FISUB.html">FISUB</a></dd>
<dt>Category</dt>
<dd>x87fpu,arith</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b>,Mdi | <b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b>,Mwi</dd>
<dt>Opcode</dt>
<dd>0xDA ^mF /4 | 0xDE ^MF /4</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3580.htm">t3580</a>
</dd>
</dl><pre>
IifFISUB:: PROC
    IiModRM /4
    JMP IifFIADD.rm:
 ENDP IifFISUB::
</pre>

<dl id="IifFISUBR">
<dt><a href="#IifFIADD">&uarr; FISUBR</a></dt>
<dd>FP Reverse Subtract Integer</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FSUBR:FSUBRP:FISUBR.html">FISUBR</a></dd>
<dt>Category</dt>
<dd>x87fpu,arith</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b>,Mdi | <b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b>,Mwi</dd>
<dt>Opcode</dt>
<dd>0xDA ^mF /5 | 0xDE ^MF /5</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3580.htm">t3580</a>
</dd>
</dl><pre>
IifFISUBR:: PROC
    IiModRM /5
    JMP IifFIADD.rm:
 ENDP IifFISUBR::
</pre>

<dl id="IifFIDIV">
<dt><a href="#IifFIADD">&uarr; FIDIV</a></dt>
<dd>FP Divide Integer</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FDIV:FDIVP:FIDIV.html">FIDIV</a></dd>
<dt>Category</dt>
<dd>x87fpu,arith</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b>,Mdi | <b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b>,Mwi</dd>
<dt>Opcode</dt>
<dd>0xDA ^mF /6 | 0xDE ^MF /6</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3580.htm">t3580</a>
</dd>
</dl><pre>
IifFIDIV:: PROC
     IiModRM /6
     JMP IifFIADD.rm:
 ENDP IifFIDIV::
</pre>

<dl id="IifFIDIVR">
<dt><a href="#IifFIADD">&uarr; FIDIVR</a></dt>
<dd>FP Reverse Divide Integer</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FDIVR:FDIVRP:FIDIVR.html">FIDIVR</a></dd>
<dt>Category</dt>
<dd>x87fpu,arith</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b>,Mdi | <b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b>,Mwi</dd>
<dt>Opcode</dt>
<dd>0xDA ^mF /7 | 0xDE ^MF /7</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3580.htm">t3580</a>
</dd>
</dl><pre>
IifFIDIVR:: PROC
     IiModRM /7
     JMP IifFIADD.rm:
 ENDP IifFIDIVR::
</pre>

<dl id="IifFADDP">
<dt><a href="#IifHandlers">&uarr; <em>IifFADDP</em></a></dt>
<dd>IifFADDP is a common handler for FP instructions with opcode 0xDE
<!---->which calculate the result of mathematic operation with two numbers and then pop the FP stack.
<br/>The first operand is always in ST0 (it will be discarded after pop), 
<!---->the second operand (destination) is in any FP register.</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FADD:FADDP:FIADD.html">FADDP</a></dd>
<dt>Reference</dt>
<dd><table>
<tr><th>FopP              STi,ST0</th><td>STi := STi op ST0, then POP</tr>
<tr><th>FopP<sup>&euro;</sup> STi</th><td>STi := STi op ST0, then POP</tr>
<tr><th>FopR                     </th><td>STi := STi op ST0, then POP</tr>
</table></dd>
<dt>See also</dt>
<dd><a href='#IifFADDP'>FADDP</a>,
<a href='#IifFMULP'>FMULP</a>,
<a href='#IifFCOMP5'>FCOMP5</a>,
<a href='#IifFSUBP'>FSUBP</a>,
<a href='#IifFSUBRP'>FSUBRP</a>,
<a href='#IifFDIVP'>FDIVP</a>,
<a href='#IifFDIVRP'>FDIVRP</a></dd>
<dt>Opcode</dt>
<dd>0xDE /0 | 0xDEC1 /0</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3555.htm">t3555</a>
</dd>
</dl><pre>
IifFADDP:: PROC
    IiModRM /0
.rm:IiRequire 086,FPU
    IiEmitOpcode 0xDE
    IiOpEn M
    IiDispatchFormat none, STi:, STi.STi
.STi.STi:IiAbortIfNot Operand2, ST0
.none:
    IiAssumeEmpty Operand1, ST1
.STi:RET
 ENDP IifFADDP::
</pre>

<dl id="IifFMULP">
<dt><a href="#IifFADDP">&uarr; FMULP</a></dt>
<dd>Multiply and Pop</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FMUL:FMULP:FIMUL.html">FMULP</a></dd>
<dt>Category</dt>
<dd>x87fpu,arith</dd>
<dt>Operands</dt>
<dd><b>EST</b>,<span title="nr: 0, group: x87fpu, type: -, address: -">ST</span> | <b><i><span title="nr: 1, group: x87fpu, type: -, address: EST">ST1</span></i></b>,<i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></dd>
<dt>Opcode</dt>
<dd>0xDE /1 | 0xDEC9 /1</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3555.htm">t3555</a>
</dd>
</dl><pre>
IifFMULP:: PROC
     IiModRM /1
     JMP IifFADDP.rm:
 ENDP IifFMULP::
</pre>

<dl id="IifFCOMP5">
<dt><a href="#IifFADDP">&uarr; FCOMP5</a></dt>
<dd>FP Compare and Pop, undocumented</dd>
<dt>Category</dt>
<dd>x87fpu,arith</dd>
<dt>Operands</dt>
<dd><b>EST</b>,<span title="nr: 0, group: x87fpu, type: -, address: -">ST</span> | <b><i><span title="nr: 1, group: x87fpu, type: -, address: EST">ST1</span></i></b>,<i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></dd>
<dt>Opcode</dt>
<dd>0xDE /2</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3555.htm">t3555</a>
</dd>
</dl><pre>
IifFCOMP5:: PROC
     IiRequire UNDOC
     IiModRM /2
     JMP IifFADDP.rm:
 ENDP IifFCOMP5::
</pre>

<dl id="IifFSUBRP">
<dt><a href="#IifFADDP">&uarr; FSUBRP</a></dt>
<dd>Reverse Subtract and Pop</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FSUBR:FSUBRP:FISUBR.html">FSUBRP</a></dd>
<dt>Category</dt>
<dd>x87fpu,arith</dd>
<dt>Operands</dt>
<dd><b>EST</b>,<span title="nr: 0, group: x87fpu, type: -, address: -">ST</span> | <b><i><span title="nr: 1, group: x87fpu, type: -, address: EST">ST1</span></i></b>,<i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></dd>
<dt>Opcode</dt>
<dd>0xDE /4 | 0xDEE1 /4</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3555.htm">t3555</a>
</dd>
</dl><pre>
IifFSUBRP:: PROC
    IiModRM /4
    JMP IifFADDP.rm:
 ENDP IifFSUBRP::
</pre>

<dl id="IifFSUBP">
<dt><a href="#IifFADDP">&uarr; FSUBP</a></dt>
<dd>Subtract and Pop</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FSUB:FSUBP:FISUB.html">FSUBP</a></dd>
<dt>Category</dt>
<dd>x87fpu,arith</dd>
<dt>Operands</dt>
<dd><b>EST</b>,<span title="nr: 0, group: x87fpu, type: -, address: -">ST</span> | <b><i><span title="nr: 1, group: x87fpu, type: -, address: EST">ST1</span></i></b>,<i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></dd>
<dt>Opcode</dt>
<dd>0xDE /5 | 0xDEE9 /5</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3555.htm">t3555</a>
</dd>
</dl><pre>
IifFSUBP:: PROC
    IiModRM /5
    JMP IifFADDP.rm:
 ENDP IifFSUBP::
</pre>

<dl id="IifFDIVRP">
<dt><a href="#IifFADDP">&uarr; FDIVRP</a></dt>
<dd>Reverse Divide and Pop</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FDIVR:FDIVRP:FIDIVR.html">FDIVRP</a></dd>
<dt>Category</dt>
<dd>x87fpu,arith</dd>
<dt>Operands</dt>
<dd><b>EST</b>,<span title="nr: 0, group: x87fpu, type: -, address: -">ST</span> | <b><i><span title="nr: 1, group: x87fpu, type: -, address: EST">ST1</span></i></b>,<i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></dd>
<dt>Opcode</dt>
<dd>0xDE /6 | 0xDEF1 /6</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3555.htm">t3555</a>
</dd>
</dl><pre>
IifFDIVRP:: PROC
     IiModRM /6
     JMP IifFADDP.rm:
 ENDP IifFDIVRP::
</pre>

<dl id="IifFDIVP">
<dt><a href="#IifFADDP">&uarr; FDIVP</a></dt>
<dd>Divide and Pop</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FDIV:FDIVP:FIDIV.html">FDIVP</a></dd>
<dt>Category</dt>
<dd>x87fpu,arith</dd>
<dt>Operands</dt>
<dd><b>EST</b>,<span title="nr: 0, group: x87fpu, type: -, address: -">ST</span> | <b><i><span title="nr: 1, group: x87fpu, type: -, address: EST">ST1</span></i></b>,<i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></dd>
<dt>Opcode</dt>
<dd>0xDE /7 | 0xDEF9 /7</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3555.htm">t3555</a>
</dd>
</dl><pre>
IifFDIVP:: PROC
     IiModRM /7
     JMP IifFADDP.rm:
 ENDP IifFDIVP::
</pre>

<dl id="IifFNOP">
<dt><a href="#IifHandlers">&uarr; FNOP</a></dt>
<dd>FP no operation</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FNOP.html">FNOP</a></dd>
<dt>Comment</dt>
<dd>IifFNOP and similar area FP unary instructions with opcode 0xD9
<!---->which use implicit one or two registers from the top of FPU stack
<!---->(ST0, sometimes ST1 or condition flags C0..C3.).
<br/>In &euro;ASM they may be specified with operand ST0 or operands may be omitted. 
<dt>Reference</dt><dd><table>
<tr><th>Fop </th><td>destination and source is ST0</td></tr>
<tr><th>Fop<sup>&euro;</sup> ST0</th><td>destination and source is ST0</td></tr>
</table></dd>
<dt>See also</dt>
<dd><a href='#IifFNOP'>FNOP</a>,
<a href='#IifFCHS'>FCHS</a>,
<a href='#IifFABS'>FABS</a>,
<a href='#IifFTST'>FTST</a>,
<a href='#IifFXAM'>FXAM</a>,
<a href='#IifFTSTP'>FTSTP</a>,
<a href='#IifFLD1'>FLD1</a>,
<a href='#IifFLDL2T'>FLDL2T</a>,
<a href='#IifFLDL2E'>FLDL2E</a>,
<a href='#IifFLDPI'>FLDPI</a>,
<a href='#IifFLDLG2'>FLDLG2</a>,
<a href='#IifFLDLN2'>FLDLN2</a>,
<a href='#IifFLDZ'>FLDZ</a>,
<a href='#IifF2XM1'>F2XM1</a>,
<a href='#IifFYL2X'>FYL2X</a>,
<a href='#IifFPTAN'>FPTAN</a>,
<a href='#IifFPATAN'>FPATAN</a>,
<a href='#IifFXTRACT'>FXTRACT</a>,
<a href='#IifFPREM1'>FPREM1</a>,
<a href='#IifFDECSTP'>FDECSTP</a>,
<a href='#IifFINCSTP'>FINCSTP</a>,
<a href='#IifFPREM'>FPREM</a>,
<a href='#IifFYL2XP1'>FYL2XP1</a>,
<a href='#IifFSQRT'>FSQRT</a>,
<a href='#IifFSINCOS'>FSINCOS</a>,
<a href='#IifFRNDINT'>FRNDINT</a>,
<a href='#IifFSCALE'>FSCALE</a>,
<a href='#IifFSIN'>FSIN</a>,
<a href='#IifFCOS'>FCOS</a>.</dd>
<dt>Opcode</dt>
<dd>0xD9D0</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, undefined:<b>0123</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3510.htm">t3510</a>
</dd>
</dl><pre>
IifFNOP:: PROC
     MOV CL,0xD0
.op: IiRequire 086,FPU
     IiEmitOpcode 0xD9,ECX     
     IiDispatchFormat none, STi:
.STi:IiAbortIfNot Operand1, ST0
.none:RET
 ENDP IifFNOP::
</pre>

<dl id="IifFCHS">
<dt><a href="#IifFNOP">&uarr; FCHS</a></dt>
<dd>FP Change Sign</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FCHS.html">FCHS</a></dd>
<dt>Category</dt>
<dd>x87fpu,arith</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b></dd>
<dt>Opcode</dt>
<dd>0xD9E0</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3510.htm">t3510</a>
</dd>
</dl><pre>
IifFCHS:: PROC
    MOV CL,0xE0
    JMP IifFNOP.op:
 ENDP IifFCHS::
</pre>

<dl id="IifFABS">
<dt><a href="#IifFNOP">&uarr; FABS</a></dt>
<dd>FP Absolute Value</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FABS.html">FABS</a></dd>
<dt>Category</dt>
<dd>x87fpu,arith</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b></dd>
<dt>Opcode</dt>
<dd>0xD9E1</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3510.htm">t3510</a>
</dd>
</dl><pre>
IifFABS:: PROC
    MOV CL,0xE1
    JMP IifFNOP.op:
 ENDP IifFABS::
</pre>

<dl id="IifFTST">
<dt><a href="#IifFNOP">&uarr; FTST</a></dt>
<dd>FP Test</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FTST.html">FTST</a></dd>
<dt>Category</dt>
<dd>x87fpu,compar</dd>
<dt>Operands</dt>
<dd><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></dd>
<dt>Opcode</dt>
<dd>0xD9E4</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>0123</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3510.htm">t3510</a>
</dd>
</dl><pre>
IifFTST:: PROC
    MOV CL,0xE4
    JMP IifFNOP.op:
    ENDP IifFTST::
</pre>

<dl id="IifFXAM">
<dt><a href="#IifFNOP">&uarr; FXAM</a></dt>
<dd>FP Examine</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FXAM.html">FXAM</a></dd>
<dt>Category</dt>
<dd>x87fpu</dd>
<dt>Operands</dt>
<dd><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></dd>
<dt>Opcode</dt>
<dd>0xD9E5</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>0123</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3510.htm">t3510</a>
</dd>
</dl><pre>
IifFXAM:: PROC
    MOV CL,0xE5
    JMP IifFNOP.op:
 ENDP IifFXAM::
</pre>

<dl id="IifFTSTP">
<dt><a href="#IifFNOP">&uarr; FTSTP</a></dt>
<dd>&nbsp;</dd>
<dt>Opcode</dt>
<dd>0xD9E6</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3510.htm">t3510</a>
</dd>
</dl><pre>
IifFTSTP:: PROC
    IiRequire CYRIX
    MOV CL,0xE6
    JMP IifFNOP.op:
    ENDP IifFTSTP::
</pre>

<dl id="IifFLD1">
<dt><a href="#IifFNOP">&uarr; FLD1</a></dt>
<dd>FP Load Constant +1.0</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FLD1:FLDL2T:FLDL2E:FLDPI:FLDLG2:FLDLN2:FLDZ.html">FLD1</a></dd>
<dt>Category</dt>
<dd>x87fpu,ldconst</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b></dd>
<dt>Opcode</dt>
<dd>0xD9E8 /5</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3512.htm">t3512</a>
</dd>
</dl><pre>
IifFLD1:: PROC
    MOV CL,0xE8
    JMP IifFNOP.op:
 ENDP IifFLD1::
</pre>

<dl id="IifFLDL2T">
<dt><a href="#IifFNOP">&uarr; FLDL2T</a></dt>
<dd>FP Load Constant log<sub>2</sub>10</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FLD1:FLDL2T:FLDL2E:FLDPI:FLDLG2:FLDLN2:FLDZ.html">FLDL2T</a></dd>
<dt>Category</dt>
<dd>x87fpu,ldconst</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b></dd>
<dt>Opcode</dt>
<dd>0xD9E9</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3512.htm">t3512</a>
</dd>
</dl><pre>
IifFLDL2T:: PROC
    MOV CL,0xE9
    JMP IifFNOP.op:
    ENDP IifFLDL2T::
</pre>

<dl id="IifFLDL2E">
<dt><a href="#IifFNOP">&uarr; FLDL2E</a></dt>
<dd>FP Load Constant log<sub>2</sub>e</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FLD1:FLDL2T:FLDL2E:FLDPI:FLDLG2:FLDLN2:FLDZ.html">FLDL2E</a></dd>
<dt>Category</dt>
<dd>x87fpu,ldconst</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b></dd>
<dt>Opcode</dt>
<dd>0xD9EA</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3512.htm">t3512</a>
</dd>
</dl><pre>
IifFLDL2E:: PROC
    MOV CL,0xEA
    JMP IifFNOP.op:
    ENDP IifFLDL2E::
</pre>

<dl id="IifFLDPI">
<dt><a href="#IifFNOP">&uarr; FLDPI</a></dt>
<dd>FP Load Constant &#960;</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FLD1:FLDL2T:FLDL2E:FLDPI:FLDLG2:FLDLN2:FLDZ.html">FLDPI</a></dd>
<dt>Category</dt>
<dd>x87fpu,ldconst</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b></dd>
<dt>Opcode</dt>
<dd>0xD9EB</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3512.htm">t3512</a>
</dd>
</dl><pre>
IifFLDPI:: PROC
    MOV CL,0xEB
    JMP IifFNOP.op:
    ENDP IifFLDPI::
</pre>

<dl id="IifFLDLG2">
<dt><a href="#IifFNOP">&uarr; FLDLG2</a></dt>
<dd>FP Load Constant log<sub>10</sub>2</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FLD1:FLDL2T:FLDL2E:FLDPI:FLDLG2:FLDLN2:FLDZ.html">FLDLG2</a></dd>
<dt>Category</dt>
<dd>x87fpu,ldconst</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b></dd>
<dt>Opcode</dt>
<dd>0xD9EC</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3512.htm">t3512</a>
</dd>
</dl><pre>
IifFLDLG2:: PROC
    MOV CL,0xEC
    JMP IifFNOP.op:
    ENDP IifFLDLG2::
</pre>

<dl id="IifFLDLN2">
<dt><a href="#IifFNOP">&uarr; FLDLN2</a></dt>
<dd>FP Load Constant log<sub>e</sub>2</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FLD1:FLDL2T:FLDL2E:FLDPI:FLDLG2:FLDLN2:FLDZ.html">FLDLN2</a></dd>
<dt>Category</dt>
<dd>x87fpu,ldconst</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b></dd>
<dt>Opcode</dt>
<dd>0xD9ED</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3512.htm">t3512</a>
</dd>
</dl><pre>
IifFLDLN2:: PROC
    MOV CL,0xED
    JMP IifFNOP.op:
    ENDP IifFLDLN2::
</pre>

<dl id="IifFLDZ">
<dt><a href="#IifFNOP">&uarr; FLDZ</a></dt>
<dd>FP Load Constant +0.0</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FLD1:FLDL2T:FLDL2E:FLDPI:FLDLG2:FLDLN2:FLDZ.html">FLDZ</a></dd>
<dt>Category</dt>
<dd>x87fpu,ldconst</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b></dd>
<dt>Opcode</dt>
<dd>0xD9EE</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3512.htm">t3512</a>
</dd>
</dl><pre>
IifFLDZ:: PROC
    MOV CL,0xEE
    JMP IifFNOP.op:
    ENDP IifFLDZ::
</pre>

<dl id="IifF2XM1">
<dt><a href="#IifFNOP">&uarr; F2XM1</a></dt>
<dd>FP Compute 2<sup>x</sup>-1</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/F2XM1.html">F2XM1</a></dd>
<dt>Category</dt>
<dd>x87fpu,trans</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b></dd>
<dt>Opcode</dt>
<dd>0xD9F0</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3515.htm">t3515</a>
</dd>
</dl><pre>
IifF2XM1:: PROC
    MOV CL,0xF0
    JMP IifFNOP.op:
 ENDP IifF2XM1::
</pre>

<dl id="IifFYL2X">
<dt><a href="#IifFNOP">&uarr; FYL2X</a></dt>
<dd>FP Compute Fp Y * Log<sub>2</sub> X</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FYL2X.html">FYL2X</a></dd>
<dt>Category</dt>
<dd>x87fpu,trans</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: 1, group: x87fpu, type: -, address: -">ST1</span></i></b>,<i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></dd>
<dt>Opcode</dt>
<dd>0xD9F1</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3515.htm">t3515</a>
</dd>
</dl><pre>
IifFYL2X:: PROC
    MOV CL,0xF1
    JMP IifFNOP.op:
 ENDP IifFYL2X::
</pre>

<dl id="IifFPTAN">
<dt><a href="#IifFNOP">&uarr; FPTAN</a></dt>
<dd>FP Partial Tangent</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FPTAN.html">FPTAN</a></dd>
<dt>Category</dt>
<dd>x87fpu,trans</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b></dd>
<dt>Opcode</dt>
<dd>0xD9F2</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.12.</b>, undefined:<b>0..3</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3515.htm">t3515</a>
</dd>
</dl><pre>
IifFPTAN:: PROC
    MOV CL,0xF2
    JMP IifFNOP.op:
 ENDP IifFPTAN::
</pre>

<dl id="IifFPATAN">
<dt><a href="#IifFNOP">&uarr; FPATAN</a></dt>
<dd>FP Partial Arctangent and Pop</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FPATAN.html">FPATAN</a></dd>
<dt>Category</dt>
<dd>x87fpu,trans</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: 1, group: x87fpu, type: -, address: -">ST1</span></i></b>,<i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></dd>
<dt>Opcode</dt>
<dd>0xD9F3</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3515.htm">t3515</a>
</dd>
</dl><pre>
IifFPATAN:: PROC
    MOV CL,0xF3
    JMP IifFNOP.op:
 ENDP IifFPATAN::
</pre>

<dl id="IifFXTRACT">
<dt><a href="#IifFNOP">&uarr; FXTRACT</a></dt>
<dd>FP Extract Exponent and Significand</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FXTRACT.html">FXTRACT</a></dd>
<dt>Category</dt>
<dd>x87fpu,arith</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b></dd>
<dt>Opcode</dt>
<dd>0xD9F4</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3515.htm">t3515</a>
</dd>
</dl><pre>
IifFXTRACT:: PROC
    MOV CL,0xF4
    JMP IifFNOP.op:
    RET
 ENDP IifFXTRACT::
</pre>

<dl id="IifFPREM1">
<dt><a href="#IifFNOP">&uarr; FPREM1</a></dt>
<dd>IEEE Partial Remainder</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FPREM1.html">FPREM1</a></dd>
<dt>Category</dt>
<dd>x87fpu,arith</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b>,<i><span title="nr: 1, group: x87fpu, type: -, address: -">ST1</span></i></dd>
<dt>Opcode</dt>
<dd>0xD9F5</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>0123</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3515.htm">t3515</a>
</dd>
</dl><pre>
IifFPREM1:: PROC
    MOV CL,0xF5
    JMP IifFNOP.op:
 ENDP IifFPREM1::
</pre>

<dl id="IifFDECSTP">
<dt><a href="#IifFNOP">&uarr; FDECSTP</a></dt>
<dd>Decrement FPU Stack-Top Pointer</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FDECSTP.html">FDECSTP</a></dd>
<dt>Category</dt>
<dd>x87fpu,control</dd>
<dt>Opcode</dt>
<dd>0xD9F6</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b>, values:<b>.0..</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3515.htm">t3515</a>
</dd>
</dl><pre>
IifFDECSTP:: PROC
    MOV CL,0xF6
    JMP IifFNOP.op:
 ENDP IifFDECSTP::
</pre>

<dl id="IifFINCSTP">
<dt><a href="#IifFNOP">&uarr; FINCSTP</a></dt>
<dd>Increment FPU Stack-Top Pointer</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FINCSTP.html">FINCSTP</a></dd>
<dt>Category</dt>
<dd>x87fpu,control</dd>
<dt>Opcode</dt>
<dd>0xD9F7</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b>, values:<b>.0..</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3515.htm">t3515</a>
</dd>
</dl><pre>
IifFINCSTP:: PROC
    MOV CL,0xF7
    JMP IifFNOP.op:
 ENDP IifFINCSTP::
</pre>

<dl id="IifFPREM">
<dt><a href="#IifFNOP">&uarr; FPREM</a></dt>
<dd>FP Partial Remainder (for compatibility with i8087 and i287)</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FPREM.html">FPREM</a></dd>
<dt>Category</dt>
<dd>x87fpu,arith</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b>,<i><span title="nr: 1, group: x87fpu, type: -, address: -">ST1</span></i></dd>
<dt>Opcode</dt>
<dd>0xD9F8</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>0123</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3520.htm">t3520</a>
</dd>
</dl><pre>
IifFPREM:: PROC
    MOV CL,0xF8
    JMP IifFNOP.op:
 ENDP IifFPREM::
</pre>

<dl id="IifFYL2XP1">
<dt><a href="#IifFNOP">&uarr; FYL2XP1</a></dt>
<dd>FP Compute Fp Y * Log<sub>2</sub> (X + 1) &amp; Pop</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FYL2XP1.html">FYL2XP1</a></dd>
<dt>Category</dt>
<dd>x87fpu,trans</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: 1, group: x87fpu, type: -, address: -">ST1</span></i></b>,<i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></dd>
<dt>Opcode</dt>
<dd>0xD9F9</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3520.htm">t3520</a>
</dd>
</dl><pre>
IifFYL2XP1:: PROC
    MOV CL,0xF9
    JMP IifFNOP.op:
    RET
 ENDP IifFYL2XP1::
</pre>

<dl id="IifFSQRT">
<dt><a href="#IifFNOP">&uarr; FSQRT</a></dt>
<dd>FP Square Root</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FSQRT.html">FSQRT</a></dd>
<dt>Category</dt>
<dd>x87fpu,arith</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b></dd>
<dt>Opcode</dt>
<dd>0xD9FA</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3520.htm">t3520</a>
</dd>
</dl><pre>
IifFSQRT:: PROC
    MOV CL,0xFA
    JMP IifFNOP.op:
 ENDP IifFSQRT::
</pre>

<dl id="IifFSINCOS">
<dt><a href="#IifFNOP">&uarr; FSINCOS</a></dt>
<dd>FP Sine and Cosine</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FSINCOS.html">FSINCOS</a></dd>
<dt>Category</dt>
<dd>x87fpu,trans</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b></dd>
<dt>Opcode</dt>
<dd>0xD9FB</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.12.</b>, undefined:<b>0..3</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3520.htm">t3520</a>
</dd>
</dl><pre>
IifFSINCOS:: PROC
    MOV CL,0xFB
    JMP IifFNOP.op:
 ENDP IifFSINCOS::
</pre>

<dl id="IifFRNDINT">
<dt><a href="#IifFNOP">&uarr; FRNDINT</a></dt>
<dd>FP Round to Integer</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FRNDINT.html">FRNDINT</a></dd>
<dt>Category</dt>
<dd>x87fpu,arith</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b></dd>
<dt>Opcode</dt>
<dd>0xD9FC</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3520.htm">t3520</a>
</dd>
</dl><pre>
IifFRNDINT:: PROC
    MOV CL,0xFC
    JMP IifFNOP.op:
    ENDP IifFRNDINT::
</pre>

<dl id="IifFSCALE">
<dt><a href="#IifFNOP">&uarr; FSCALE</a></dt>
<dd>FP Scale</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FSCALE.html">FSCALE</a></dd>
<dt>Category</dt>
<dd>x87fpu,arith</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b>,<i><span title="nr: 1, group: x87fpu, type: -, address: -">ST1</span></i></dd>
<dt>Opcode</dt>
<dd>0xD9FD</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3520.htm">t3520</a>
</dd>
</dl><pre>
IifFSCALE:: PROC
    MOV CL,0xFD
    JMP IifFNOP.op:
 ENDP IifFSCALE::
</pre>

<dl id="IifFSIN">
<dt><a href="#IifFNOP">&uarr; FSIN</a></dt>
<dd>FP Sine</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FSIN.html">FSIN</a></dd>
<dt>Category</dt>
<dd>x87fpu,trans</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b></dd>
<dt>Opcode</dt>
<dd>0xD9FE</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.12.</b>, undefined:<b>0..3</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3520.htm">t3520</a>
</dd>
</dl><pre>
IifFSIN:: PROC
    MOV CL,0xFE
    JMP IifFNOP.op:
 ENDP IifFSIN::
</pre>

<dl id="IifFCOS">
<dt><a href="#IifFNOP">&uarr; FCOS</a></dt>
<dd>FP Cosine</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FCOS.html">FCOS</a></dd>
<dt>Category</dt>
<dd>x87fpu,trans</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b></dd>
<dt>Opcode</dt>
<dd>0xD9FF</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.12.</b>, undefined:<b>0..3</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3520.htm">t3520</a>
</dd>
</dl><pre>
IifFCOS:: PROC
    MOV CL,0xFF
    JMP IifFNOP.op:
 ENDP IifFCOS::
</pre>

<dl id="IifFRICHOP">
<dt><a href="#IifHandlers">&uarr; FRICHOP</a></dt>
<dd>&nbsp;</dd>
<dt>Operands</dt>
<dd>-</dd>
<dt>Opcode</dt>
<dd>0xDDFC</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3510.htm">t3510</a>
</dd>
</dl><pre>
IifFRICHOP:: PROC
    IiRequire FPU,CYRIX
    IiEmitOpcode 0xDD,0xFC
    IiDispatchFormat none
.none:RET    
    ENDP IifFRICHOP::
</pre>

<dl id="IifFRINT2">
<dt><a href="#IifHandlers">&uarr; FRINT2</a></dt>
<dd>&nbsp;</dd>
<dt>Operands</dt>
<dd>-</dd>
<dt>Opcode</dt>
<dd>0xDBFC</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3510.htm">t3510</a>
</dd>
</dl><pre>
IifFRINT2:: PROC
    IiRequire FPU,CYRIX
    IiEmitOpcode 0xDB,0xFC
    IiDispatchFormat none
.none:RET    
    ENDP IifFRINT2::
</pre>

<dl id="IifFRINEAR">
<dt><a href="#IifHandlers">&uarr; FRINEAR</a></dt>
<dd>&nbsp;</dd>
<dt>Operands</dt>
<dd>-</dd>
<dt>Opcode</dt>
<dd>0xDDFC</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3510.htm">t3510</a>
</dd>
</dl><pre>
IifFRINEAR:: PROC
    IiRequire FPU,CYRIX
    IiEmitOpcode 0xDF,0xFC
    IiDispatchFormat none
.none:RET    
    ENDP IifFRINEAR::
</pre>

<dl id="IifFLD">
<dt><a href="#IifHandlers">&uarr; FLD</a></dt>
<dd>Load Floating Point Value</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FLD.html">FLD</a></dd>
<dt>Category</dt>
<dd>x87fpu,datamov</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b>,ESsr | <b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b>,Mer | <b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b>,Mdr</dd>
<dt>Opcode</dt>
<dd>0xD9 ^mf /0 | 0xDB /5 | 0xDD ^Mf /0</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3585.htm">t3585</a>
</dd>
</dl><pre>
IifFLD:: PROC
     IiRequire 086,FPU
     IiOpEn M
     IiDataSize FloatingPoint=ON
     IiDispatchFormat m32,m64,m80,STi:,STi.m32,STi.m64,STi.m80,STi.STi
.STi:
.m32:IiEmitOpcode 0xD9
     IiModRM /0
     RET
.m64:IiEmitOpcode 0xDD
     IiModRM /0
     RET
.m80:IiEmitOpcode 0xDB
     IiModRM /5
     RET
.STi.STi:
.STi.m32:
     IiEmitOpcode 0xD9
 .d0:IiModRM /0
 .sw:IiAbortIfNot Operand1, ST0
     IiSwap Operand1,Operand2
     RET
.STi.m64:
     IiEmitOpcode 0xDD
     JMP .d0:
.STi.m80:
     IiEmitOpcode 0xDB
     IiModRM /5
     JMP .sw:
 ENDP IifFLD::
</pre>

<dl id="IifFXCH">
<dt><a href="#IifHandlers">&uarr; FXCH</a></dt>
<dd>Exchange FP Register contents</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FXCH.html">FXCH</a></dd>
<dt>Reference</dt>
<dd><table>
<tr><th>F<i>instr</i> ST0, STi</th><td>exchange ST0 with STi</td></tr>
<tr><th>F<i>instr</i> STi, ST0</th><td>exchange STi with ST0</td></tr>
<tr><th>F<i>instr</i> STi     </th><td>exchange STi with ST0</td></tr>
<tr><th>F<i>instr</i>         </th><td>exchange ST1 with ST0</td></tr>
</table></dd>
<dt>Category</dt>
<dd>x87fpu,datamov</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b>,<b>EST</b> | <b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b>,<b><i><span title="nr: 1, group: x87fpu, type: -, address: EST">ST1</span></i></b></dd>
<dt>Opcode</dt>
<dd>0xD9 ^mf /1 | 0xD9C9 /1</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3560.htm">t3560</a>
</dd>
</dl><pre>
IifFXCH:: PROC
     IiEmitOpcode 0xD9
.op: IiRequire 086,FPU
     IiOpEn M
     IiModRM /1
     IiDispatchFormat none,STi:,STi.STi
.STi.STi:
     IiAbortIfNotST0
     JC .STi: ; If Operand1 is not ST0.
     IiSwap Operand1,Operand2
.none:IiAssumeEmpty Operand1, ST1
.STi:RET
 ENDP IifFXCH::
</pre>

<dl id="IifFXCH4">
<dt><a href="#IifHandlers">&uarr; FXCH4</a></dt>
<dd>Exchange Register Contents (alias FXCH)</dd>
<dt>Category</dt>
<dd>x87fpu,datamov</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b>,<b>EST</b> | <b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b>,<b>EST</b></dd>
<dt>Opcode</dt>
<dd>0xDD /1 | 0xDD /1</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>CPU</dt>
<dd>00-02</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_FXCH4_DD_1_FXCH7_DF_1"><sup>14</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3560.htm">t3560</a>
</dd>
</dl><pre>
IifFXCH4:: PROC
    IiRequire UNDOC
    IiEmitOpcode 0xDD
    JMP IifFXCH.op:
 ENDP IifFXCH4::
</pre>

<dl id="IifFXCH7">
<dt><a href="#IifFXCH">&uarr; FXCH7</a></dt>
<dd>Exchange Register Contents (alias FXCH)</dd>
<dt>Category</dt>
<dd>x87fpu,datamov</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b>,<b>EST</b> | <b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b>,<b>EST</b></dd>
<dt>Opcode</dt>
<dd>0xDF /1 | 0xDF /1</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>CPU</dt>
<dd>00-02</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_FXCH4_DD_1_FXCH7_DF_1"><sup>14</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3560.htm">t3560</a>
</dd>
</dl><pre>
IifFXCH7:: PROC
    IiRequire UNDOC
    IiEmitOpcode 0xDF
    JMP IifFXCH.op:
 ENDP IifFXCH7::
</pre>

<dl id="IifFBLD">
<dt><a href="#IifHandlers">&uarr; FBLD</a></dt>
<dd>FP Load Binary Coded Decimal</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FBLD.html">FBLD</a></dd>
<dt>Category</dt>
<dd>x87fpu,datamov</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b>,Mbcd</dd>
<dt>Opcode</dt>
<dd>0xDF /4</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3595.htm">t3595</a>
</dd>
</dl><pre>
IifFBLD:: PROC
    IiRequire 086,FPU
    IiEmitOpcode 0xDF
    IiEncoding DATA=TBYTE
    IiOpEn M
    IiModRM /4
    IiDispatchFormat mem, STi.mem
.STi.mem:
    IiAbortIfNot Operand1, ST0
    IiSwap Operand1,Operand2
.mem:RET
 ENDP IifFBLD::
</pre>

<dl id="IifFBSTP">
<dt><a href="#IifHandlers">&uarr; FBSTP</a></dt>
<dd>FP Store to BCD Integer and Pop</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FBSTP.html">FBSTP</a></dd>
<dt>Category</dt>
<dd>x87fpu,datamov</dd>
<dt>Operands</dt>
<dd><b>Mbcd</b>,<i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></dd>
<dt>Opcode</dt>
<dd>0xDF /6</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3595.htm">t3595</a>
</dd>
</dl><pre>
IifFBSTP:: PROC
     IiRequire 086,FPU
     IiEmitOpcode 0xDF
     IiEncoding DATA=TBYTE
     IiOpEn M
     IiModRM /6
     IiDispatchFormat mem, mem.STi
.mem.STi:
     IiAbortIfNot Operand2, ST0
.mem:RET
 ENDP IifFBSTP::
</pre>

<dl id="IifFILD">
<dt><a href="#IifHandlers">&uarr; FILD</a></dt>
<dd>FP Load Integer</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FILD.html">FILD</a></dd>
<dt>Category</dt>
<dd>x87fpu,datamov</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b>,Mdi | <b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b>,Mwi | <b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b>,Mqi</dd>
<dt>Opcode</dt>
<dd>0xDB ^mF /0 | 0xDF ^MF /0 | 0xDF /5</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3585.htm">t3585</a>
</dd>
</dl><pre>
IifFILD:: PROC
     IiRequire 086,FPU
     IiDataSize FloatingPoint=ON
     IiOpEn M
     IiDispatchFormat m32, m16, m64, STi.m32, STi.m16, STi.m64
.m16:IiEmitOpcode 0xDF
.d0: IiModRM /0
     RET
.m32:IiEmitOpcode 0xDB
     JMP .d0:
.m64:IiEmitOpcode 0xDF
     IiModRM /5
     RET
.STi.m16:
     CALL .m16:
.sw: IiAbortIfNot Operand1, ST0
     IiSwap Operand1,Operand2
     RET
.STi.m32:
     CALL .m32:
     JMP .sw:
.STi.m64:
     CALL .m64:
     JMP .sw:
 ENDP IifFILD::
</pre>

<dl id="IifFISTTP">
<dt><a href="#IifHandlers">&uarr; FISTTP</a></dt>
<dd>FP Store Integer with Truncation and Pop</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FISTTP.html">FISTTP</a></dd>
<dt>Category</dt>
<dd>sse3,x87fpu,conver</dd>
<dt>Operands</dt>
<dd><b>Mdi</b>,<i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i> | <b>Mqi</b>,<i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i> | <b>Mwi</b>,<i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></dd>
<dt>Opcode</dt>
<dd>0xDB ^mF /1 | 0xDD /1 | 0xDF ^MF /1</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b>, values:<b>.0..</b></dd>
<dt>CPU</dt>
<dd>P4++</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3590.htm">t3590</a>
</dd>
</dl><pre>
IifFISTTP:: PROC
     IiRequire 086,FPU
     IiOpEn M
     IiModRM /1
     IiDataSize FloatingPoint=ON
     IiAssumeEmpty Operand2,ST0
     IiAbortIfNot  Operand2,ST0
     IiDispatchFormat m32,m16,m64, m32.STi, m16.STi, m64.STi
.m16.STi:
.m16:IiEmitOpcode 0xDF
     RET
.m32.STi:
.m32:IiEmitOpcode 0xDB
     RET
.m64.STi:
.m64:IiEmitOpcode 0xDD
     RET
 ENDP IifFISTTP::
</pre>

<dl id="IifFIST">
<dt><a href="#IifHandlers">&uarr; FIST</a></dt>
<dd>FP Store Integer</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FIST:FISTP.html">FIST</a></dd>
<dt>Category</dt>
<dd>x87fpu,datamov</dd>
<dt>Operands</dt>
<dd><b>Mdi</b>,<i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i> | <b>Mwi</b>,<i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></dd>
<dt>Opcode</dt>
<dd>0xDB ^mF /2 | 0xDF ^MF /2</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3590.htm">t3590</a>
</dd>
</dl><pre>
IifFIST:: PROC
     IiRequire 086,FPU
     IiOpEn M
     IiModRM /2
     IiDataSize FloatingPoint=ON
     IiAssumeEmpty Operand2,ST0
     IiAbortIfNot  Operand2,ST0
     IiDispatchFormat m32,m16, m32.STi, m16.STi
.m16.STi:
.m16:IiEmitOpcode 0xDF
     RET
.m32.STi:
.m32:IiEmitOpcode 0xDB
     RET
 ENDP IifFIST::
</pre>

<dl id="IifFISTP">
<dt><a href="#IifHandlers">&uarr; FISTP</a></dt>
<dd>FP Store Integer and Pop</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FIST:FISTP.html">FISTP</a></dd>
<dt>Category</dt>
<dd>x87fpu,datamov</dd>
<dt>Operands</dt>
<dd><b>Mdi</b>,<i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i> | <b>Mwi</b>,<i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i> | <b>Mqi</b>,<i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></dd>
<dt>Opcode</dt>
<dd>0xDB ^mF /3 | 0xDF ^MF /3 | 0xDF /7</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3590.htm">t3590</a>
</dd>
</dl><pre>
IifFISTP:: PROC
     IiRequire 086,FPU
     IiOpEn M
     IiDataSize FloatingPoint=ON
     IiAssumeEmpty Operand2,ST0
     IiAbortIfNot  Operand2,ST0
     IiDispatchFormat m32,m16,m64, m32.STi, m16.STi, m64.STi
.m16.STi:
.m16:IiEmitOpcode 0xDF
     IiModRM /3
     RET
.m32.STi:
.m32:IiEmitOpcode 0xDB
     IiModRM /3
     RET
.m64.STi:
.m64:IiEmitOpcode 0xDF
     IiModRM /7
     RET
 ENDP IifFISTP::
</pre>

<dl id="IifFST">
<dt><a href="#IifHandlers">&uarr; FST</a></dt>
<dd>Store Floating Point Value</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FST:FSTP.html">FST</a></dd>
<dt>Category</dt>
<dd>x87fpu,datamov</dd>
<dt>Operands</dt>
<dd><b>Msr</b>,<i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i> | <b>Mdr</b>,<i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i> | <b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b>,EST</dd>
<dt>Opcode</dt>
<dd>0xD9 ^mf /2 | 0xDD ^Mf /2 | 0xDD /2</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3540.htm">t3540</a>
</dd>
</dl><pre>
IifFST:: PROC
     IiRequire 086,FPU
     IiDataSize Operand1,FloatingPoint=ON
     IiAssumeEmpty Operand2, ST0 ; Two-operand version may have optional 2nd operand ST0.
     IiAbortIfNot  Operand2, ST0
     IiOpEn M
     IiModRM /2
     IiDispatchFormat STi:,m32,m64,STi.STi,m32.STi,m64.STi
.m32.STi:     
.m32:IiEmitOpcode 0xD9
     RET
.STi.STi:
.STi:     
.m64.STi:     
.m64:IiEmitOpcode 0xDD
     RET
   ENDP IifFST::
</pre>

<dl id="IifFSTP">
<dt><a href="#IifHandlers">&uarr; FSTP</a></dt>
<dd>Store Floating Point Value and Pop</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FST:FSTP.html">FSTP</a></dd>
<dt>Category</dt>
<dd>x87fpu,datamov</dd>
<dt>Operands</dt>
<dd><b>Msr</b>,<i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i> | <b>Mer</b>,<i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i> | <b>Mdr</b>,<i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i> | <b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b>,EST</dd>
<dt>Opcode</dt>
<dd>0xD9 ^mf /3 | 0xDB /7 | 0xDD ^Mf /3 | 0xDD /3</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3540.htm">t3540</a>
</dd>
</dl><pre>
IifFSTP:: PROC
     IiRequire 086,FPU
     IiDataSize Operand1,FloatingPoint=ON
     IiAssumeEmpty Operand2, ST0 ; Two-operand version may have optional 2nd operand ST0.
     IiAbortIfNot  Operand2, ST0
     IiOpEn M
     IiDispatchFormat STi:,m32,m64,m80,STi.STi,m32.STi,m64.STi,m80.STi
.STi.STi:
.STi:
.m64.STi:
.m64:IiEmitOpcode 0xDD
     IiModRM /3
     RET
.m32.STi:
.m32:IiEmitOpcode 0xD9
     IiModRM /3
     RET
.m80.STi:
.m80:IiEmitOpcode 0xDB
     IiModRM /7
     RET
   ENDP IifFSTP::
</pre>

<dl id="IifFSTP1">
<dt><a href="#IifHandlers">&uarr; FSTP1</a></dt>
<dd>Store Floating Point Value and Pop (alias FSTP)</dd>
<dt>Category</dt>
<dd>x87fpu,datamov</dd>
<dt>Operands</dt>
<dd><b>EST</b>,<i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i> | <b>EST</b>,<i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></dd>
<dt>Opcode</dt>
<dd>0xD9 /3 | 0xD9 /3</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>CPU</dt>
<dd>00-02</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_FSTP1_D9_3_FSTP8_DF_2_FSTP9_DF_3"><sup>8</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3540.htm">t3540</a>
</dd>
</dl><pre>
IifFSTP1:: PROC
    IiRequire FPU,UNDOC
    IiEmitOpcode 0xD9
    IiOpEn M
    IiModRM /3
    IiDispatchFormat STi 
.STi:RET
 ENDP IifFSTP1::
</pre>

<dl id="IifFSTP8">
<dt><a href="#IifHandlers">&uarr; FSTP8</a></dt>
<dd>Store Floating Point Value and Pop (alias FSTP)</dd>
<dt>Category</dt>
<dd>x87fpu,datamov</dd>
<dt>Operands</dt>
<dd><b>EST</b>,<i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i> | <b>EST</b>,<i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></dd>
<dt>Opcode</dt>
<dd>0xDF /2 | 0xDF /2</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>CPU</dt>
<dd>00-02</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_FSTP1_D9_3_FSTP8_DF_2_FSTP9_DF_3"><sup>8</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3540.htm">t3540</a>
</dd>
</dl><pre>
IifFSTP8:: PROC
    IiRequire FPU,UNDOC
    IiEmitOpcode 0xDF
    IiOpEn M
    IiModRM /2
    IiDispatchFormat STi 
.STi:RET
 ENDP IifFSTP8::
</pre>

<dl id="IifFSTP9">
<dt><a href="#IifHandlers">&uarr; FSTP9</a></dt>
<dd>Store Floating Point Value and Pop (alias FSTP)</dd>
<dt>Category</dt>
<dd>x87fpu,datamov</dd>
<dt>Operands</dt>
<dd><b>EST</b>,<i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i> | <b>EST</b>,<i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></dd>
<dt>Opcode</dt>
<dd>0xDF /3 | 0xDF /3</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>.1..</b>, undefined:<b>0.23</b></dd>
<dt>CPU</dt>
<dd>00-02</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_FSTP1_D9_3_FSTP8_DF_2_FSTP9_DF_3"><sup>8</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3540.htm">t3540</a>
</dd>
</dl><pre>
IifFSTP9:: PROC
    IiRequire FPU,UNDOC
    IiEmitOpcode 0xDF
    IiOpEn M
    IiModRM /3
    IiDispatchFormat STi 
.STi:RET
 ENDP IifFSTP9::
</pre>

<dl id="IifFUCOM">
<dt><a href="#IifHandlers">&uarr; FUCOM</a></dt>
<dd>Unordered Compare Floating Point Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FUCOM:FUCOMP:FUCOMPP.html">FUCOM</a></dd>
<dt>Reference</dt>
<dd><table>
<tr><th>FCOM ST0, STi</th><td>compare ST0 with STi</td></tr>
<tr><th>FCOM      STi</th><td>compare ST0 with STi</td></tr>
<tr><th>FCOM         </th><td>compare ST0 with ST1</td></tr>
</table></dd>
<dt>Category</dt>
<dd>x87fpu,compar</dd>
<dt>Operands</dt>
<dd><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i>,EST | <i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i>,<i><span title="nr: 1, group: x87fpu, type: -, address: EST">ST1</span></i></dd>
<dt>Opcode</dt>
<dd>0xDD /4 | 0xDDE1 /4</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>0123</b></dd>
<dt>CPU</dt>
<dd>03+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3535.htm">t3535</a>
</dd>
</dl><pre>
IifFUCOM:: PROC
    IiModRM /4
.rm:IiRequire 386,FPU
    IiEmitOpcode 0xDD
    IiOpEn M
    IiDispatchFormat none,STi:,STi.STi
.STi.STi:
    IiAbortIfNot Operand1, ST0
    IiSwap Operand1,Operand2
.none:IiAssumeEmpty Operand1, ST1
.STi:RET
 ENDP IifFUCOM::
</pre>

<dl id="IifFUCOMP">
<dt><a href="#IifFUCOM">&uarr; FUCOMP</a></dt>
<dd>Unordered Compare Floating Point Values and Pop</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FUCOM:FUCOMP:FUCOMPP.html">FUCOMP</a></dd>
<dt>Reference</dt>
<dd><table>
<tr><th>FUCOMP ST0, STi</th><td>compare ST0 with STi</td></tr>
<tr><th>FUCOMP      STi</th><td>compare ST0 with STi</td></tr>
<tr><th>FUCOMP         </th><td>compare ST0 with ST1</td></tr>
</table></dd>
<dt>Category</dt>
<dd>x87fpu,compar</dd>
<dt>Operands</dt>
<dd><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i>,EST | <i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i>,<i><span title="nr: 1, group: x87fpu, type: -, address: EST">ST1</span></i></dd>
<dt>Opcode</dt>
<dd>0xDD /5 | 0xDDE9 /5</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>0123</b></dd>
<dt>CPU</dt>
<dd>03+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3535.htm">t3535</a>
</dd>
</dl><pre>
IifFUCOMP:: PROC
    IiModRM /5
    JMP IifFUCOM.rm:
 ENDP IifFUCOMP::
</pre>

<dl id="IifFUCOMPP">
<dt><a href="#IifHandlers">&uarr; FUCOMPP</a></dt>
<dd>Unordered Compare Floating Point Values ST0,ST1 and Pop Twice</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FUCOM:FUCOMP:FUCOMPP.html">FUCOMPP</a></dd>
<dt>Reference</dt>
<dd><table>
<tr><th>FCOMPP ST0, ST1</th><td>compare ST0 with ST1</td></tr>
<tr><th>FCOMPP      ST1</th><td>compare ST0 with ST1</td></tr>
<tr><th>FCOMPP         </th><td>compare ST0 with ST1</td></tr>
</table></dd>
<dt>Category</dt>
<dd>x87fpu,compar</dd>
<dt>Operands</dt>
<dd><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i>,<i><span title="nr: 1, group: x87fpu, type: -, address: -">ST1</span></i></dd>
<dt>Opcode</dt>
<dd>0xDAE9 /5</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>0123</b></dd>
<dt>CPU</dt>
<dd>03+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3535.htm">t3535</a>
</dd>
</dl><pre>
IifFUCOMPP:: PROC
    IiEmitOpcode 0xDA,0xE9
.op:IiRequire 386,FPU
    IiDispatchFormat none,STi:,STi.STi
.STi:IiAbortIfNot Operand1, ST1
.none:RET
.STi.STi:
    IiAbortIfNot Operand2, ST1
    IiAbortIfNot Operand1, ST0
    RET
 ENDP IifFUCOMPP::
</pre>

<dl id="IifFCOMPP">
<dt><a href="#IifFUCOMPP">&uarr; FCOMPP</a></dt>
<dd>Compare Floating Point Values ST0,ST1 and Pop Twice</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FCOM:FCOMP:FCOMPP.html">FCOMPP</a></dd>
<dt>Reference</dt>
<dd><table>
<tr><th>FCOMPP ST0, ST1</th><td>compare ST0 with ST1</td></tr>
<tr><th>FCOMPP      ST1</th><td>compare ST0 with ST1</td></tr>
<tr><th>FCOMPP         </th><td>compare ST0 with ST1</td></tr>
</table></dd>
<dt>Category</dt>
<dd>x87fpu,compar</dd>
<dt>Operands</dt>
<dd><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i>,<i><span title="nr: 1, group: x87fpu, type: -, address: -">ST1</span></i></dd>
<dt>Opcode</dt>
<dd>0xDED9 /3</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>0123</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3535.htm">t3535</a>
</dd>
</dl><pre>
IifFCOMPP:: PROC
    IiEmitOpcode 0xDE,0xD9
    JMP IifFUCOMPP.op:
 ENDP IifFCOMPP::
</pre>

<dl id="IifFFREE">
<dt><a href="#IifHandlers">&uarr; FFREE</a></dt>
<dd>Free Floating-Point Register</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FFREE.html">FFREE</a></dd>
<dt>Category</dt>
<dd>x87fpu,control</dd>
<dt>Operands</dt>
<dd>EST</dd>
<dt>Opcode</dt>
<dd>0xDD /0</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, undefined:<b>0123</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3500.htm">t3500</a>
</dd>
</dl><pre>
IifFFREE:: PROC
     IiRequire 086,FPU
     IiEmitOpcode 0xDD
.op: IiOpEn M
     IiModRM /0
     IiDispatchFormat STi:
.STi:RET
 ENDP IifFFREE::
</pre>

<dl id="IifFFREEP">
<dt><a href="#IifFFREE">&uarr; FFREEP</a></dt>
<dd>Free Floating-Point Register and pop (undocumented by Intel)</dd>
<dt>Opcode</dt>
<dd>0xDF /0</dd>
<dt>CPU</dt>
<dd>AMD, Geode</dd>
<dt>Documented</dt>
<dd><a href="https://gcc.gnu.org/bugzilla/show_bug.cgi?id=37179">gcc</a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3500.htm">t3500</a>
</dd>
</dl><pre>
IifFFREEP:: PROC
    IiRequire 586,FPU,UNDOC
    IiEmitOpcode 0xDF
    JMP IifFFREE.op:
 ENDP IifFFREEP::
</pre>

<dl id="IifFLDENV">
<dt><a href="#IifHandlers">&uarr; FLDENV</a></dt>
<dd>Load x87 FPU Environment</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FLDENV.html">FLDENV</a></dd>
<dt>Category</dt>
<dd>x87fpu,control</dd>
<dt>Operands</dt>
<dd>Me</dd>
<dt>Opcode</dt>
<dd>0xD9 /4</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>0123</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3565.htm">t3565</a>
</dd>
</dl><pre>
IifFLDENV:: PROC
     IiRequire 086,FPU
     IiEmitOpcode 0xD9
     IiOpEn M
     IiModRM /4
     IiDispatchFormat mem
.mem:RET
 ENDP IifFLDENV::
</pre>

<dl id="IifFLDCW">
<dt><a href="#IifHandlers">&uarr; FLDCW</a></dt>
<dd>Load x87 FPU Control Word</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FLDCW.html">FLDCW</a></dd>
<dt>Category</dt>
<dd>x87fpu,control</dd>
<dt>Operands</dt>
<dd>Mw</dd>
<dt>Opcode</dt>
<dd>0xD9 /5</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, undefined:<b>0123</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3565.htm">t3565</a>
</dd>
</dl><pre>
IifFLDCW:: PROC
     IiRequire 086,FPU
     IiEmitOpcode 0xD9
     IiEncoding DATA=WORD
     IiOpEn M
     IiModRM /5
     IiDispatchFormat mem
.mem:RET
 ENDP IifFLDCW::
</pre>

<h3 id="IifFNSTENV"><a href="#IifHandlers">&uarr; FNSTENV
</a>Nowait STore FPU ENVironment</h3><pre>
IifFNSTENV:: PROC
     IiRequire 086,FPU
     IiEmitOpcode 0xD9
     IiOpEn M
     IiModRM /6
     IiDispatchFormat mem
.mem:RET
 ENDP IifFNSTENV::
</pre>

<dl id="IifFSTENV">
<dt><a href="#IifFSTENV">&uarr; FSTENV</a></dt>
<dd>Store FPU Environment</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FSTENV:FNSTENV.html">FSTENV</a></dd>
<dt>Category</dt>
<dd>x87fpu,control</dd>
<dt>Operands</dt>
<dd><b>Me</b></dd>
<dt>Opcode</dt>
<dd>0x9BD9 /6</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, undefined:<b>0123</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3565.htm">t3565</a>
</dd>
</dl><pre>
IifFSTENV:: PROC
    IiEmitOpcode 0x9B
    JMP IifFNSTENV
 ENDP IifFSTENV::
</pre>

<dl id="IifFNSTCW">
<dt><a href="#IifHandlers">&uarr; FNSTCW</a></dt>
<dd>Nowait Store FPU Control Word</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FSTCW:FNSTCW.html">FNSTCW</a></dd>
<dt>Category</dt>
<dd>x87fpu,control</dd>
<dt>Operands</dt>
<dd><b>Mw</b></dd>
<dt>Opcode</dt>
<dd>0xD9 /7</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, undefined:<b>0123</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3565.htm">t3565</a>
</dd>
</dl><pre>
IifFNSTCW:: PROC
     IiRequire 086,FPU
     IiEmitOpcode 0xD9
     IiEncoding DATA=WORD
     IiOpEn M
     IiModRM /7
     IiDispatchFormat mem
.mem:RET
 ENDP IifFNSTCW::
</pre>

<dl id="IifFSTCW">
<dt><a href="#IifHandlers">&uarr; FSTCW</a></dt>
<dd>Store x87 FPU Control Word</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FSTCW:FNSTCW.html">FSTCW</a></dd>
<dt>Category</dt>
<dd>x87fpu,control</dd>
<dt>Operands</dt>
<dd><b>Mw</b></dd>
<dt>Opcode</dt>
<dd>0x9BD9 /7</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, undefined:<b>0123</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3565.htm">t3565</a>
</dd>
</dl><pre>
IifFSTCW:: PROC
    IiEmitOpcode 0x9B
    JMP IifFNSTCW
 ENDP IifFSTCW::
</pre>

<dl id="IifFNSTSW">
<dt><a href="#IifHandlers">&uarr; FNSTSW</a></dt>
<dd>Nowait Store FPU Status Word</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FSTSW:FNSTSW.html">FNSTSW</a></dd>
<dt>Category</dt>
<dd>x87fpu,control</dd>
<dt>Operands</dt>
<dd><b>Mw</b> | <b><span title="nr: 0, group: gen, type: w, address: -">AX</span></b></dd>
<dt>Opcode</dt>
<dd>0xDD /7 | 0xDFE0 /4</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, undefined:<b>0123</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3565.htm">t3565</a>
</dd>
</dl><pre>
IifFNSTSW:: PROC
    IiRequire 086,FPU
    IiEncoding DATA=WORD
    IiDispatchFormat mem,r16
.r16:IiAbortIfNot Operand1,AX
    IiEmitOpcode 0xDF,0xE0
    IiRequire 286
    RET
.mem:IiEmitOpcode 0xDD
    IiOpEn M
    IiModRM /7
    RET
 ENDP IifFNSTSW::
</pre>

<dl id="IifFSTSW">
<dt><a href="#IifFNSTSW">&uarr; FSTSW</a></dt>
<dd>Store FPU Status Word</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FSTSW:FNSTSW.html">FSTSW</a></dd>
<dt>Category</dt>
<dd>x87fpu,control</dd>
<dt>Operands</dt>
<dd><b>Mw</b> | <b><span title="nr: 0, group: gen, type: w, address: -">AX</span></b></dd>
<dt>Opcode</dt>
<dd>0x9BDD /7 | 0x9BDFE0 /4</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, undefined:<b>0123</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3565.htm">t3565</a>
</dd>
</dl><pre>
IifFSTSW:: PROC
    IiEmitOpcode 0x9B
    JMP IifFNSTSW
 ENDP IifFSTSW::
</pre>

<dl id="IifFSTSG">
<dt><a href="#IifHandlers">&uarr; FSTSG</a></dt>
<dd>?</dd>
<dt>Operands</dt>
<dd>AX</dd>
<dt>Opcode</dt>
<dd>0xDFE2</dd>
<dt>CPU</dt>
<dd>80387SL</dd>
<dt>Documented</dt>
<dd>sandpile</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3565.htm">t3565</a>
</dd>
</dl><pre>
IifFSTSG:: PROC
    IiRequire 386,FPU,UNDOC
    IiEmitOpcode 0xDF,0xE2
    IiAbortIfNot Operand1, AX
    IiDispatchFormat r16 
.r16:RET
 ENDP IifFSTSG::
</pre>

<dl id="IifFSTDW">
<dt><a href="#IifHandlers">&uarr; FSTDW</a></dt>
<dd>?</dd>
<dt>Operands</dt>
<dd>AX</dd>
<dt>Opcode</dt>
<dd>0xDFE1</dd>
<dt>CPU</dt>
<dd>80387SL</dd>
<dt>Documented</dt>
<dd>sandpile</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3565.htm">t3565</a>
</dd>
</dl><pre>
IifFSTDW:: PROC
    IiRequire 386,FPU,UNDOC
    IiEmitOpcode 0xDF,0xE1
    IiAbortIfNot Operand1, AX
    IiDispatchFormat r16 
.r16:RET
 ENDP IifFSTDW::
</pre>

<dl id="IifFNENI">
<dt><a href="#IifHandlers">&uarr; FNENI</a></dt>
<dd>Nowait Enable NPX Interrupt</dd>
<dt>Category</dt>
<dd>x87fpu,control</dd>
<dt>Opcode</dt>
<dd>0xDBE0 /4</dd>
<dt>CPU</dt>
<dd>00</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3505.htm">t3505</a>
</dd>
</dl><pre>
IifFNENI:: PROC
    IiRequire 086,FPU
    IiEmitOpcode 0xDB,0xE0
    IiDispatchFormat none
.none:RET
 ENDP IifFNENI::
</pre>

<dl id="IifFENI">
<dt><a href="#IifFNENI">&uarr; FENI</a></dt>
<dd>Enable NPX Interrupt</dd>
<dt>Category</dt>
<dd>x87fpu,control</dd>
<dt>Opcode</dt>
<dd>0x9BDBE0 /4</dd>
<dt>CPU</dt>
<dd>00</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3505.htm">t3505</a>
</dd>
</dl><pre>
IifFENI:: PROC
    IiEmitOpcode 0x9B
    JMP IifFNENI:
 ENDP IifFENI::
</pre>

<dl id="IifFNDISI">
<dt><a href="#IifHandlers">&uarr; FNDISI</a></dt>
<dd>Nowait Disable NPX Interrupt</dd>
<dt>Category</dt>
<dd>x87fpu,control</dd>
<dt>Opcode</dt>
<dd>0xDBE1 /4</dd>
<dt>CPU</dt>
<dd>00</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3505.htm">t3505</a>
</dd>
</dl><pre>
IifFNDISI:: PROC
    IiRequire 086,FPU
    IiEmitOpcode 0xDB,0xE1
    IiDispatchFormat none
.none:RET
 ENDP IifFNDISI::
</pre>

<dl id="IifFDISI">
<dt><a href="#IifFNDISI">&uarr; FDISI</a></dt>
<dd>Disable NPX Interrupt</dd>
<dt>Category</dt>
<dd>x87fpu,control</dd>
<dt>Opcode</dt>
<dd>0x9BDBE1 /4</dd>
<dt>CPU</dt>
<dd>00</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3505.htm">t3505</a>
</dd>
</dl><pre>
IifFDISI:: PROC
    IiEmitOpcode 0x9B
    JMP IifFNDISI:
 ENDP IifFDISI::
</pre>

<dl id="IifFNCLEX">
<dt><a href="#IifHandlers">&uarr; FNCLEX</a></dt>
<dd>Nowait Clear Exceptions</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FCLEX:FNCLEX.html">FNCLEX</a></dd>
<dt>Category</dt>
<dd>x87fpu,control</dd>
<dt>Opcode</dt>
<dd>0xDBE2 /4</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, undefined:<b>0123</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3505.htm">t3505</a>
</dd>
</dl><pre>
IifFNCLEX:: PROC
    IiRequire 086,FPU
    IiEmitOpcode 0xDB,0xE2
    IiDispatchFormat none
.none:RET
 ENDP IifFNCLEX::
</pre>

<dl id="IifFCLEX">
<dt><a href="#IifFNCLEX">&uarr; FCLEX</a></dt>
<dd>Clear Exceptions</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FCLEX:FNCLEX.html">FCLEX</a></dd>
<dt>Category</dt>
<dd>x87fpu,control</dd>
<dt>Opcode</dt>
<dd>0x9BDBE2 /4</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, undefined:<b>0123</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3505.htm">t3505</a>
</dd>
</dl><pre>
IifFCLEX:: PROC
    IiEmitOpcode 0x9B
    JMP IifFNCLEX:
 ENDP IifFCLEX::
</pre>

<dl id="IifFNINIT">
<dt><a href="#IifHandlers">&uarr; FNINIT</a></dt>
<dd>Initialize Floating-Point Unit</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FINIT:FNINIT.html">FNINIT</a></dd>
<dt>Category</dt>
<dd>x87fpu,control</dd>
<dt>Opcode</dt>
<dd>0xDBE3 /4</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, values:<b>0000</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3505.htm">t3505</a>
</dd>
</dl><pre>
IifFNINIT:: PROC
    IiRequire 086,FPU
    IiEmitOpcode 0xDB,0xE3
    IiDispatchFormat none
.none:RET
 ENDP IifFNINIT::
</pre>

<dl id="IifFINIT">
<dt><a href="#IifFNINIT">&uarr; FINIT</a></dt>
<dd>Initialize Floating-Point Unit</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FINIT:FNINIT.html">FINIT</a></dd>
<dt>Category</dt>
<dd>x87fpu,control</dd>
<dt>Opcode</dt>
<dd>0x9BDBE3 /4</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, values:<b>0000</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3505.htm">t3505</a>
</dd>
</dl><pre>
IifFINIT:: PROC
    IiEmitOpcode 0x9B
    JMP IifFNINIT:
 ENDP IifFINIT::
</pre>

<dl id="IifFNSETPM">
<dt><a href="#IifHandlers">&uarr; FNSETPM</a></dt>
<dd>Nowait Set Protected Mode</dd>
<dt>Category</dt>
<dd>x87fpu,control</dd>
<dt>Opcode</dt>
<dd>0xDBE4 /4</dd>
<dt>CPU</dt>
<dd>80287</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3505.htm">t3505</a>
</dd>
</dl><pre>
IifFNSETPM:: PROC
    IiRequire 286,FPU,UNDOC
    IiEmitOpcode 0xDB,0xE4
    IiDispatchFormat none
.none:RET
  ENDP IifFNSETPM::
</pre>

<dl id="IifFSETPM">
<dt><a href="#IifFNSETPM">&uarr; FSETPM</a></dt>
<dd>Set Protected Mode</dd>
<dt>Category</dt>
<dd>x87fpu,control</dd>
<dt>Opcode</dt>
<dd>0x9BDBE4 /4</dd>
<dt>CPU</dt>
<dd>02</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3505.htm">t3505</a>
</dd>
</dl><pre>
IifFSETPM:: PROC
    IiEmitOpcode 0x9B
    JMP IifFNSETPM:
  ENDP IifFSETPM::
</pre>

<dl id="IifFRSTPM">
<dt><a href="#IifHandlers">&uarr; FRSTPM</a></dt>
<dd>FPU reset to real mode</dd>
<dt>Opcode</dt>
<dd>0xDBE5 | 0xDBF4</dd>
<dt>CPU</dt>
<dd>80287XL</dd>
<dt>Documented</dt>
<dd><a class="EXT" href="https://sites.google.com/site/pcdosretro/80x86ref">PCDOSRETRO</a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3505.htm">t3505</a>
</dd>
</dl><pre>
IifFRSTPM:: PROC
    IiRequire FPU,PROT,UNDOC
    IiAllowModifier CODE
    IiEmitOpcode 0xDB
    IiDispatchFormat none 
.none:
    IiDispatchCode LONG=.L:
    IiEncoding CODE=SHORT
    IiEmitOpcode 0xE5
    RET
.L: IiEncoding CODE=LONG
    IiEmitOpcode 0xF4
    RET     
 ENDP IifFRSTPM::
</pre>

<dl id="IifFWAIT">
<dt><a href="#IifHandlers">&uarr; FWAIT</a></dt>
<dd>Check pending unmasked floating-point exceptions</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/WAIT:FWAIT.html">FWAIT</a></dd>
<dt>Category</dt>
<dd>x87fpu,control</dd>
<dt>Opcode</dt>
<dd>0x9B</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, undefined:<b>0123</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3500.htm">t3500</a>
</dd>
</dl><pre>
IifFWAIT:: PROC
    IiRequire 086,FPU
    IiEmitOpcode 0x9B
    IiDispatchFormat none
.none:RET
 ENDP IifFWAIT::
</pre>

<dl id="IifWAIT">
<dt><a href="#IifFWAIT">&uarr; WAIT</a></dt>
<dd>Check pending unmasked floating-point exceptions</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/WAIT:FWAIT.html">WAIT</a></dd>
<dt>Comment</dt>
<dd>Alias to FWAIT</dd>
<dt>Category</dt>
<dd>x87fpu,control</dd>
<dt>Opcode</dt>
<dd>0x9B</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, undefined:<b>0123</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3500.htm">t3500</a>
</dd>
</dl><pre>
IifWAIT:: PROC
     JMP IifFWAIT
 ENDP IifWAIT::
</pre>

<dl id="IifFNSAVE">
<dt><a href="#IifHandlers">&uarr; FNSAVE</a></dt>
<dd>Nowait Store x87 FPU State, nowait</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FSAVE:FNSAVE.html">FNSAVE</a></dd>
<dt>Category</dt>
<dd>x87fpu,control</dd>
<dt>Opcode</dt>
<dd>0xDD /6</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>0123</b>, values:<b>0000</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3570.htm">t3570</a>
</dd>
</dl><pre>
IifFNSAVE:: PROC
    IiRequire 086,FPU
    IiEmitOpcode 0xDD
    IiOpEn M
    IiModRM /6
    IiDispatchFormat mem
.mem:RET
 ENDP IifFNSAVE::
</pre>

<dl id="IifFSAVE">
<dt><a href="#IifFNSAVE">&uarr; FSAVE</a></dt>
<dd>Store x87 FPU State</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FSAVE:FNSAVE.html">FSAVE</a></dd>
<dt>Category</dt>
<dd>x87fpu,control</dd>
<dt>Operands</dt>
<dd><b>Mst</b></dd>
<dt>Opcode</dt>
<dd>0x9BDD /6</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>0123</b>, values:<b>0000</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3570.htm">t3570</a>
</dd>
</dl>
<pre>
IifFSAVE:: PROC
    IiEmitOpcode 0x9B
    JMP IifFNSAVE
 ENDP IifFSAVE::
</pre>

<dl id="IifFRSTOR">
<dt><a href="#IifHandlers">&uarr; FRSTOR</a></dt>
<dd>Restore x87 FPU State</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FRSTOR.html">FRSTOR</a></dd>
<dt>Category</dt>
<dd>x87fpu,control</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b>,<b><i><span title="nr: 1, group: x87fpu, type: -, address: -">ST1</span></i></b>,<b><i><span title="nr: 2, group: x87fpu, type: -, address: -">ST2</span></i></b>,<span title="dst: ST dst: ST1 dst: ST2 dst: ST3 dst: ST4 dst: ST5 dst: ST6 dst: ST7 src: Mst ">...</span></dd>
<dt>Opcode</dt>
<dd>0xDD /4</dd>
<dt>Flags</dt>
<dd>modified:<b>0123</b>, defined:<b>0123</b></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3570.htm">t3570</a>
</dd>
</dl><pre>
IifFRSTOR:: PROC
    IiRequire 086,FPU
    IiEmitOpcode 0xDD
    IiOpEn M
    IiModRM /4
    IiDispatchFormat mem
.mem:RET
 ENDP IifFRSTOR::
</pre>

<dl id="IifFXSAVE">
<dt><a href="#IifHandlers">&uarr; FXSAVE</a></dt>
<dd>Save x87 FPU, MMX, XMM, and MXCSR State</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FXSAVE.html">FXSAVE</a></dd>
<dt>Category</dt>
<dd>sm</dd>
<dt>Operands</dt>
<dd><b>Mstx</b>,<i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i>,<i><span title="nr: 1, group: x87fpu, type: -, address: -">ST1</span></i>,<span title="dst: Mstx src: ST src: ST1 src: ST2 src: ST3 src: ST4 src: ST5 src: ST6 src: ST7 src: MMX0 src: MMX1 src: MMX2 src: MMX3 src: MMX4 src: MMX5 src: MMX6 src: MMX7 src: XMM0 src: XMM1 src: XMM2 src: XMM3 src: XMM4 src: XMM5 src: XMM6 src: XMM7 ">...</span> | <b>Mstx</b>,<i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i>,<i><span title="nr: 1, group: x87fpu, type: -, address: -">ST1</span></i>,<span title="dst: Mstx src: ST src: ST1 src: ST2 src: ST3 src: ST4 src: ST5 src: ST6 src: ST7 src: MMX0 src: MMX1 src: MMX2 src: MMX3 src: MMX4 src: MMX5 src: MMX6 src: MMX7 src: XMM0 src: XMM1 src: XMM2 src: XMM3 src: XMM4 src: XMM5 src: XMM6 src: XMM7 src: XMM8 src: XMM9 src: XMM10 src: XMM11 src: XMM12 src: XMM13 src: XMM14 src: XMM15 ">...</span></dd>
<dt>Opcode</dt>
<dd>0x0FAE /0 | 0x0FAE /0</dd>
<dt>CPU</dt>
<dd>P2++</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3570.htm">t3570</a>
</dd>
</dl><pre>
IifFXSAVE:: PROC
    IiRequire 686,FPU,MMX,SSE1
    IiEmitOpcode 0x0F,0xAE
    IiOpEn M
    IiModRM /0
    IiDispatchFormat mem
.mem:RET
 ENDP IifFXSAVE::
</pre>

<dl id="IifFXSAVE64">
<dt><a href="#IifFXSAVE">&uarr; FXSAVE64</a></dt>
<dd>Fp SAVE x87 &amp; mmx &amp; Xmm state in 64bit mode</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3570.htm">t3570</a>
</dd>
</dl><pre>
IifFXSAVE64:: PROC
    IiRequire X64
    IiEmitPrefix REX.W
    JMP IifFXSAVE
    RET
 ENDP IifFXSAVE64::
</pre>

<dl id="IifFXRSTOR">
<dt><a href="#IifHandlers">&uarr; FXRSTOR</a></dt>
<dd>Restore x87 FPU, MMX, XMM, and MXCSR State</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/FXRSTOR.html">FXRSTOR</a></dd>
<dt>Category</dt>
<dd>sm</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b>,<b><i><span title="nr: 1, group: x87fpu, type: -, address: -">ST1</span></i></b>,<b><i><span title="nr: 2, group: x87fpu, type: -, address: -">ST2</span></i></b>,<span title="dst: ST dst: ST1 dst: ST2 dst: ST3 dst: ST4 dst: ST5 dst: ST6 dst: ST7 dst: MMX0 dst: MMX1 dst: MMX2 dst: MMX3 dst: MMX4 dst: MMX5 dst: MMX6 dst: MMX7 dst: XMM0 dst: XMM1 dst: XMM2 dst: XMM3 dst: XMM4 dst: XMM5 dst: XMM6 dst: XMM7 src: Mstx ">...</span> | <b><i><span title="nr: 0, group: x87fpu, type: -, address: -">ST</span></i></b>,<b><i><span title="nr: 1, group: x87fpu, type: -, address: -">ST1</span></i></b>,<b><i><span title="nr: 2, group: x87fpu, type: -, address: -">ST2</span></i></b>,<span title="dst: ST dst: ST1 dst: ST2 dst: ST3 dst: ST4 dst: ST5 dst: ST6 dst: ST7 dst: MMX0 dst: MMX1 dst: MMX2 dst: MMX3 dst: MMX4 dst: MMX5 dst: MMX6 dst: MMX7 dst: XMM0 dst: XMM1 dst: XMM2 dst: XMM3 dst: XMM4 dst: XMM5 dst: XMM6 dst: XMM7 dst: XMM8 dst: XMM9 dst: XMM10 dst: XMM11 dst: XMM12 dst: XMM13 dst: XMM14 dst: XMM15 src: Mstx ">...</span></dd>
<dt>Opcode</dt>
<dd>0x0FAE /1 | 0x0FAE /1</dd>
<dt>CPU</dt>
<dd>P2++</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3570.htm">t3570</a>
</dd>
</dl><pre>
IifFXRSTOR:: PROC
    IiRequire 686,FPU,MMX,SSE1
    IiEmitOpcode 0x0F,0xAE
    IiOpEn M
    IiModRM /1
    IiDispatchFormat mem
.mem:RET
 ENDP IifFXRSTOR::
</pre>

<dl id="IifFXRSTOR64">
<dt><a href="#IifFXRSTOR">&uarr; FXRSTOR64</a></dt>
<dd>Fp ReSTORe x87 &amp; mmx &amp; Xmm state in64bit mode</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3570.htm">t3570</a>
</dd>
</dl><pre>
IifFXRSTOR64:: PROC
    IiRequire X64
    IiEmitPrefix REX.W
    JMP IifFXRSTOR
   ENDP IifFXRSTOR64::
</pre>

<dl id="IifFMUL4X4">
<dt><a href="#IifHandlers">&uarr; FMUL4X4</a></dt>
<dd>FP multiply 4x4 matrix</dd>
<dt>Opcode</dt>
<dd>0xDBF1</dd>
<dt>CPU</dt>
<dd>IIT only</dd>
<dt>Documented</dt>
<dd><a class="EXTW" href="https://textfiles.meulie.net/computers/86bugs.lst">86BUGS.LST</a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3575.htm">t3575</a>
</dd>
</dl><pre>
IifFMUL4X4:: PROC
    MOV CL,0xF1
.op:IiRequire FPU,UNDOC
    IiEmitOpcode 0xDB,ECX
    IiDispatchFormat none 
.none:RET    
 ENDP IifFMUL4X4::
</pre>

<dl id="IifF4X4">
<dt><a href="#IifFMUL4X4">&uarr; F4X4</a></dt>
<dd>Alias to FMUL4X4</dd>
<dt>Operands</dt>
<dd>-</dd>
<dt>Opcode</dt>
<dd>0xDBF1</dd>
<dt>CPU</dt>
<dd>IIT only</dd>
<dt>Documented</dt>
<dd>sandpile</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3575.htm">t3575</a>
</dd>
</dl><pre>
IifF4X4:: PROC
    JMP IifFMUL4X4:
 ENDP IifF4X4::
</pre>

<dl id="IifFSBP0">
<dt><a href="#IifFMUL4X4">&uarr; FSBP0</a></dt>
<dd>Select Bank 0 for FMUL4X4</dd>
<dt>Opcode</dt>
<dd>0xDBE8</dd>
<dt>CPU</dt>
<dd>IIT only</dd>
<dt>Documented</dt>
<dd><a class="EXTW" href="https://textfiles.meulie.net/computers/86bugs.lst">86BUGS.LST</a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3575.htm">t3575</a>
</dd>
</dl><pre>
IifFSBP0:: PROC
    MOV CL,0xE8
    JMP IifFMUL4X4.op:
 ENDP IifFSBP0::
</pre>

<dl id="IifFSBP1">
<dt><a href="#IifFMUL4X4">&uarr; FSBP1</a></dt>
<dd>Select Bank 1 for FMUL4X4</dd>
<dt>Operands</dt>
<dd>-</dd>
<dt>Opcode</dt>
<dd>0xDBEB</dd>
<dt>CPU</dt>
<dd>IIT only</dd>
<dt>Documented</dt>
<dd><a class="EXTW" href="https://textfiles.meulie.net/computers/86bugs.lst">86BUGS.LST</a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3575.htm">t3575</a>
</dd>
</dl><pre>
IifFSBP1:: PROC
    MOV CL,0xEB
    JMP IifFMUL4X4.op:
 ENDP IifFSBP1::
</pre>

<dl id="IifFSBP2">
<dt><a href="#IifFMUL4X4">&uarr; FSBP2</a></dt>
<dd>Select Bank 2 for FMUL4X4</dd>
<dt>Operands</dt>
<dd>-</dd>
<dt>Opcode</dt>
<dd>0xDBEA</dd>
<dt>CPU</dt>
<dd>IIT only</dd>
<dt>Documented</dt>
<dd><a class="EXTW" href="https://textfiles.meulie.net/computers/86bugs.lst">86BUGS.LST</a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3575.htm">t3575</a>
</dd>
</dl><pre>
IifFSBP2:: PROC
    MOV CL,0xEA
    JMP IifFMUL4X4.op:
 ENDP IifFSBP2::
</pre>

<dl id="IifFSBP3">
<dt><a href="#IifFMUL4X4">&uarr; FSBP3</a></dt>
<dd>Select Bank 3 for FMUL4X4</dd>
<dt>Operands</dt>
<dd>-</dd>
<dt>Opcode</dt>
<dd>0xDBE9</dd>
<dt>CPU</dt>
<dd>IIT only</dd>
<dt>Documented</dt>
<dd><a class="EXTW" href="https://textfiles.meulie.net/computers/86bugs.lst">86BUGS.LST</a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3575.htm">t3575</a>
</dd>
</dl><pre>
IifFSBP3:: PROC
    MOV CL,0xE9
    JMP IifFMUL4X4.op:
 ENDP IifFSBP3::
</pre>
<!--IifEpilogue--><pre>
  ENDPROGRAM iif
</pre><!--TAILMENU-->
<!--Contents below the marker {!==TAILMENU==} was generated by "generate.php".-->
<br class='CLEAR'/><a id='bottom' href='#top'>&#x25B2;Back to the top&#x25B2;</a>
</body></html>
