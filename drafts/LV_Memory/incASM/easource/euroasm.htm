<!doctype html><html lang='en'><head>
<meta http-equiv='Content-Type' content='text/html; charset=utf-8'/>
<meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=2.0, user-scalable=yes'>
<meta name='robots' content='ALL,FOLLOW'/>
<meta name='description' content='euroasm.htm source file'/>
<meta name='version' content='20250318'/>
<meta name='author' content='Pavel vitsoft Šrubař'/>
<link rel='stylesheet' href='../euroasm.css' type='text/css'/>
<link rel='shortcut icon' href='../favicon.ico'/>
<title>euroasm.htm source file</title>
</head>
<body class='EASOURCE' id='top'><div class='HEADMENU'><table>
<tr><td rowspan='2' title='&euro;ASM - assembler and linker'><img src='../favicon.ico' alt='EuroAssembler' />
<td><a href='../index.htm' title='Alphabetical index of all &euro;ASM elements, directives and instructions'>Index</a></td>
<td><a href='../eadoc/' class='EADOC' title='Documentation of EuroAssembler'>Manual</a></td>
<td><a href='https://euroassembler.eu/download/' title='History &amp; download of the latest and previous versions'>Download</a></td>
<td><a href='../easource/' class='EASOURCE' title='Source files of EuroAssembler itself'>Source</a></td>
<td><a href='../maclib/' class='MACLIB' title='Macro libraries shipped with &euro;ASM'>Macros</a></td>
<td rowspan='2' title='Find the searched token in any text file on this site'>
<form method='post' action='../search.php' enctype='multipart/form-data' accept-charset='utf-8'>
<input type='text' id='q' placeholder='Searched word(s)' name='q' value=''/>
<br/><label title='Check the box to find the expression even if it is surrounded by other letters | digits.'>
<input type='checkbox' name='EW'/><small>Embedded word</small></label>
<br/><label title='Check the box for case-insensitive search.'>
<input type='checkbox' name='CI'/><small>Case ins.</small></label>
<input type='submit' title='Search for the specified word|expression in all site files.' name='find' value='Search'/>
</form></td></tr><tr>
<td><a href='../sitemap.htm' title='List of directories and files on this site'>Sitemap</a></td>
<td><a href='../eadoc/links.htm' class='EADOC' title='References and external links to resources used in EuroAssembler developement'>Links</a></td>
<td><a href='https://euroassembler.eu/forum/' title='Discussion forum concerning EuroAssembler'>Forum</a></td>
<td><a href='../eatests/' class='EATESTS' title='Program snippets for testing the function of &euro;ASM'>Tests</a></td>
<td><a href='../objlib/' class='OBJLIB' title='Skeletons and sample objects and projects shipped with &euro;ASM'>Projects</a></td>
</tr></table></div>
<!--Contents above the marker {!==/HEADMENU==} was generated by "generate.php".-->
<!--/HEADMENU-->
<h1>euroasm.htm
<br/><a href="#Headers">Headers</a>
<br/><a href="#ScopeSelection">Scope selection</a>
<br/><a href="#OsSelection">OS selection</a>
<br/><a href="#Linking">Link &euro;ASM</a>
</h1>
<p><strong>euroasm.htm</strong> is the EuroAssembler linker script which will be invoked by the make-script
<q>eamake.sh</q> or <q>eamake.cmd</q>.
<br/>It is not a module; actual data and code are scattered in other
<a class="EXT" href="index.htm#Files">source modules</a> and they will be linked here
<!-->by the same executable EuroAssembler file which was used for assembly.</p>
<p>This linker script is common for Linux and Windows versions of EuroAssembler.
<!-->It expects that the downloaded executable file, whose name is <q>euroasm.x</q> for Linux and
<q>euroasm.exe</q> for Windows, remains in the main &euro;ASM directory, the same where
<q>euroasm.css</q>, <q>search.php</q> etc are located, see the
<a class="EXT" href="../eadoc/#Installation">installation</a> instructions.</p>
<p>EuroAssembler is shipped as executable file but it can also be <strong>rebuild
</strong> in the subdirectory <q>easource</q> with script
<code>./eamake.sh</code> (in Linux) or
<code>eamake.cmd</code> (in Windows).
<!-->If the rebuild is successfull, it creates the <strong>listing file</strong>
<q>easource/euroasm.htm.lst</q> and <strong>output file</strong>
<q>easource/euroasm.x</q> (in Linux) or
<q>easource\euroasm.exe</q> (in Windows).</p>
<blockquote>You cannot rebuild EuroAssembler with the same <q>euroasm</q> executable which is being created,
<!-->that means you cannot execute <code>euroasm&nbsp;euroasm.htm</code> in the subdirectory
<q>easource</q>. Use the executable from PATH or from the directory one level higher than <q>easource</q>.</blockquote>
<p>Presence of environment variable <dfn>OS</dfn> specifies the operating system for which will be EuroAssembler linked.
<!-->In MS Windows is something like <code class="MSG">OS=Windows_NT</code>, in Linux it is undefined.</p>
<blockquote>Changing the variable manually, e. g. <code class="MSG">SET OS=Linux</code> before invokation of
<code class="MSG">eamake.cmd</code> will link Linux version <q>easource\euroasm.x</q> on MS Windows (and vice versa).
</blockquote>
<p>The just rebuilt executable can be tested in subdirectory <q>eatests</q> using more than eight hundred test files with command
<code>./testman.x "t*.htm"</code> (in Linux) or
<code>testman.exe "t*.htm"</code> (in Windows).</p>
<blockquote>Executable test managers <q>eatests/testman.x</q> and <q>eatests\testman.exe</q> are not shipped in
<q>euroasm.zip</q>, you should create them first from their source file.
<br>In Linux change to subdirectory <q>prolin32</q> and run <code>../euroasm.x testman.htm</code>.
<br>In Windows change to subdirectory <q>prowin32</q> and run <code>..\euroasm.exe testman.htm</code>.</blockquote>
<br class="CLEAR"/>

<dl id='Headers'><dt><a href="#top">&uarr; Headers</a></dt>
<dd>Instructions between <code>HEAD</code> and <code>ENDHEAD</code> in this file represent the common module header,
<!---->which is included into every EuroAssembler source module (using the pseudoinstruction
<span class="SRC"> INCLUDEHEAD euroasm.htm </span>).</dd></dl>
<pre>
     HEAD                 ; <b>Begin common interface</b> block which is included to all modules.
     EUROASM NOWARN=0563, NOWARN=2101, NOWARN=2512, \  ; Common options valid for each source module.
             LIST=ON, LISTINCLUDE=OFF, LISTMACRO=OFF, LISTREPEAT=OFF, LISTVAR=OFF,  \
             CODEPAGE=UTF-8, UNICODE=OFF, PROFILE=OFF, DEBUG=OFF
</pre>

<dl id="ScopeSelection"><dt><a href="#top">&uarr; Scope selection</a></dt>
<dd>Many macroinstruction used in EuroAssembler are semi-inline, they push arguments and then they call
<!-->their run-time procedure declared in PROC1/ENDPROC1 block.
<br>The following %variable <dfn>%@RTprocedureList</dfn> keeps names of those run-time procedures.
<!-->The list will be used to declare their scope in other modules:
<br>run-time procedures will be PUBLIC in the main module <q>ea.htm</q> and EXTERN in all other modules.
<br>This prevents the run-time procedures to be repeatedly included in each module,
<!-->where is their semi-inline macro expanded, as this would unnecessarily blow up the executable size.</dd></dl>
<pre>
%@RTprocedureList %SET BufferCreate@RT,BufferNew@RT,BufferResize@RT,BufferStore@RT,BufferStoreByte@RT,BufferStoreDword@RT, \
   BufferStorePascalString@RT,BufferStoreQword@RT,BufferStoreWord@RT,Clear32@RT,Compare32@RT,CopyTo32@RT,FileClose@RT,     \
   FileCreate@RT,FileEach@RT,FileMapOpen@RT,FileMkDir@RT,FileWrite@RT,GetLength$A@RT,IiAbort@RT,IiAbortIfNotST0@RT,        \
   IiAllowLocking@RT,IiDataSize@RT,IiDispatchFormatFail@RT,IiDispatchLocation@RT,IiDispSize@RT,IiEmitImm@RT,IiEmitImm2@RT, \
   IiEmitOpcode@RT,IiImmSize@RT,IiStringDestination@RT,IiStringSource@RT,ListCreate@RT,ListInsert@RT,ListNew@RT,           \
   ListRemove@RT,ListStore@RT,LodD32@RT,PoolCreate@RT,PoolDestroy@RT,PoolNew@RT,ShellSort32@RT,StackCreate@RT,StackPush@RT,\
   StoD32@RT,StoH32@RT,StoQD32@RT,StreamCreate@RT,StreamDump@RT,StreamGetSize@RT,StreamStore$size@RT,StreamStore@RT,SysGetEnvironment@RT
   %IF "%^PROGRAM" == "ea" ; Perform the actual <b>scope declarations of runtime procedures</b>.
     PUBLIC %@RTprocedureList   ; Scope is PUBLIC in the module <code>ea.htm</code>
   %ELSE
       EXTERN %@RTprocedureList ;   and EXTERN in all other modules.
   %ENDIF
</pre>

<dl id="OsSelection"><dt><a href="#top">&uarr; Operating System selection</a></dt>
<dd><p>This linker script uses environment variable <dfn>OS</dfn> to recognize
<!-->whether it runs on Linux or MS Windows. According to the detected OS it selects
<!-->macrolibraries for this system, for instance <q>linapi.htm</q> or <q>winapi.htm</q> etc.,
<!-->which will be included to all modules. The source code of modules is the same for both Linux and Windows.</p>
</dd></dl><pre>
%OS %SETE OS                   ; Try to load environment variable OS at runtime.
   %IF "%OS[1]" == "W"         ; Environment %OS% in MS Windows is something like "Windows_NT". Test its first character.
     %eaos    %SET win         ; User-defined variable %eaos is used to include macrolibrary files.
     %format  %SET PE          ; Output executable file format.
     %outfile %SET euroasm.exe ; Output executable file name.
   %ELSE                       ; When the environment %OS% is not set, we must be in Linux.
     %eaos    %SET lin         ; User-defined variable %eaos is used to include macrolibraries.
     %format  %SET ELFX        ; Output executable file format.
     %outfile %SET euroasm.x   ; Output executable file name.
   %ENDIF
   INCLUDE cpuext.htm, cpuext32.htm, stdcal32.htm, status32.htm, string32.htm, sort32.htm
   INCLUDE %eaos[]api.htm, %eaos[]sfile.htm, %eaos[]f32.htm, %eaos[]s.htm, memory32.htm, sys%eaos.htm
</pre><pre>
  ENDHEAD                      ; <b>End of common interface</b>, which is included to all &euro;ASM sources.
</pre>

<dl id="Linking"><dt><a href="#top">&uarr; Link EuroAssembler</a></dt>
<dd>All modules were assembled to their object files by the script <q>eamake.sh</q> or <q>eamake.cmd</q>.
<br>Here follows the declaration of final target executable program
<!---->and the LINK statement enumerating its assembled modules.</dd></dl><pre>
euroasm: PROGRAM Format=%format, Model=FLAT, Width=32, Entry=EaMain:,          \
                 Subsystem=CON, ListLiterals=OFF, ListGlobals=OFF, ListMap=ON, \ Options below this line
                 StubFile="..\objlib\coffstub.exe", IconFile="euroasm.ico",    \   are irrelevant
                 SizeOfStackReserve=1M, SizeOfStackCommit=8K,                  \   in Linux version.
                 SizeOfHeapReserve=1M, SizeOfHeapCommit=4K
           LINK ea.obj, chunk.obj, ctx.obj, dict.obj, eaopt.obj, exp.obj, lst.obj, mac.obj, member.obj, msg.obj
           LINK pass.obj, pgm.obj, pgmopt.obj, pseudo.obj, reloc.obj, src.obj, sss.obj, stm.obj, sym.obj, var.obj
           LINK ii.obj, iia.obj, iib.obj, iic.obj, iid.obj, iif.obj, iig.obj, iik.obj, iim.obj, iip.obj
           LINK iis.obj, iit.obj, iiv.obj, iix.obj, iiy.obj, iiz.obj
           LINK pf.obj, pfbin.obj, pfboot.obj, pfcoff.obj, pfcom.obj, pfdll.obj, pfelf.obj, pfelfso.obj, pfelfx.obj
           LINK pflibcof.obj, pflibomf.obj, pfmz.obj, pfomf.obj, pfpe.obj, pfrsrc.obj
         ENDPROGRAM euroasm:
</pre>
<!--TAILMENU-->
<!--Contents below the marker {!==TAILMENU==} was generated by "generate.php".-->
<br class='CLEAR'/><a id='bottom' href='#top'>&#x25B2;Back to the top&#x25B2;</a>
</body></html>