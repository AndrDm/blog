<!doctype html><html lang='en'><head>
<meta http-equiv='Content-Type' content='text/html; charset=utf-8'/>
<meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=2.0, user-scalable=yes'>
<meta name='robots' content='ALL,FOLLOW'/>
<meta name='description' content='iic.htm source file'/>
<meta name='version' content='20250318'/>
<meta name='author' content='Pavel vitsoft Šrubař'/>
<link rel='stylesheet' href='../euroasm.css' type='text/css'/>
<link rel='shortcut icon' href='../favicon.ico'/>
<title>iic.htm source file</title>
</head>
<body class='EASOURCE' id='top'><div class='HEADMENU'><table>
<tr><td rowspan='2' title='&euro;ASM - assembler and linker'><img src='../favicon.ico' alt='EuroAssembler' />
<td><a href='../index.htm' title='Alphabetical index of all &euro;ASM elements, directives and instructions'>Index</a></td>
<td><a href='../eadoc/' class='EADOC' title='Documentation of EuroAssembler'>Manual</a></td>
<td><a href='https://euroassembler.eu/download/' title='History &amp; download of the latest and previous versions'>Download</a></td>
<td><a href='../easource/' class='EASOURCE' title='Source files of EuroAssembler itself'>Source</a></td>
<td><a href='../maclib/' class='MACLIB' title='Macro libraries shipped with &euro;ASM'>Macros</a></td>
<td rowspan='2' title='Find the searched token in any text file on this site'>
<form method='post' action='../search.php' enctype='multipart/form-data' accept-charset='utf-8'>
<input type='text' id='q' placeholder='Searched word(s)' name='q' value=''/>
<br/><label title='Check the box to find the expression even if it is surrounded by other letters | digits.'>
<input type='checkbox' name='EW'/><small>Embedded word</small></label>
<br/><label title='Check the box for case-insensitive search.'>
<input type='checkbox' name='CI'/><small>Case ins.</small></label>
<input type='submit' title='Search for the specified word|expression in all site files.' name='find' value='Search'/>
</form></td></tr><tr>
<td><a href='../sitemap.htm' title='List of directories and files on this site'>Sitemap</a></td>
<td><a href='../eadoc/links.htm' class='EADOC' title='References and external links to resources used in EuroAssembler developement'>Links</a></td>
<td><a href='https://euroassembler.eu/forum/' title='Discussion forum concerning EuroAssembler'>Forum</a></td>
<td><a href='../eatests/' class='EATESTS' title='Program snippets for testing the function of &euro;ASM'>Tests</a></td>
<td><a href='../objlib/' class='OBJLIB' title='Skeletons and sample objects and projects shipped with &euro;ASM'>Projects</a></td>
</tr></table></div>
<!--Contents above the marker {!==/HEADMENU==} was generated by "generate.php".-->
<!--/HEADMENU-->
<h1>iic.htm
<br/><i>Enumerations</i>
<br/><a href="#IicList">IicList</a>
<br/><i>Instruction handlers</i><br/><span class="ILIST">
<a href="#IicBB0_RESET">BB0_RESET</a>
<a href="#IicBB1_RESET">BB1_RESET</a>
<a href="#IicCPU_READ">CPU_READ</a>
<a href="#IicCPU_WRITE">CPU_WRITE</a>
<a href="#IicDMINT">DMINT</a>
<a href="#IicPADDSIW">PADDSIW</a>
<a href="#IicPAVEB">PAVEB</a>
<a href="#IicPDISTIB">PDISTIB</a>
<a href="#IicPMAGW">PMAGW</a>
<a href="#IicPMACHRIW">PMACHRIW</a>
<a href="#IicPMULHRIW">PMULHRIW</a>
<a href="#IicPMULHRWC">PMULHRWC</a>
<a href="#IicPMVGEZB">PMVGEZB</a>
<a href="#IicPMVLZB">PMVLZB</a>
<a href="#IicPMVNZB">PMVNZB</a>
<a href="#IicPMVZB">PMVZB</a>
<a href="#IicPSUBSIW">PSUBSIW</a>
<a href="#IicRDM">RDM</a>
<a href="#IicRDSHR">RDSHR</a>
<a href="#IicRSDC">RSDC</a>
<a href="#IicRSLDT">RSLDT</a>
<a href="#IicRSTS">RSTS</a>
<a class="EXT" href="iis.htm#IisRSM" >RSM</a>
<a href="#IicSMINT">SMINT</a>
<a href="#IicSMINTOLD">SMINTOLD</a>
<a href="#IicSVDC">SVDC</a>
<a href="#IicSVLDT">SVLDT</a>
<a href="#IicSVTS">SVTS</a>
<a href="#IicWRSHR">WRSHR</a>
</span><!--IicAList-->
</h1>
<dl id="IicHandlers"><dt><a href="#top">&uarr; <em>IicHandlers</em></a> </dt>
<dd> assemble <b>Cyrix</b>-specific machine instructions.</dd>
<dt>See also</dt><dd><a class="EXT" href="ii.htm#IiHandlers">IiHandlers</a>,
<a class="EXTL" href="../eadoc/links.htm#Cyrix686">[Cyrix686]</a>
<a class="EXTL" href="../eadoc/links.htm#Cyrix686ap">[Cyrix686ap]</a>
</dd></dl><pre>
iic PROGRAM FORMAT=COFF,MODEL=FLAT,WIDTH=32
     INCLUDEHEAD euroasm.htm, \  Interface (structures, symbols and macros) of other modules used in this source.
                 ea.htm,eaopt.htm,exp.htm,ii.htm,msg.htm,pgm.htm,pgmopt.htm,sss.htm,stm.htm,sym.htm
</pre><br class="CLEAR"/><pre>
iic HEAD ; Start of module interface.
</pre>

<dl id="IicList"><dt><a href="#top">&uarr; %IicList</a></dt><dd> enumerates machine instructions
<!---->of this family which &euro;ASM can assemble.
<br/>Each instruction declared in <code>%IicList</code> requires the corresponding
<a href="#IicHandlers">handler</a> in this file.</dd>
<dt>See also</dt><dd><a class="EXT" href="dict.htm#DictLookupIi">DictLookupIi</a></dd></dl><pre>
%IicList %SET \
BB0_RESET, \
BB1_RESET, \
CPU_READ, \
CPU_WRITE, \
DMINT, \
PADDSIW, \
PAVEB, \
PDISTIB, \
PMAGW, \
PMACHRIW, \
PMULHRIW, \
PMULHRWC, \
PMVGEZB, \
PMVLZB, \
PMVNZB, \
PMVZB, \
PSUBSIW, \
RDM, \
RDSHR, \
RSDC, \
RSLDT, \
RSTS, \
SMINT, \
SMINTOLD, \
SVDC, \
SVLDT, \
SVTS, \
WRSHR, \
<!--IicList-->
;
</pre><pre>
  ENDHEAD iic ; End of module interface.
</pre>

<dl id="IicPDISTIB">
<dt><a href='#IicHandlers'>&uarr; PDISTIB</a></dt>
<dd>Packed Distance and Accumulate with Implied destination.</dd>
<dt>Category</dt>
<dd>SSE Cyrix</dd>
<dt>Operands</dt>
<dd>mmx, mem</dd>
<dt>Opcode</dt>
<dd>0x0F54 /r</dd>
<dt>CPU</dt>
<dd>586, Cyrix</dd>
<dt>Documented</dt>
<dd><a class="EXTW" href="http://www.sandpile.org/x86/opc_2.htm">Sandpile</a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3605.htm">t3605</a>
</dd>
</dl><pre>
IicPDISTIB:: PROC
    MOV CL,0x54
.op:IiRequire 586,MMX,CYRIX
    IiEmitOpcode 0x0F,ECX
    IiOpEn RM
    IiModRM /r
    IiDispatchFormat mmx.mem
.mmx.mem:
    RET
 ENDP IicPDISTIB::
</pre>

<dl id="IicPMVZB">
<dt><a href='#IicPDISTIB'>&uarr; PMVZB</a></dt>
<dd>Packed Conditional Move if zero.</dd>
<dt>Category</dt>
<dd>SSE Cyrix</dd>
<dt>Operands</dt>
<dd>mmx, mem</dd>
<dt>Opcode</dt>
<dd>0x0F58 /r</dd>
<dt>CPU</dt>
<dd>586, Cyrix</dd>
<dt>Documented</dt>
<dd><a class="EXTW" href="http://www.sandpile.org/x86/opc_2.htm">Sandpile</a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3605.htm">t3605</a>
</dd>
</dl><pre>
IicPMVZB:: PROC
    MOV CL,0x58
    JMP IicPDISTIB.op:
 ENDP IicPMVZB::
</pre>

<dl id="IicPMVNZB">
<dt><a href='#IicPDISTIB'>&uarr; PMVNZB</a></dt>
<dd>Packed Conditional Move if not zero.</dd>
<dt>Category</dt>
<dd>SSE Cyrix</dd>
<dt>Operands</dt>
<dd>mmx, mem</dd>
<dt>Opcode</dt>
<dd>0x0F5A /r</dd>
<dt>CPU</dt>
<dd>586, Cyrix</dd>
<dt>Documented</dt>
<dd><a class="EXTW" href="http://www.sandpile.org/x86/opc_2.htm">Sandpile</a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3605.htm">t3605</a>
</dd>
</dl><pre>
IicPMVNZB:: PROC
    MOV CL,0x5A
    JMP IicPDISTIB.op:
 ENDP IicPMVNZB::
</pre>

<dl id="IicPMVLZB">
<dt><a href='#IicPDISTIB'>&uarr; PMVLZB</a></dt>
<dd>Packed Conditional Move if less than zero.</dd>
<dt>Category</dt>
<dd>SSE Cyrix</dd>
<dt>Operands</dt>
<dd>mmx, mem</dd>
<dt>Opcode</dt>
<dd>0x0F5B /r</dd>
<dt>CPU</dt>
<dd>586, Cyrix</dd>
<dt>Documented</dt>
<dd><a class="EXTW" href="http://www.sandpile.org/x86/opc_2.htm">Sandpile</a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3605.htm">t3605</a>
</dd>
</dl><pre>
IicPMVLZB:: PROC
    MOV CL,0x5B
    JMP IicPDISTIB.op:
 ENDP IicPMVLZB::
</pre>

<dl id="IicPMVGEZB">
<dt><a href='#IicPDISTIB'>&uarr; PMVGEZB</a></dt>
<dd>Packed Conditional Move if greater than or equal to zero.</dd>
<dt>Category</dt>
<dd>SSE Cyrix</dd>
<dt>Operands</dt>
<dd>mmx, mem</dd>
<dt>Opcode</dt>
<dd>0x0F5C /r</dd>
<dt>CPU</dt>
<dd>586, Cyrix</dd>
<dt>Documented</dt>
<dd><a class="EXTW" href="http://www.sandpile.org/x86/opc_2.htm">Sandpile</a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3605.htm">t3605</a>
</dd>
</dl><pre>
IicPMVGEZB:: PROC
    MOV CL,0x5C
    JMP IicPDISTIB.op:
 ENDP IicPMVGEZB::
</pre>

<dl id="IicPMACHRIW">
<dt><a href='#IicPDISTIB'>&uarr; PMACHRIW</a></dt>
<dd>Packed Multiply and Accumulate with Rounding.</dd>
<dt>Category</dt>
<dd>SSE Cyrix</dd>
<dt>Operands</dt>
<dd>mmx, mem</dd>
<dt>Opcode</dt>
<dd>0x0F5E /r</dd>
<dt>CPU</dt>
<dd>586, Cyrix</dd>
<dt>Documented</dt>
<dd><a class="EXTW" href="http://www.sandpile.org/x86/opc_2.htm">Sandpile</a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3605.htm">t3605</a>
</dd>
</dl><pre>
IicPMACHRIW:: PROC
    MOV CL,0x5E
    JMP IicPDISTIB.op:
 ENDP IicPMACHRIW::
</pre>

<dl id="IicPAVEB">
<dt><a href='#IicHandlers'>&uarr; PAVEB</a></dt>
<dd>Packed Average Byte.</dd>
<dt>Category</dt>
<dd>SSE Cyrix</dd>
<dt>Operands</dt>
<dd>xxm,xxm | xxm,mem</dd>
<dt>Opcode</dt>
<dd>0x0F50 /r</dd>
<dt>CPU</dt>
<dd>586, Cyrix</dd>
<dt>Documented</dt>
<dd><a class="EXTW" href="http://www.sandpile.org/x86/opc_2.htm">Sandpile</a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3610.htm">t3610</a>
</dd>
</dl><pre>
IicPAVEB:: PROC
    MOV CL,0x50
.op:IiRequire 586,MMX,CYRIX
    IiEmitOpcode 0x0F,ECX
    IiEncoding DATA=QWORD
    IiOpEn RM
    IiModRM /r
    IiDispatchFormat mmx.mem, mmx.mmx
.mmx.mmx:
.mmx.mem:
    RET
 ENDP IicPAVEB::
</pre>

<dl id="IicPADDSIW">
<dt><a href='#IicPAVEB'>&uarr; PADDSIW</a></dt>
<dd>Packed Add with Saturation with Implied destination.</dd>
<dt>Category</dt>
<dd>SSE Cyrix</dd>
<dt>Operands</dt>
<dd>xxm,xxm | xxm,mem</dd>
<dt>Opcode</dt>
<dd>0x0F51 /r</dd>
<dt>CPU</dt>
<dd>586, Cyrix</dd>
<dt>Documented</dt>
<dd><a class="EXTW" href="http://www.sandpile.org/x86/opc_2.htm">Sandpile</a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3610.htm">t3610</a>
</dd>
</dl><pre>
IicPADDSIW:: PROC
    MOV CL,0x51
    JMP IicPAVEB.op:
 ENDP IicPADDSIW::
</pre>

<dl id="IicPMAGW">
<dt><a href='#IicPAVEB'>&uarr; PMAGW</a></dt>
<dd>Packed Magnitude.</dd>
<dt>Category</dt>
<dd>SSE Cyrix</dd>
<dt>Operands</dt>
<dd>xxm,xxm | xxm,mem</dd>
<dt>Opcode</dt>
<dd>0x0F52 /r</dd>
<dt>CPU</dt>
<dd>586, Cyrix</dd>
<dt>Documented</dt>
<dd><a class="EXTW" href="http://www.sandpile.org/x86/opc_2.htm">Sandpile</a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3610.htm">t3610</a>
</dd>
</dl><pre>
IicPMAGW:: PROC
    MOV CL,0x52
    JMP IicPAVEB.op:
 ENDP IicPMAGW::
</pre>

<dl id="IicPSUBSIW">
<dt><a href='#IicPAVEB'>&uarr; PSUBSIW</a></dt>
<dd>Packed Subtract with Saturation with Implied destination.</dd>
<dt>Category</dt>
<dd>SSE Cyrix</dd>
<dt>Operands</dt>
<dd>xxm,xxm | xxm,mem</dd>
<dt>Opcode</dt>
<dd>0x0F55 /r</dd>
<dt>CPU</dt>
<dd>586, Cyrix</dd>
<dt>Documented</dt>
<dd><a class="EXTW" href="http://www.sandpile.org/x86/opc_2.htm">Sandpile</a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3610.htm">t3610</a>
</dd>
</dl><pre>
IicPSUBSIW:: PROC
    MOV CL,0x55
    JMP IicPAVEB.op:
 ENDP IicPSUBSIW::
</pre>

<dl id="IicPMULHRWC">
<dt><a href='#IicPAVEB'>&uarr; PMULHRWC</a></dt>
<dd>Packed Multiply High with Rounding (Cyrix)</dd>
<dt>Category</dt>
<dd>SSE Cyrix</dd>
<dt>Operands</dt>
<dd>xxm,xxm | xxm,mem</dd>
<dt>Opcode</dt>
<dd>0x0F59 /r</dd>
<dt>Remark</dt>
<dd>Documented as <b>PMULHRW</b> <code>0x0F59 /r</code> by Cyrix,
<!---->but the same mnemonic is also used by AMD 3DNow! <code>0x0F0F /r 0xB7
</code> (Packed 16-bit integer multiply with rounding), so this Cyrix variant 
<!---->is renamed to PMULHRWC and AMD variant PMULHRW is aliased to PMULHRWA
<!---->in &euro;ASM as well as in
<a class="EXTW" href="https://www.nasm.us/doc/nasmdocb.html">NASM</a>.</dd>
<dt>CPU</dt>
<dd>586, Cyrix</dd>
<dt>Documented</dt>
<dd><a class="EXTW" href="http://www.sandpile.org/x86/opc_2.htm">Sandpile</a></dd>
<dt>See also</dt>
<dd><a class="EXT" href="iid.htm#IidPMULHRW">PMULHRW</a>, 
<a class="EXT" href="iid.htm#IidPMULHRWA">PMULHRWA</a>.</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3610.htm">t3610</a>
</dd>
</dl><pre>
IicPMULHRWC:: PROC
    MOV CL,0x59
    JMP IicPAVEB.op:
 ENDP IicPMULHRWC::
</pre>

<dl id="IicPMULHRIW">
<dt><a href='#IicPAVEB'>&uarr; PMULHRIW</a></dt>
<dd>Packed Multiply High with Rounding with Implied destination.</dd>
<dt>Category</dt>
<dd>SSE Cyrix</dd>
<dt>Operands</dt>
<dd>xxm,xxm | xxm,mem</dd>
<dt>Opcode</dt>
<dd>0x0F5D /r</dd>
<dt>CPU</dt>
<dd>586, Cyrix</dd>
<dt>Documented</dt>
<dd><a class="EXTW" href="http://www.sandpile.org/x86/opc_2.htm">Sandpile</a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3610.htm">t3610</a>
</dd>
</dl><pre>
IicPMULHRIW:: PROC
    MOV CL,0x5D
    JMP IicPAVEB.op:
 ENDP IicPMULHRIW::
</pre>

<dl id="IicRDSHR">
<dt><a href='#IicHandlers'>&uarr; RDSHR</a></dt>
<dd>Read SMM Header Pointer Register</dd>
<dt>Category</dt>
<dd>system</dd>
<dt>Operands</dt>
<dd>r32/m32</dd>
<dt>Opcode</dt>
<dd>0x0F36 /0</dd>
<dt>Documented</dt>
<dd><a class="EXTW" href="../eadoc/links.htm#Cyrix686">[Cyrix686]</a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4200.htm">t4200</a>
</dd>
</dl><pre>
IicRDSHR:: PROC
    IiRequire 686,CYRIX,PRIV
    IiEmitOpcode 0x0F,0x36
    IiOpEn M
    IiModRM /0
    IiEncoding DATA=DWORD
    IiDispatchFormat r32,mem
.r32:
.mem:RET
 ENDP IicRDSHR::
</pre>

<dl id="IicWRSHR">
<dt><a href='#IicHandlers'>&uarr; WRSHR</a></dt>
<dd>Write SMM Header Pointer Register</dd>
<dt>Category</dt>
<dd>system</dd>
<dt>Operands</dt>
<dd>r32/m32</dd>
<dt>Opcode</dt>
<dd>0x0F37 /0</dd>
<dt>Documented</dt>
<dd><a class="EXTW" href="../eadoc/links.htm#Cyrix686">[Cyrix686]</a></dd>
<dt>See also</dt>
<dd><a class="EXT" href="iis.htm#IisGETSEC">GETSEC</a> (same opcode)</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4200.htm">t4200</a>
</dd>
</dl><pre>
IicWRSHR:: PROC
    IiRequire 686,CYRIX,PRIV
    IiEmitOpcode 0x0F,0x37
    IiOpEn M
    IiModRM /0
    IiEncoding DATA=DWORD
    IiDispatchFormat r32,mem
.r32:
.mem:RET
 ENDP IicWRSHR::
</pre>

<dl id="IicSVDC">
<dt><a href='#IicHandlers'>&uarr; SVDC</a></dt>
<dd>Save Segment Register and Descriptor</dd>
<dt>Category</dt>
<dd>system</dd>
<dt>Opcode</dt>
<dd>0x0F78 /r</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4205.htm">t4205</a>
</dd>
</dl><pre>
IicSVDC:: PROC
    IiRequire 486,CYRIX,PRIV
    IiEmitOpcode 0x0F,0x78
    IiOpEn MR
    IiModRM /r
    IiEncoding DATA=TBYTE
    IiDispatchFormat mem.Sreg
.mem.Sreg:
    RET
 ENDP IicSVDC::
</pre>

<dl id="IicRSDC">
<dt><a href='#IicHandlers'>&uarr; RSDC</a></dt>
<dd>Restore Segment Register and Descriptor</dd>
<dt>Category</dt>
<dd>system</dd>
<dt>Opcode</dt>
<dd>0x0F79 /r</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4205.htm">t4205</a>
</dd>
</dl><pre>
IicRSDC:: PROC
    IiRequire  486,CYRIX,PRIV
    IiEmitOpcode 0x0F,0x79
    IiOpEn RM
    IiModRM /r
    IiEncoding DATA=TBYTE
    IiDispatchFormat Sreg.mem
.Sreg.mem:
    RET
 ENDP IicRSDC::
</pre>

<dl id="IicSVLDT">
<dt><a href='#IicHandlers'>&uarr; SVLDT</a></dt>
<dd>Save LDTR and Descriptor</dd>
<dt>Category</dt>
<dd>system</dd>
<dt>Opcode</dt>
<dd>0xF7A /0</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4210.htm">t4210</a>
</dd>
</dl><pre>
IicSVLDT:: PROC
    MOV CL,0x7A
.op:IiRequire 486,CYRIX,PRIV
    IiEmitOpcode 0x0F,ECX
    IiOpEn M
    IiModRM /0
    IiEncoding DATA=TBYTE
    IiDispatchFormat mem
.mem:RET
 ENDP IicSVLDT::
</pre>

<dl id="IicRSLDT">
<dt><a href='#IicSVLDT'>&uarr; RSLDT</a></dt>
<dd>Restore LDTR and Descriptor</dd>
<dt>Category</dt>
<dd>system</dd>
<dt>Opcode</dt>
<dd>0x0F7B /0</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4210.htm">t4210</a>
</dd>
</dl><pre>
IicRSLDT:: PROC
    MOV CL,0x7B
    JMP IicSVLDT.op:
 ENDP IicRSLDT::
</pre>

<dl id="IicSVTS">
<dt><a href='#IicSVLDT'>&uarr; SVTS</a></dt>
<dd>SVTS</dd>
<dt>Category</dt>
<dd>system</dd>
<dt>Opcode</dt>
<dd>0x0F7C /0</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4210.htm">t4210</a>
</dd>
</dl><pre>
IicSVTS:: PROC
    MOV CL,0x7C
    JMP IicSVLDT.op:
 ENDP IicSVTS::
</pre>

<dl id="IicRSTS">
<dt><a href='#IicSVLDT'>&uarr; RSTS</a></dt>
<dd>Restore TSR and Descriptor</dd>
<dt>Category</dt>
<dd>system</dd>
<dt>Opcode</dt>
<dd>0x0F7D /0</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4210.htm">t4210</a>
</dd>
</dl><pre>
IicRSTS:: PROC
    MOV CL,0x7D
    JMP IicSVLDT.op:
 ENDP IicRSTS::
</pre>

<dl id="IicSMINT">
<dt><a href='#IicHandlers'>&uarr; SMINT</a></dt>
<dd>Software SMM Entry</dd>
<dt>Category</dt>
<dd>system</dd>
<dt>Opcode</dt>
<dd>0x0F38</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4205.htm">t4205</a>
</dd>
</dl><pre>
IicSMINT:: PROC
    IiRequire 486,CYRIX
    IiEmitOpcode 0x0F,0x38
    IiDispatchFormat none
.none:RET
 ENDP IicSMINT::
</pre>

<dl id="IicSMINTOLD">
<dt><a href='#IicHandlers'>&uarr; SMINTOLD</a></dt>
<dd>Software SMM Entry (original encoding)</dd>
<dt>Category</dt>
<dd>system</dd>
<dt>Opcode</dt>
<dd>0x0F7E</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4205.htm">t4205</a>
</dd>
</dl><pre>
IicSMINTOLD:: PROC
    IiRequire 486,CYRIX,UNDOC
    IiEmitOpcode 0x0F,0x7E
    IiDispatchFormat none
.none:RET
 ENDP IicSMINTOLD::
</pre>

<dl id="IicDMINT">
<dt><a href='#IicHandlers'>&uarr; DMINT</a></dt>
<dd>Enter Debug Management Mode</dd>
<dt>Category</dt>
<dd>AMD Geode</dd>
<dt>Opcode</dt>
<dd>0x0F39</dd>
<dt>CPU</dt>
<dd>AMD/Cyrix Geode</dd>
<dt>Documented</dt>
<dd><a class="EXTL" href="../eadoc/links.htm#AMDGeode">[AMDGeode]</a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4215.htm">t4215</a>
</dd>
</dl><pre>
IicDMINT:: PROC
    IiRequire 686,CYRIX
    IiEmitOpcode 0x0F,0x39
    IiDispatchFormat none
.none:RET
 ENDP IicDMINT::
</pre>

<dl id="IicRDM">
<dt><a href='#IicHandlers'>&uarr; RDM</a></dt>
<dd>Leave Debug Management Mode</dd>
<dt>Category</dt>
<dd>AMD Geode</dd>
<dt>Opcode</dt>
<dd>0x0F3A</dd>
<dt>CPU</dt>
<dd>AMD/Cyrix Geode</dd>
<dt>Documented</dt>
<dd><a class="EXTL" href="../eadoc/links.htm#AMDGeode">[AMDGeode]</a></dd>
<dt>See also</dt>
<dd><a href="#IicBB0_RESET">BB0_RESET</a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4215.htm">t4215</a>
</dd>
</dl><pre>
IicRDM:: PROC
    IiRequire 686,CYRIX
    IiEmitOpcode 0x0F,0x3A
    IiDispatchFormat none
.none:RET
 ENDP IicRDM::
</pre>

<dl id="IicBB0_RESET">
<dt><a href='#IicHandlers'>&uarr; BB0_RESET</a></dt>
<dd>BitBlt0 reset</dd>
<dt>Category</dt>
<dd>Cyrix GX1</dd>
<dt>Operands</dt>
<dd>-</dd>
<dt>Opcode</dt>
<dd>0x0F3A</dd>
<dt>CPU</dt>
<dd>CYRIX</dd>
<dt>Documented</dt>
<dd><a class="EXTW" href="https://sourceforge.net/p/nasm/mailman/message/4373644/">NASM</a></dd>
<dt>See also</dt>
<dd><a href="#IicRDM">RDM</a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4215.htm">t4215</a>
</dd>
</dl><pre>
IicBB0_RESET:: PROC
    MOV CL,0x3A
.op:IiRequire 586,CYRIX,UNDOC
    IiEmitOpcode 0x0F,ECX
    IiDispatchFormat none
.none:RET
 ENDP IicBB0_RESET::
</pre>

<dl id="IicBB1_RESET">
<dt><a href='#IicBB0_RESET'>&uarr; BB1_RESET</a></dt>
<dd>BitBlt1 reset</dd>
<dt>Category</dt>
<dd>Cyrix GX1</dd>
<dt>Operands</dt>
<dd>-</dd>
<dt>Opcode</dt>
<dd>0x0F3B</dd>
<dt>CPU</dt>
<dd>CYRIX</dd>
<dt>Documented</dt>
<dd><a class="EXTW" href="https://sourceforge.net/p/nasm/mailman/message/4373644/">NASM</a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4215.htm">t4215</a>
</dd>
</dl><pre>
IicBB1_RESET:: PROC
    MOV CL,0x3B
    JMP IicBB0_RESET.op:
 ENDP IicBB1_RESET::
</pre>

<dl id="IicCPU_WRITE">
<dt><a href='#IicBB0_RESET'>&uarr; CPU_WRITE</a></dt>
<dd>CPU write</dd>
<dt>Category</dt>
<dd>Cyrix GX1</dd>
<dt>Operands</dt>
<dd>-</dd>
<dt>Opcode</dt>
<dd>0x0F3C</dd>
<dt>CPU</dt>
<dd>CYRIX</dd>
<dt>Documented</dt>
<dd><a class="EXTW" href="https://sourceforge.net/p/nasm/mailman/message/4373644/">NASM</a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4215.htm">t4215</a>
</dd>
</dl><pre>
IicCPU_WRITE:: PROC
    MOV CL,0x3C
    JMP IicBB0_RESET.op:
 ENDP IicCPU_WRITE::
</pre>

<dl id="IicCPU_READ">
<dt><a href='#IicBB0_RESET'>&uarr; CPU_READ</a></dt>
<dd>CPU read</dd>
<dt>Category</dt>
<dd>Cyrix GX1</dd>
<dt>Operands</dt>
<dd>-</dd>
<dt>Opcode</dt>
<dd>0x0F3D</dd>
<dt>CPU</dt>
<dd>CYRIX</dd>
<dt>Documented</dt>
<dd><a class="EXTW" href="https://sourceforge.net/p/nasm/mailman/message/4373644/">NASM</a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4215.htm">t4215</a>
</dd>
</dl><pre>
IicCPU_READ:: PROC
    MOV CL,0x3D
    JMP IicBB0_RESET.op:
 ENDP IicCPU_READ::
</pre>

<!--IicEpilogue--><pre>
  ENDPROGRAM iic
</pre><!--TAILMENU-->
<!--Contents below the marker {!==TAILMENU==} was generated by "generate.php".-->
<br class='CLEAR'/><a id='bottom' href='#top'>&#x25B2;Back to the top&#x25B2;</a>
</body></html>
