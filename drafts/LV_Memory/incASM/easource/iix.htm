<!doctype html><html lang='en'><head>
<meta http-equiv='Content-Type' content='text/html; charset=utf-8'/>
<meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=2.0, user-scalable=yes'>
<meta name='robots' content='ALL,FOLLOW'/>
<meta name='description' content='iix.htm source file'/>
<meta name='version' content='20250318'/>
<meta name='author' content='Pavel vitsoft Šrubař'/>
<link rel='stylesheet' href='../euroasm.css' type='text/css'/>
<link rel='shortcut icon' href='../favicon.ico'/>
<title>iix.htm source file</title>
</head>
<body class='EASOURCE' id='top'><div class='HEADMENU'><table>
<tr><td rowspan='2' title='&euro;ASM - assembler and linker'><img src='../favicon.ico' alt='EuroAssembler' />
<td><a href='../index.htm' title='Alphabetical index of all &euro;ASM elements, directives and instructions'>Index</a></td>
<td><a href='../eadoc/' class='EADOC' title='Documentation of EuroAssembler'>Manual</a></td>
<td><a href='https://euroassembler.eu/download/' title='History &amp; download of the latest and previous versions'>Download</a></td>
<td><a href='../easource/' class='EASOURCE' title='Source files of EuroAssembler itself'>Source</a></td>
<td><a href='../maclib/' class='MACLIB' title='Macro libraries shipped with &euro;ASM'>Macros</a></td>
<td rowspan='2' title='Find the searched token in any text file on this site'>
<form method='post' action='../search.php' enctype='multipart/form-data' accept-charset='utf-8'>
<input type='text' id='q' placeholder='Searched word(s)' name='q' value=''/>
<br/><label title='Check the box to find the expression even if it is surrounded by other letters | digits.'>
<input type='checkbox' name='EW'/><small>Embedded word</small></label>
<br/><label title='Check the box for case-insensitive search.'>
<input type='checkbox' name='CI'/><small>Case ins.</small></label>
<input type='submit' title='Search for the specified word|expression in all site files.' name='find' value='Search'/>
</form></td></tr><tr>
<td><a href='../sitemap.htm' title='List of directories and files on this site'>Sitemap</a></td>
<td><a href='../eadoc/links.htm' class='EADOC' title='References and external links to resources used in EuroAssembler developement'>Links</a></td>
<td><a href='https://euroassembler.eu/forum/' title='Discussion forum concerning EuroAssembler'>Forum</a></td>
<td><a href='../eatests/' class='EATESTS' title='Program snippets for testing the function of &euro;ASM'>Tests</a></td>
<td><a href='../objlib/' class='OBJLIB' title='Skeletons and sample objects and projects shipped with &euro;ASM'>Projects</a></td>
</tr></table></div>
<!--Contents above the marker {!==/HEADMENU==} was generated by "generate.php".-->
<!--/HEADMENU-->
<h1>iix.htm
<br/><i>Enumerations</i>
<br/><a href="#IixList">IixList</a>
<br/><i>Instruction handlers</i><br/><span class="ILIST">
<a href="#IixBLCFILL">BLCFILL</a>
<a href="#IixBLCI">BLCI</a>
<a href="#IixBLCIC">BLCIC</a>
<a href="#IixBLCMSK">BLCMSK</a>
<a href="#IixBLCS">BLCS</a>
<a href="#IixBLSFILL">BLSFILL</a>
<a href="#IixBLSIC">BLSIC</a>
<a href="#IixLLWPCB">LLWPCB</a>
<a href="#IixLWPINS">LWPINS</a>
<a href="#IixLWPVAL">LWPVAL</a>
<a href="#IixSLWPCB">SLWPCB</a>
<a href="#IixT1MSKC">T1MSKC</a>
<a href="#IixTZMSK">TZMSK</a>
<a href="#IixVFRCZPD">VFRCZPD</a>
<a href="#IixVFRCZPS">VFRCZPS</a>
<a href="#IixVFRCZSD">VFRCZSD</a>
<a href="#IixVFRCZSS">VFRCZSS</a>
<a href="#IixVPCMOV">VPCMOV</a>
<a href="#IixVPCOMB">VPCOMB</a>
<a href="#IixVPCOMD">VPCOMD</a>
<a href="#IixVPCOMEQB">VPCOMEQB</a>
<a href="#IixVPCOMEQD">VPCOMEQD</a>
<a href="#IixVPCOMEQQ">VPCOMEQQ</a>
<a href="#IixVPCOMEQUB">VPCOMEQUB</a>
<a href="#IixVPCOMEQUD">VPCOMEQUD</a>
<a href="#IixVPCOMEQUQ">VPCOMEQUQ</a>
<a href="#IixVPCOMEQUW">VPCOMEQUW</a>
<a href="#IixVPCOMEQW">VPCOMEQW</a>
<a href="#IixVPCOMFALSEB">VPCOMFALSEB</a>
<a href="#IixVPCOMFALSED">VPCOMFALSED</a>
<a href="#IixVPCOMFALSEQ">VPCOMFALSEQ</a>
<a href="#IixVPCOMFALSEUB">VPCOMFALSEUB</a>
<a href="#IixVPCOMFALSEUD">VPCOMFALSEUD</a>
<a href="#IixVPCOMFALSEUQ">VPCOMFALSEUQ</a>
<a href="#IixVPCOMFALSEUW">VPCOMFALSEUW</a>
<a href="#IixVPCOMFALSEW">VPCOMFALSEW</a>
<a href="#IixVPCOMGEB">VPCOMGEB</a>
<a href="#IixVPCOMGED">VPCOMGED</a>
<a href="#IixVPCOMGEQ">VPCOMGEQ</a>
<a href="#IixVPCOMGEUB">VPCOMGEUB</a>
<a href="#IixVPCOMGEUD">VPCOMGEUD</a>
<a href="#IixVPCOMGEUQ">VPCOMGEUQ</a>
<a href="#IixVPCOMGEUW">VPCOMGEUW</a>
<a href="#IixVPCOMGEW">VPCOMGEW</a>
<a href="#IixVPCOMGTB">VPCOMGTB</a>
<a href="#IixVPCOMGTD">VPCOMGTD</a>
<a href="#IixVPCOMGTQ">VPCOMGTQ</a>
<a href="#IixVPCOMGTUB">VPCOMGTUB</a>
<a href="#IixVPCOMGTUD">VPCOMGTUD</a>
<a href="#IixVPCOMGTUQ">VPCOMGTUQ</a>
<a href="#IixVPCOMGTUW">VPCOMGTUW</a>
<a href="#IixVPCOMGTW">VPCOMGTW</a>
<a href="#IixVPCOMLEB">VPCOMLEB</a>
<a href="#IixVPCOMLED">VPCOMLED</a>
<a href="#IixVPCOMLEQ">VPCOMLEQ</a>
<a href="#IixVPCOMLEUB">VPCOMLEUB</a>
<a href="#IixVPCOMLEUD">VPCOMLEUD</a>
<a href="#IixVPCOMLEUQ">VPCOMLEUQ</a>
<a href="#IixVPCOMLEUW">VPCOMLEUW</a>
<a href="#IixVPCOMLEW">VPCOMLEW</a>
<a href="#IixVPCOMLTB">VPCOMLTB</a>
<a href="#IixVPCOMLTD">VPCOMLTD</a>
<a href="#IixVPCOMLTQ">VPCOMLTQ</a>
<a href="#IixVPCOMLTUB">VPCOMLTUB</a>
<a href="#IixVPCOMLTUD">VPCOMLTUD</a>
<a href="#IixVPCOMLTUQ">VPCOMLTUQ</a>
<a href="#IixVPCOMLTUW">VPCOMLTUW</a>
<a href="#IixVPCOMLTW">VPCOMLTW</a>
<a href="#IixVPCOMNEQB">VPCOMNEQB</a>
<a href="#IixVPCOMNEQD">VPCOMNEQD</a>
<a href="#IixVPCOMNEQQ">VPCOMNEQQ</a>
<a href="#IixVPCOMNEQUB">VPCOMNEQUB</a>
<a href="#IixVPCOMNEQUD">VPCOMNEQUD</a>
<a href="#IixVPCOMNEQUQ">VPCOMNEQUQ</a>
<a href="#IixVPCOMNEQUW">VPCOMNEQUW</a>
<a href="#IixVPCOMNEQW">VPCOMNEQW</a>
<a href="#IixVPCOMQ">VPCOMQ</a>
<a href="#IixVPCOMTRUEB">VPCOMTRUEB</a>
<a href="#IixVPCOMTRUED">VPCOMTRUED</a>
<a href="#IixVPCOMTRUEQ">VPCOMTRUEQ</a>
<a href="#IixVPCOMTRUEUB">VPCOMTRUEUB</a>
<a href="#IixVPCOMTRUEUD">VPCOMTRUEUD</a>
<a href="#IixVPCOMTRUEUQ">VPCOMTRUEUQ</a>
<a href="#IixVPCOMTRUEUW">VPCOMTRUEUW</a>
<a href="#IixVPCOMTRUEW">VPCOMTRUEW</a>
<a href="#IixVPCOMUB">VPCOMUB</a>
<a href="#IixVPCOMUD">VPCOMUD</a>
<a href="#IixVPCOMUQ">VPCOMUQ</a>
<a href="#IixVPCOMUW">VPCOMUW</a>
<a href="#IixVPCOMW">VPCOMW</a>
<a href="#IixVPHADDBD">VPHADDBD</a>
<a href="#IixVPHADDBQ">VPHADDBQ</a>
<a href="#IixVPHADDBW">VPHADDBW</a>
<a href="#IixVPHADDDQ">VPHADDDQ</a>
<a href="#IixVPHADDUBD">VPHADDUBD</a>
<a href="#IixVPHADDUBQ">VPHADDUBQ</a>
<a href="#IixVPHADDUBW">VPHADDUBW</a>
<a href="#IixVPHADDUDQ">VPHADDUDQ</a>
<a href="#IixVPHADDUWD">VPHADDUWD</a>
<a href="#IixVPHADDUWQ">VPHADDUWQ</a>
<a href="#IixVPHADDWD">VPHADDWD</a>
<a href="#IixVPHADDWQ">VPHADDWQ</a>
<a href="#IixVPHSUBBW">VPHSUBBW</a>
<a href="#IixVPHSUBDQ">VPHSUBDQ</a>
<a href="#IixVPHSUBWD">VPHSUBWD</a>
<a href="#IixVPMACSDD">VPMACSDD</a>
<a href="#IixVPMACSDQH">VPMACSDQH</a>
<a href="#IixVPMACSDQL">VPMACSDQL</a>
<a href="#IixVPMACSSDD">VPMACSSDD</a>
<a href="#IixVPMACSSDQH">VPMACSSDQH</a>
<a href="#IixVPMACSSDQL">VPMACSSDQL</a>
<a href="#IixVPMACSSWD">VPMACSSWD</a>
<a href="#IixVPMACSSWW">VPMACSSWW</a>
<a href="#IixVPMACSWD">VPMACSWD</a>
<a href="#IixVPMACSWW">VPMACSWW</a>
<a href="#IixVPMADCSSWD">VPMADCSSWD</a>
<a href="#IixVPMADCSWD">VPMADCSWD</a>
<a href="#IixVPPERM">VPPERM</a>
<a href="#IixVPROTB">VPROTB</a>
<a href="#IixVPROTD">VPROTD</a>
<a href="#IixVPROTQ">VPROTQ</a>
<a href="#IixVPROTW">VPROTW</a>
<a href="#IixVPSHAB">VPSHAB</a>
<a href="#IixVPSHAD">VPSHAD</a>
<a href="#IixVPSHAQ">VPSHAQ</a>
<a href="#IixVPSHAW">VPSHAW</a>
<a href="#IixVPSHLB">VPSHLB</a>
<a href="#IixVPSHLD">VPSHLD</a>
<a href="#IixVPSHLQ">VPSHLQ</a>
<a href="#IixVPSHLW">VPSHLW</a>
</span><!--IixAList-->
</h1>
<dl id="IixHandlers"><dt><a href="#top">&uarr; IixHandlers</a> </dt>
<dd> assemble AMD-specifix instructions encodable with <b>XOP</b> prefix only.
<dt>See also</dt><dd><a class="EXT" href="ii.htm#IiHandlers">IiHandlers</a>,
<a class="EXT" href="../eadoc/links.htm#AMDVol6">[AMDVol6]</a>.</dd>
</dl><pre>
iix PROGRAM FORMAT=COFF,MODEL=FLAT,WIDTH=32
    INCLUDEHEAD euroasm.htm, \  Interface (structures, symbols and macros) of other modules used in this source.
                ea.htm,eaopt.htm,exp.htm,ii.htm,msg.htm,pgm.htm,pgmopt.htm,sss.htm,stm.htm,sym.htm
</pre><br class="CLEAR"/><pre>
iix HEAD ; Start of module interface.
</pre>

<dl id="IixList"><dt><a href="#top">&uarr; %IixList</a></dt><dd> enumerates machine instructions
<!---->of this family which &euro;ASM can assemble.
<br/>Each instruction declared in <code>%IixList</code> requires the corresponding
<a href="#IixHandlers">handler</a> in this file.</dd>
<dt>See also</dt><dd><a class="EXT" href="dict.htm#DictLookupIi">DictLookupIi</a></dd></dl><pre>
%IixList %SET \
BLCFILL, \
BLSFILL, \
BLCS, \
TZMSK, \
BLCIC, \
BLSIC, \
T1MSKC, \
BLCMSK, \
BLCI, \
LLWPCB, \
SLWPCB, \
LWPINS, \
LWPVAL, \
VPMACSSWW, \
VPMACSSWD, \
VPMACSSDQL, \
VPMACSSDD, \
VPMACSSDQH, \
VPMACSWW, \
VPMACSWD, \
VPMACSDQL, \
VPMACSDD, \
VPMACSDQH, \
VPMADCSSWD, \
VPMADCSWD, \
VPPERM, \
VPROTB, \
VPROTW, \
VPROTD, \
VPROTQ, \
VPSHLB, \
VPSHLW, \
VPSHLD, \
VPSHLQ, \
VPSHAB, \
VPSHAW, \
VPSHAD, \
VPSHAQ, \
VPCMOV, \
VFRCZPS, \
VFRCZPD, \
VFRCZSS, \
VFRCZSD, \
VPHADDBW, \
VPHADDBD, \
VPHADDBQ, \
VPHADDWD, \
VPHADDWQ, \
VPHADDUBW, \
VPHADDUBD, \
VPHADDUBQ, \
VPHADDUWD, \
VPHADDUWQ, \
VPHADDDQ, \
VPHADDUDQ, \
VPHSUBBW, \
VPHSUBWD, \
VPHSUBDQ, \
VPCOMB, \
VPCOMLTB, \
VPCOMLEB, \
VPCOMGTB, \
VPCOMGEB, \
VPCOMEQB, \
VPCOMNEQB, \
VPCOMFALSEB, \
VPCOMTRUEB, \
VPCOMW, \
VPCOMLTW, \
VPCOMLEW, \
VPCOMGTW, \
VPCOMGEW, \
VPCOMEQW, \
VPCOMNEQW, \
VPCOMFALSEW, \
VPCOMTRUEW, \
VPCOMD, \
VPCOMLTD, \
VPCOMLED, \
VPCOMGTD, \
VPCOMGED, \
VPCOMEQD, \
VPCOMNEQD, \
VPCOMFALSED, \
VPCOMTRUED, \
VPCOMQ, \
VPCOMLTQ, \
VPCOMLEQ, \
VPCOMGTQ, \
VPCOMGEQ, \
VPCOMEQQ, \
VPCOMNEQQ, \
VPCOMFALSEQ, \
VPCOMTRUEQ, \
VPCOMUB, \
VPCOMLTUB, \
VPCOMLEUB, \
VPCOMGTUB, \
VPCOMGEUB, \
VPCOMEQUB, \
VPCOMNEQUB, \
VPCOMFALSEUB, \
VPCOMTRUEUB, \
VPCOMUW, \
VPCOMLTUW, \
VPCOMLEUW, \
VPCOMGTUW, \
VPCOMGEUW, \
VPCOMEQUW, \
VPCOMNEQUW, \
VPCOMFALSEUW, \
VPCOMTRUEUW, \
VPCOMUD, \
VPCOMLTUD, \
VPCOMLEUD, \
VPCOMGTUD, \
VPCOMGEUD, \
VPCOMEQUD, \
VPCOMNEQUD, \
VPCOMFALSEUD, \
VPCOMTRUEUD, \
VPCOMUQ, \
VPCOMLTUQ, \
VPCOMLEUQ, \
VPCOMGTUQ, \
VPCOMGEUQ, \
VPCOMEQUQ, \
VPCOMNEQUQ, \
VPCOMFALSEUQ, \
VPCOMTRUEUQ, \
<!--IixList-->
;
</pre><pre>
  ENDHEAD iix ; End of module interface.
</pre>

<dl id="IixBLCFILL">
<dt><a href="#IixHandlers">&uarr; BLCFILL</a></dt>
<dd>Fill From Lowest Clear Bit</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>BLCFILL reg32, reg/mem32 
</th><td>8F RXB.09 0.dest.0.00 01 /1
</td></tr>
<tr><th>BLCFILL reg64, reg/mem64 
</th><td>8F RXB.09 1.dest.0.00 01 /1
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4510.htm">t4510</a>
</dd>
</dl><pre>
IixBLCFILL:: PROC
    IiModRM /1
.rm:IiRequire AMD, XOP
    IiOpEn VM
    IiEmitOpcode 0x01
    IiDispatchFormat  r32.r32, r32.mem, r64.r64, r64.mem
.r32.r32:
.r32.mem:
    IiEmitPrefix XOP.MAP9.W0.L0
    RET
.r64.r64:
.r64.mem:
    IiEmitPrefix XOP.MAP9.W1.L0
    RET
  ENDP IixBLCFILL::
</pre>

<dl id="IixBLSFILL">
<dt><a href="#IixBLCFILL">&uarr; BLSFILL</a></dt>
<dd>Fill From Lowest Set Bit</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>BLSFILL reg32, reg/mem32 
</th><td>8F RXB.09 0.dest.0.00 01 /2
</td></tr>
<tr><th>BLSFILL reg64, reg/mem64 
</th><td>8F RXB.09 1.dest.0.00 01 /2
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4510.htm">t4510</a>
</dd>
</dl><pre>
IixBLSFILL:: PROC
    IiModRM /2
    JMP IixBLCFILL.rm:
  ENDP IixBLSFILL::
</pre>

<dl id="IixBLCS">
<dt><a href="#IixBLCFILL">&uarr; BLCS</a></dt>
<dd>Set Lowest Clear Bit</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>BLCS reg32, reg/mem32
</th><td>8F RXB.09 0.dest.0.00 01 /3
</td></tr>
<tr><th>BLCS reg64, reg/mem64 
</th><td>8F RXB.09 1.dest.0.00 01 /3
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4510.htm">t4510</a>
</dd>
</dl><pre>
IixBLCS:: PROC
    IiModRM /3
    JMP IixBLCFILL.rm:
  ENDP IixBLCS::
</pre>

<dl id="IixTZMSK">
<dt><a href="#IixBLCFILL">&uarr; TZMSK</a></dt>
<dd>Mask From Trailing Zeros</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>TZMSK reg32, reg/mem32 
</th><td>8F RXB.09 0.dest.0.00 01 /4
</td></tr>
<tr><th>TZMSK reg64, reg/mem64 
</th><td>8F RXB.09 1.dest.0.00 01 /4
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4510.htm">t4510</a>
</dd>
</dl><pre>
IixTZMSK:: PROC
    IiModRM /4
    JMP IixBLCFILL.rm:
  ENDP IixTZMSK::
</pre>

<dl id="IixBLCIC">
<dt><a href="#IixBLCFILL">&uarr; BLCIC</a></dt>
<dd>Isolate Lowest Clear Bit and Complement</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>BLCIC reg32, reg/mem32 
</th><td>8F RXB.09 0.dest.0.00 01 /5
</td></tr>
<tr><th>BLCIC reg64, reg/mem64 
</th><td>8F RXB.09 1.dest.0.00 01 /5</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4510.htm">t4510</a>
</dd>
</dl><pre>
IixBLCIC:: PROC
    IiModRM /5
    JMP IixBLCFILL.rm:
  ENDP IixBLCIC::
</pre>

<dl id="IixBLSIC">
<dt><a href="#IixBLCFILL">&uarr; BLSIC</a></dt>
<dd>Isolate Lowest Set Bit and Complement</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>BLSIC reg32, reg/mem32 
</th><td>8F RXB.09 0.dest.0.00 01 /6
</td></tr>
<tr><th>BLSIC reg64, reg/mem64 
</th><td>8F RXB.09 1.dest.0.00 01 /6</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4510.htm">t4510</a>
</dd>
</dl><pre>
IixBLSIC:: PROC
    IiModRM /6
    JMP IixBLCFILL.rm:
  ENDP IixBLSIC::
</pre>

<dl id="IixT1MSKC">
<dt><a href="#IixBLCFILL">&uarr; T1MSKC</a></dt>
<dd>Inverse Mask From Trailing Ones</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>T1MSKC reg32, reg/mem32 
</th><td>8F RXB.09 0.dest.0.00 01 /7
</td></tr>
<tr><th>T1MSKC reg64, reg/mem64 
</th><td>8F RXB.09 1.dest.0.00 01 /7</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4510.htm">t4510</a>
</dd>
</dl><pre>
IixT1MSKC:: PROC
    IiModRM /7
    JMP IixBLCFILL.rm:
  ENDP IixT1MSKC::
</pre>

<dl id="IixBLCMSK">
<dt><a href="#IixHandlers">&uarr; BLCMSK</a></dt>
<dd>Mask From Lowest Clear Bit</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>BLCMSK reg32, reg/mem32 
</th><td>8F RXB.09 0.dest.0.00 02 /1
</td></tr>
<tr><th>BLCMSK reg64, reg/mem64 
</th><td>8F RXB.09 1.dest.0.00 02 /1
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4512.htm">t4512</a>
</dd>
</dl><pre>
IixBLCMSK:: PROC
    IiModRM /1
.rm:IiRequire AMD, XOP, PROT
    IiOpEn VM
    IiEmitOpcode 0x02
    IiDispatchFormat  r32.r32, r32.mem, r64.r64, r64.mem
.r32.r32:
.r32.mem:
    IiEmitPrefix XOP.MAP9.W0.L0
    RET
.r64.r64:
.r64.mem:
    IiEmitPrefix XOP.MAP9.W1.L0
    RET
  ENDP IixBLCMSK::
</pre>

<dl id="IixBLCI">
<dt><a href="#IixBLCMSK">&uarr; BLCI</a></dt>
<dd>Isolate Lowest Clear Bit</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>BLCI reg32, reg/mem32 
</th><td>8F RXB.09 0.dest.0.00 02 /6
</td></tr>
<tr><th>BLCI reg64, reg/mem64 
</th><td>8F RXB.09 1.dest.0.00 02 /6
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4512.htm">t4512</a>
</dd>
</dl><pre>
IixBLCI:: PROC
    IiModRM /6
    JMP IixBLCMSK.rm:
  ENDP IixBLCI::
</pre>

<dl id="IixLLWPCB">
<dt><a href="#IixHandlers">&uarr; LLWPCB</a></dt>
<dd>Load Lightweight Profiling Control Block Address</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>LLWPCB reg32 
</th><td>8F RXB.09 0.1111.0.00 12 /0
</td></tr>
<tr><th>LLWPCB reg64 
</th><td>8F RXB.09 1.1111.0.00 12 /0
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4512.htm">t4512</a>
</dd>
</dl><pre>
IixLLWPCB:: PROC
     IiModRM /0
.rm: IiRequire AMD, XOP, PROT
     IiOpEn M
     IiEmitOpcode 0x12
     IiDispatchFormat  r32, r64
.r32:IiEmitPrefix XOP.MAP9.W0.L0
     RET
.r64:IiEmitPrefix XOP.MAP9.W1.L0
     RET
  ENDP IixLLWPCB::
</pre>

<dl id="IixSLWPCB">
<dt><a href="#IixSLWPCB">&uarr; SLWPCB</a></dt>
<dd>Store Lightweight Profiling Control Block Address</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>SLWPCB reg32 
</th><td>8F RXB.09 0.1111.0.00 12 /1
</td></tr>
<tr><th>SLWPCB reg64 
</th><td>8F RXB.09 1.1111.0.00 12 /1
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4512.htm">t4512</a>
</dd>
</dl><pre>
IixSLWPCB:: PROC
    IiModRM /1
    JMP IixLLWPCB.rm:
  ENDP IixSLWPCB::
</pre>

<dl id="IixLWPINS">
<dt><a href="#IixHandlers">&uarr; LWPINS</a></dt>
<dd>Lightweight Profiling Insert Record</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>LWPINS reg32.vvvv, reg/mem32, imm32 
</th><td>8F RXB.0A 0.src1.0.00 12 /0 /imm32
</td></tr>
<tr><th>LWPINS reg64.vvvv, reg/mem32, imm32 
</th><td>8F RXB.0A 1.src1.0.00 12 /0 /imm32
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4512.htm">t4512</a>
</dd>
</dl><pre>
IixLWPINS:: PROC
    IiModRM /0
.rm:IiRequire AMD, XOP, PROT
    IiOpEn VM
    IiEmitOpcode 0x12
    IiEmitImm Operand3, DWORD
    IiDispatchFormat  r32.r32.imm, r32.mem.imm, r64.r32.imm, r64.mem.imm
.r32.r32.imm:
.r32.mem.imm:
    IiEmitPrefix XOP.MAP10.W0.L0
    RET
.r64.r32.imm:
.r64.mem.imm:
    IiEmitPrefix XOP.MAP10.W1.L0
    RET
  ENDP IixLWPINS::
</pre>

<dl id="IixLWPVAL">
<dt><a href="#IixLWPINS">&uarr; LWPVAL</a></dt>
<dd>Lightweight Profiling Insert Value</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>LWPVAL reg32.vvvv, reg/mem32, imm32 
</th><td>8F RXB.0A 0.src1.0.00 12 /1 /imm32
</td></tr>
<tr><th>LWPVAL reg64.vvvv, reg/mem32, imm32 
</th><td>8F RXB.0A 1.src1.0.00 12 /1 /imm32
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4512.htm">t4512</a>
</dd>
</dl><pre>
IixLWPVAL:: PROC
    IiModRM /1
    JMP IixLWPINS.rm:
  ENDP IixLWPVAL::
</pre>

<dl id="IixVPMACSSWW">
<dt><a href="#IixHandlers">&uarr; VPMACSSWW</a></dt>
<dd>Packed Multiply Accumulate Signed Word to  Signed Word with Saturation</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPMACSSWW xmm1, xmm2, xmm3/mem128, xmm4
</th><td>8F RXB.08 0.xsrc1.0.00 85 /r /is4
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4520.htm">t4520</a>
</dd>
</dl><pre>
IixVPMACSSWW:: PROC
    IiEmitOpcode 0x85
.op:IiRequire AMD, XOP
    IiOpEn RVM
    IiModRM /r
    IiIs4 Operand4
    IiDispatchFormat  xmm.xmm.xmm.xmm, xmm.xmm.mem.xmm
.xmm.xmm.xmm.xmm:
.xmm.xmm.mem.xmm:
    IiEmitPrefix XOP.MAP8.W0.L0
    RET
  ENDP IixVPMACSSWW::
</pre>

<dl id="IixVPMACSSWD">
<dt><a href="#IixVPMACSSWW">&uarr; VPMACSSWD</a></dt>
<dd>Packed Multiply Accumulate Signed Word to  Signed Doubleword with Saturation</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPMACSSWD xmm1, xmm2, xmm3/mem128, xmm4 
</th><td>8F RXB.08 0.xsrc1.0.00 86 /r /is4
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4520.htm">t4520</a>
</dd>
</dl><pre>
IixVPMACSSWD:: PROC
    IiEmitOpcode 0x86
    JMP IixVPMACSSWW.op:
  ENDP IixVPMACSSWD::
</pre>

<dl id="IixVPMACSSDQL">
<dt><a href="#IixVPMACSSWW">&uarr; VPMACSSDQL</a></dt>
<dd>Packed Multiply Accumulate Signed Low  Doubleword to Signed Quadword with  Saturation</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPMACSSDQL xmm1, xmm2, xmm3/mem128, xmm4
</th><td>8F RXB.08 0.xsrc1.0.00 87 /r /is4
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4520.htm">t4520</a>
</dd>
</dl><pre>
IixVPMACSSDQL:: PROC
    IiEmitOpcode 0x87
    JMP IixVPMACSSWW.op:
  ENDP IixVPMACSSDQL::
</pre>

<dl id="IixVPMACSSDD">
<dt><a href="#IixVPMACSSWW">&uarr; VPMACSSDD</a></dt>
<dd>Packed Multiply Accumulate Signed Doubleword  to Signed Doubleword with Saturation</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPMACSSDD xmm1, xmm2, xmm3/mem128, xmm4 
</th><td>8F RXB.08 0.xsrc1.0.00 8E /r /is4
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4520.htm">t4520</a>
</dd>
</dl><pre>
IixVPMACSSDD:: PROC
    IiEmitOpcode 0x8E
    JMP IixVPMACSSWW.op:
  ENDP IixVPMACSSDD::
</pre>

<dl id="IixVPMACSSDQH">
<dt><a href="#IixVPMACSSWW">&uarr; VPMACSSDQH</a></dt>
<dd>Packed Multiply Accumulate Signed High  Doubleword to Signed Quadword with  Saturation</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPMACSSDQH xmm1, xmm2, xmm3/mem128, xmm4 
</th><td>8F RXB.08 0.xsrc1.0.00 8F /r is4
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4520.htm">t4520</a>
</dd>
</dl><pre>
IixVPMACSSDQH:: PROC
    IiEmitOpcode 0x8F
    JMP IixVPMACSSWW.op:
  ENDP IixVPMACSSDQH::
</pre>

<dl id="IixVPMACSWW">
<dt><a href="#IixVPMACSSWW">&uarr; VPMACSWW</a></dt>
<dd>Packed Multiply Accumulate Signed Word to  Signed Word</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPMACSWW xmm1, xmm2, xmm3/mem128, xmm4 
</th><td>8F RXB.08 0.xsrc1.0.00 95 /r /is4
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4522.htm">t4522</a>
</dd>
</dl><pre>
IixVPMACSWW:: PROC
    IiEmitOpcode 0x95
    JMP IixVPMACSSWW.op:
  ENDP IixVPMACSWW::
</pre>

<dl id="IixVPMACSWD">
<dt><a href="#IixVPMACSSWW">&uarr; VPMACSWD</a></dt>
<dd>Packed Multiply Accumulate Signed Word to  Signed Doubleword</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPMACSWD xmm1, xmm2, xmm3/mem128, xmm4 
</th><td>8F RXB.08 0.xsrc1.0.00 96 /r /is4
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4522.htm">t4522</a>
</dd>
</dl><pre>
IixVPMACSWD:: PROC
    IiEmitOpcode 0x96
    JMP IixVPMACSSWW.op:
  ENDP IixVPMACSWD::
</pre>

<dl id="IixVPMACSDQL">
<dt><a href="#IixVPMACSSWW">&uarr; VPMACSDQL</a></dt>
<dd>Packed Multiply Accumulate Signed Low  Doubleword to Signed Quadword</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPMACSDQL xmm1, xmm2, xmm3/mem128, xmm4 
</th><td>8F RXB.8 0.xsrc1.0.00 97 /r /is4
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4522.htm">t4522</a>
</dd>
</dl><pre>
IixVPMACSDQL:: PROC
    IiEmitOpcode 0x97
    JMP IixVPMACSSWW.op:
  ENDP IixVPMACSDQL::
</pre>

<dl id="IixVPMACSDD">
<dt><a href="#IixVPMACSSWW">&uarr; VPMACSDD</a></dt>
<dd>Packed Multiply Accumulate  Signed Doubleword to Signed Doubleword</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPMACSDD xmm1, xmm2, xmm3/mem128, xmm4 
</th><td>8F RXB.08 0.xsrc1.0.00 9E /r /is4
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4522.htm">t4522</a>
</dd>
</dl><pre>
IixVPMACSDD:: PROC
    IiEmitOpcode 0x9E
    JMP IixVPMACSSWW.op:
  ENDP IixVPMACSDD::
</pre>

<dl id="IixVPMACSDQH">
<dt><a href="#IixVPMACSSWW">&uarr; VPMACSDQH</a></dt>
<dd>Packed Multiply Accumulate Signed High  Doubleword to Signed Quadword</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPMACSDQH xmm1, xmm2, xmm3/mem128, xmm4 
</th><td>8F RXB.08 0.xsrc1.0.00 9F /r /is4
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4522.htm">t4522</a>
</dd>
</dl><pre>
IixVPMACSDQH:: PROC
    IiEmitOpcode 0x9F
    JMP IixVPMACSSWW.op:
  ENDP IixVPMACSDQH::
</pre>

<dl id="IixVPMADCSSWD">
<dt><a href="#IixVPMACSSWW">&uarr; VPMADCSSWD</a></dt>
<dd>Packed Multiply, Add and Accumulate Signed  Word to Signed Doubleword with Saturation</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPMADCSSWD xmm1, xmm2, xmm3/mem128, xmm4 
</th><td>8F RXB.08 0.xsrc1.0.00 A6 /r /is4
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4524.htm">t4524</a>
</dd>
</dl><pre>
IixVPMADCSSWD:: PROC
    IiEmitOpcode 0xA6
    JMP IixVPMACSSWW.op:
  ENDP IixVPMADCSSWD::
</pre>

<dl id="IixVPMADCSWD">
<dt><a href="#IixVPMACSSWW">&uarr; VPMADCSWD</a></dt>
<dd>Packed Multiply Add and Accumulate Signed  Word to Signed Doubleword</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPMADCSWD xmm1, xmm2, xmm3/mem128, xmm4
</th><td>8F RXB.08 0.xsrc1.0.00 B6 /r /is4
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4524.htm">t4524</a>
</dd>
</dl><pre>
IixVPMADCSWD:: PROC
    IiEmitOpcode 0xB6
    JMP IixVPMACSSWW.op:
  ENDP IixVPMADCSWD::
</pre>

<dl id="IixVPPERM">
<dt><a href="#IixHandlers">&uarr; VPPERM</a></dt>
<dd>Packed Permute Bytes</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPPERM xmm1, xmm2, xmm3, xmm4/mem128 
</th><td>8F RXB.8 1.xsrc1.0.00 A3 /r is4
</td></tr>
<tr><th>VPPERM xmm1, xmm2, xmm3/mem128, xmm4 
</th><td>8F RXB.8 0.xsrc1.0.00 A3 /r is4
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4524.htm">t4524</a>
</dd>
</dl><pre>
IixVPPERM:: PROC
    IiAllowModifier CODE
    IiRequire AMD, XOP
    IiEmitOpcode 0xA3
    IiModRM /r
    IiDispatchFormat  xmm.xmm.xmm.xmm, xmm.xmm.xmm.mem, xmm.xmm.mem.xmm
.xmm.xmm.xmm.mem:
    IiEncoding CODE=LONG
    IiSwap Operand3, Operand4
    IiOpEn RVM
    IiIs4 Operand4
    IiEmitPrefix XOP.MAP8.W1.L0
    RET
.xmm.xmm.xmm.xmm:
    IiDispatchCode LONG=.xmm.xmm.xmm.mem:
.xmm.xmm.mem.xmm:
    IiEncoding CODE=SHORT
    IiOpEn RVM
    IiIs4 Operand4
    IiEmitPrefix XOP.MAP8.W0.L0
    RET
  ENDP IixVPPERM::
</pre>

<dl id="IixVPCMOV">
<dt><a href="#IixHandlers">&uarr; VPCMOV</a></dt>
<dd>Vector Conditional Moves</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCMOV xmm1, xmm2, xmm3/mem128, xmm4
</th><td>8F RXB.08 0.xsrc1.0.00 A2 /r imm[7:4]
</td></tr>
<tr><th>VPCMOV ymm1, ymm2, ymm3/mem256, ymm4
</th><td>8F RXB.08 0.ysrc1.1.00 A2 /r imm[7:4]
</td></tr>
<tr><th>VPCMOV xmm1, xmm2, xmm3, xmm4/mem128
</th><td>8F RXB.08 1.xsrc1.0.00 A2 /r imm[7:4]
</td></tr>
<tr><th>VPCMOV ymm1, ymm2, ymm3, ymm4/mem256
</th><td>8F RXB.08 1.ysrc1.1.00 A2 /r imm[7:4]
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4524.htm">t4524</a>
</dd>
</dl><pre>
IixVPCMOV:: PROC
    IiAllowModifier CODE
    IiRequire AMD, XOP
    IiEmitOpcode 0xA2
    IiModRM /r
    IiDispatchFormat  xmm.xmm.xmm.xmm, xmm.xmm.mem.xmm, ymm.ymm.ymm.ymm, \
                      ymm.ymm.mem.ymm, xmm.xmm.xmm.mem, ymm.ymm.ymm.mem
.xmm.xmm.xmm.mem:
    IiEmitPrefix XOP.MAP8.W1.L0
.L: IiEncoding CODE=LONG
    IiSwap Operand3, Operand4
    IiOpEn RVM
    IiIs4 Operand4
    RET
.ymm.ymm.ymm.mem:
    IiEmitPrefix XOP.MAP8.W1.L1
    JMP .L:
.xmm.xmm.xmm.xmm:
    IiDispatchCode LONG=.xmm.xmm.xmm.mem:
.xmm.xmm.mem.xmm:
    IiEmitPrefix XOP.MAP8.W0.L0
.S: IiEncoding CODE=SHORT
    IiOpEn RVM
    IiIs4 Operand4
    RET
.ymm.ymm.ymm.ymm:
    IiDispatchCode LONG=.ymm.ymm.ymm.mem:
.ymm.ymm.mem.ymm:
    IiEmitPrefix XOP.MAP8.W0.L1
    JMP .S:
  ENDP IixVPCMOV::
</pre>

<dl id="IixVPROTB">
<dt><a href="#IixHandlers">&uarr; VPROTB</a></dt>
<dd>Packed Rotate Bytes</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPROTB xmm1, xmm2/mem128, xmm8 
</th><td>8F RXB.09 0.xcnt.0.00 90 /r
</td></tr>
<tr><th>VPROTB xmm1, xmm2, xmm3/mem128 
</th><td>8F RXB.09 1.xsrc.0.00 90 /r
</td></tr>
<tr><th>VPROTB xmm1, xmm2/mem128, imm8 
</th><td>8F RXB.08 0.1111.0.00 C0 /r /ib
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4526.htm">t4526</a>
</dd>
</dl><pre>
IixVPROTB:: PROC
    MOV CL,0x90
    MOV CH,0xC0
.op:IiRequire AMD, XOP
    IiAllowModifier CODE
    IiModRM /r
    IiDispatchFormat  xmm.xmm.xmm, xmm.mem.xmm, xmm.xmm.mem, xmm.xmm.imm, xmm.mem.imm
.xmm.xmm.mem:
    IiEncoding CODE=LONG
    IiEmitOpcode ECX
    IiOpEn RVM
    IiEmitPrefix XOP.MAP9.W1.L0
    RET
.xmm.xmm.xmm:
    IiDispatchCode LONG=.xmm.xmm.mem:
.xmm.mem.xmm:
    IiEncoding CODE=SHORT
    IiEmitOpcode ECX
    IiOpEn RMV
    IiEmitPrefix XOP.MAP9.W0.L0
    RET
.xmm.xmm.imm:
.xmm.mem.imm:
    SHR ECX,8
    IiEncoding CODE=SHORT
    IiEmitOpcode ECX
    IiOpEn RM
    IiEmitImm Operand3, BYTE
    IiEmitPrefix XOP.MAP8.W0.L0
    RET
  ENDP IixVPROTB::
</pre>

<dl id="IixVPROTW">
<dt><a href="#IixVPROTB">&uarr; VPROTW</a></dt>
<dd>Packed Rotate Words</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPROTW xmm1, xmm2/mem128, xmm3 
</th><td>8F RXB.09 0.xcnt.0.00 91 /r
</td></tr>
<tr><th>VPROTW xmm1, xmm2, xmm3/mem128 
</th><td>8F RXB.09 1.xsrc.0.00 91 /r
</td></tr>
<tr><th>VPROTW xmm1, xmm2/mem128, imm8 
</th><td>8F RXB.08 0.1111.0.00 C1 /r /ib
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4526.htm">t4526</a>
</dd>
</dl><pre>
IixVPROTW:: PROC
    MOV CL,0x91
    MOV CH,0xC1
    JMP IixVPROTB.op:
  ENDP IixVPROTW::
</pre>

<dl id="IixVPROTD">
<dt><a href="#IixVPROTB">&uarr; VPROTD</a></dt>
<dd>Packed Rotate Doublewords</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPROTD xmm1, xmm2/mem128, xmm3 
</th><td>8F RXB.09 0.xcnt.0.00 92 /r
</td></tr>
<tr><th>VPROTD xmm1, xmm2, xmm3/mem128 
</th><td>8F RXB.09 1.xsrc.0.00 92 /r
</td></tr>
<tr><th>VPROTD xmm1, xmm2/mem128, imm8 
</th><td>8F RXB.08 0.1111.0.00 C2 /ib
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4526.htm">t4526</a>
</dd>
</dl><pre>
IixVPROTD:: PROC
    MOV CL,0x92
    MOV CH,0xC2
    JMP IixVPROTB.op:
  ENDP IixVPROTD::
</pre>

<dl id="IixVPROTQ">
<dt><a href="#IixVPROTB">&uarr; VPROTQ</a></dt>
<dd>Packed Rotate Quadwords</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPROTQ xmm1, xmm2/mem128, xmm3 
</th><td>8F RXB.09 0.xcnt.0.00 93 /r
</td></tr>
<tr><th>VPROTQ xmm1, xmm2, xmm3/mem128 
</th><td>8F RXB.09 1.xsrc.0.00 93 /r
</td></tr>
<tr><th>VPROTQ xmm1, xmm2/mem128, imm8 
</th><td>8F RXB.08 0.1111.0.00 C3 /ib
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4526.htm">t4526</a>
</dd>
</dl><pre>
IixVPROTQ:: PROC
    MOV CL,0x93
    MOV CH,0xC3
    JMP IixVPROTB.op:
  ENDP IixVPROTQ::
</pre>

<dl id="IixVPSHLB">
<dt><a href="#IixHandlers">&uarr; VPSHLB</a></dt>
<dd>Packed Shift Logical Bytes</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPSHLB xmm1, xmm2/mem128, xmm3 
</th><td>8F RXB.9 0.xcnt.0.00 94 /r
</td></tr>
<tr><th>VPSHLB xmm1, xmm2, xmm3/mem128 
</th><td>8F RXB.9 1.xsrc.0.00 94 /r
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4530.htm">t4530</a>
</dd>
</dl><pre>
IixVPSHLB:: PROC
    IiEmitOpcode 0x94
.op:IiRequire AMD, XOP
    IiAllowModifier CODE
    IiModRM /r
    IiDispatchFormat  xmm.xmm.xmm, xmm.mem.xmm, xmm.xmm.mem
.xmm.xmm.mem:
    IiEncoding CODE=LONG
    IiOpEn RVM
    IiEmitPrefix XOP.MAP9.W1.L0
    RET
.xmm.xmm.xmm:
    IiDispatchCode LONG=.xmm.xmm.mem:
.xmm.mem.xmm:
    IiEncoding CODE=SHORT
    IiOpEn RMV
    IiEmitPrefix XOP.MAP9.W0.L0
    RET
  ENDP IixVPSHLB::
</pre>

<dl id="IixVPSHLW">
<dt><a href="#IixVPSHLB">&uarr; VPSHLW</a></dt>
<dd>Packed Shift Logical Words</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPSHLW xmm1, xmm3/mem128, xmm2 
</th><td>8F RXB.09 0.xcnt.0.00 95 /r
</td></tr>
<tr><th>VPSHLW xmm1, xmm2, xmm3/mem128 
</th><td>8F RXB.09 1.xsrc.0.00 95 /r
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4530.htm">t4530</a>
</dd>
</dl><pre>
IixVPSHLW:: PROC
    IiEmitOpcode 0x95
    JMP IixVPSHLB.op:
  ENDP IixVPSHLW::
</pre>

<dl id="IixVPSHLD">
<dt><a href="#IixVPSHLB">&uarr; VPSHLD</a></dt>
<dd>Packed Shift Logical Doublewords</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPSHLD xmm1, xmm3/mem128, xmm2 
</th><td>8F RXB.09 0.xcnt.0.00 96 /r
</td></tr>
<tr><th>VPSHLD xmm1, xmm2, xmm3/mem128 
</th><td>8F RXB.09 1.xsrc.0.00 96 /r
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4530.htm">t4530</a>
</dd>
</dl><pre>
IixVPSHLD:: PROC
    IiEmitOpcode 0x96
    JMP IixVPSHLB.op:
  ENDP IixVPSHLD::
</pre>

<dl id="IixVPSHLQ">
<dt><a href="#IixVPSHLB">&uarr; VPSHLQ</a></dt>
<dd>Packed Shift Logical Quadwords</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPSHLQ xmm1, xmm3/mem128, xmm2 
</th><td>8F RXB.09 0.xcnt.0.00 97 /r
</td></tr>
<tr><th>VPSHLQ xmm1, xmm2, xmm3/mem128 
</th><td>8F RXB.09 1.xsrc.0.00 97 /r
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4530.htm">t4530</a>
</dd>
</dl><pre>
IixVPSHLQ:: PROC
    IiEmitOpcode 0x97
    JMP IixVPSHLB.op:
  ENDP IixVPSHLQ::
</pre>

<dl id="IixVPSHAB">
<dt><a href="#IixVPSHLB">&uarr; VPSHAB</a></dt>
<dd>Packed Shift Arithmetic Bytes</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPSHAB xmm1, xmm2/mem128, xmm3 
</th><td>8F RXB.09 0.xcnt.0.00 98 /r
</td></tr>
<tr><th>VPSHAB xmm1, xmm2, xmm3/mem128 
</th><td>8F RXB.09 1.xsrc.0.00 98 /r
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4532.htm">t4532</a>
</dd>
</dl><pre>
IixVPSHAB:: PROC
    IiEmitOpcode 0x98
    JMP IixVPSHLB.op:
  ENDP IixVPSHAB::
</pre>

<dl id="IixVPSHAW">
<dt><a href="#IixVPSHLB">&uarr; VPSHAW</a></dt>
<dd>Packed Shift Arithmetic Words</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPSHAW xmm1, xmm2/mem128, xmm3 
</th><td>8F RXB.09 0.xcnt.0.00 99 /r
</td></tr>
<tr><th>VPSHAW xmm1, xmm2, xmm3/mem128 
</th><td>8F RXB.09 1.xsrc.0.00 99 /r
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4532.htm">t4532</a>
</dd>
</dl><pre>
IixVPSHAW:: PROC
    IiEmitOpcode 0x99
    JMP IixVPSHLB.op:
  ENDP IixVPSHAW::
</pre>

<dl id="IixVPSHAD">
<dt><a href="#IixVPSHLB">&uarr; VPSHAD</a></dt>
<dd>Packed Shift Arithmetic Doublewords</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPSHAD xmm1, xmm2/mem128, xmm3 
</th><td>8F RXB.09 0.xcnt.0.00 9A /r
</td></tr>
<tr><th>VPSHAD xmm1, xmm2, xmm3/mem128 
</th><td>8F RXB.09 1.xsrc.0.00 9A /r
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4532.htm">t4532</a>
</dd>
</dl><pre>
IixVPSHAD:: PROC
    IiEmitOpcode 0x9A
    JMP IixVPSHLB.op:
  ENDP IixVPSHAD::
</pre>

<dl id="IixVPSHAQ">
<dt><a href="#IixVPSHLB">&uarr; VPSHAQ</a></dt>
<dd>Packed Shift Arithmetic Quadwords</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPSHAQ xmm1, xmm2/mem128, xmm3 
</th><td>8F RXB.09 0.xcnt.0.00 9B /r
</td></tr>
<tr><th>VPSHAQ xmm1, xmm2, xmm3/mem128 
</th><td>8F RXB.09 1.xsrc.0.00 9B /r
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4532.htm">t4532</a>
</dd>
</dl><pre>
IixVPSHAQ:: PROC
    IiEmitOpcode 0x9B
    JMP IixVPSHLB.op:
  ENDP IixVPSHAQ::
</pre>

<dl id="IixVFRCZPS">
<dt><a href="#IixHandlers">&uarr; VFRCZPS</a></dt>
<dd>Extract Fraction Packed Single-Precision  Floating-Point</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VFRCZPS xmm1, xmm2/mem128 
</th><td>8F RXB.09 0.1111.0.00 80 /r
</td></tr>
<tr><th>VFRCZPS ymm1, ymm2/mem256 
</th><td>8F RXB.09 0.1111.1.00 80 /r
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4534.htm">t4534</a>
</dd>
</dl><pre>
IixVFRCZPS:: PROC
    IiEmitOpcode 0x80
.op:IiRequire AMD, XOP
    IiOpEn RM
    IiModRM /r
    IiDispatchFormat  xmm.xmm, xmm.mem, ymm.ymm, ymm.mem
.xmm.xmm:
.xmm.mem:
    IiEncoding DATA=OWORD
    IiEmitPrefix XOP.MAP9.W0.L0
    RET
.ymm.ymm:
.ymm.mem:
    IiEncoding DATA=YWORD
    IiEmitPrefix XOP.MAP9.W0.L1
    RET
  ENDP IixVFRCZPS::
</pre>

<dl id="IixVFRCZPD">
<dt><a href="#IixVFRCZPS">&uarr; VFRCZPD</a></dt>
<dd>xtract Fraction Packed Double-Precision  Floating-Point</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VFRCZPD xmm1, xmm2/mem128 
</th><td>8F RXB.09 0.1111.0.00 81 /r
</td></tr>
<tr><th>VFRCZPD ymm1, ymm2/mem256 
</th><td>8F RXB.09 0.1111.1.00 81 /r
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4534.htm">t4534</a>
</dd>
</dl><pre>
IixVFRCZPD:: PROC
    IiEmitOpcode 0x81
    JMP IixVFRCZPS.op:
    RET
  ENDP IixVFRCZPD::
</pre>

<dl id="IixVFRCZSS">
<dt><a href="#IixHandlers">&uarr; VFRCZSS</a></dt>
<dd>Extract Fraction Scalar Single-Precision  Floating Point</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VFRCZSS xmm1, xmm2/mem32 
</th><td>8F RXB.09 0.1111.0.00 82 /r
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4534.htm">t4534</a>
</dd>
</dl><pre>
IixVFRCZSS:: PROC
    IiEmitOpcode 0x82
    IiEncoding DATA=DWORD
.op:IiRequire AMD, XOP
    IiOpEn RM
    IiModRM /r
    IiDispatchFormat  xmm.xmm, xmm.mem
.xmm.xmm:
.xmm.mem:
    IiEmitPrefix XOP.MAP9.W0.L0
    RET
  ENDP IixVFRCZSS::
</pre>

<dl id="IixVFRCZSD">
<dt><a href="#IixVFRCZSS">&uarr; VFRCZSD</a></dt>
<dd>Extract Fraction Scalar Double-Precision  Floating-Point</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VFRCZSD xmm1, xmm2/mem64 
</th><td>8F RXB.09 0.1111.0.00 83 /r
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4534.htm">t4534</a>
</dd>
</dl><pre>
IixVFRCZSD:: PROC
    IiEmitOpcode 0x83
    IiEncoding DATA=QWORD
    JMP IixVFRCZSS.op:
  ENDP IixVFRCZSD::
</pre>

<dl id="IixVPHADDBW">
<dt><a href="#IixHandlers">&uarr; VPHADDBW</a></dt>
<dd>Packed Horizontal Add Signed Byte to Signed  Word</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPHADDBW xmm1, xmm2/mem128 
</th><td>8F RXB.09 0.1111.0.00 C1 /r
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4540.htm">t4540</a>
</dd>
</dl><pre>
IixVPHADDBW:: PROC
    IiEmitOpcode 0xC1
.op:IiRequire AMD, XOP
    IiOpEn RM
    IiModRM /r
    IiEncoding DATA=OWORD
    IiDispatchFormat  xmm.xmm, xmm.mem
.xmm.xmm:
.xmm.mem:
    IiEmitPrefix XOP.MAP9.W0.L0
    RET
  ENDP IixVPHADDBW::
</pre>

<dl id="IixVPHADDBD">
<dt><a href="#IixVPHADDBW">&uarr; VPHADDBD</a></dt>
<dd>Packed Horizontal Add Signed Byte to Signed  Doubleword</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPHADDBD xmm1, xmm2/mem128 
</th><td>8F RXB.09 0.1111.0.00 C2 /r
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4540.htm">t4540</a>
</dd>
</dl><pre>
IixVPHADDBD:: PROC
    IiEmitOpcode 0xC2
    JMP IixVPHADDBW.op:
  ENDP IixVPHADDBD::
</pre>

<dl id="IixVPHADDBQ">
<dt><a href="#IixVPHADDBW">&uarr; VPHADDBQ</a></dt>
<dd>Packed Horizontal Add Signed Byte to Signed  Quadword</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPHADDBQ xmm1, xmm2/mem128 
</th><td>8F RXB.09 0.1111.0.00 C3 /r
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4540.htm">t4540</a>
</dd>
</dl><pre>
IixVPHADDBQ:: PROC
    IiEmitOpcode 0xC3 
    JMP IixVPHADDBW.op:
  ENDP IixVPHADDBQ::
</pre>

<dl id="IixVPHADDWD">
<dt><a href="#IixVPHADDBW">&uarr; VPHADDWD</a></dt>
<dd>Packed Horizontal Add Signed Word to Signed  Doubleword</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPHADDWD xmm1, xmm2/mem128 
</th><td>8F RXB.09 0.1111.0.00 C6 /r
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4540.htm">t4540</a>
</dd>
</dl><pre>
IixVPHADDWD:: PROC
    IiEmitOpcode 0xC6
    JMP IixVPHADDBW.op:
  ENDP IixVPHADDWD::
</pre>

<dl id="IixVPHADDWQ">
<dt><a href="#IixVPHADDBW">&uarr; VPHADDWQ</a></dt>
<dd>Packed Horizontal Add Signed Word to Signed  Quadword</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPHADDWQ xmm1, xmm2/mem128 
</th><td>8F RXB.09 0.1111.0.00 C7 /r
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4540.htm">t4540</a>
</dd>
</dl><pre>
IixVPHADDWQ:: PROC
    IiEmitOpcode 0xC7
    JMP IixVPHADDBW.op:
  ENDP IixVPHADDWQ::
</pre>

<dl id="IixVPHADDUBW">
<dt><a href="#IixVPHADDBW">&uarr; VPHADDUBWD</a></dt>
<dd>Packed Horizontal Add Unsigned Byte to Word</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPHADDUBW xmm1, xmm2/mem128 
</th><td>8F RXB.09 0.1111.0.00 D1 /r
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4542.htm">t4542</a>
</dd>
</dl><pre>
IixVPHADDUBW:: PROC
    IiEmitOpcode 0xD1
    JMP IixVPHADDBW.op:
  ENDP IixVPHADDUBW::
</pre>

<dl id="IixVPHADDUBD">
<dt><a href="#IixVPHADDBW">&uarr; VPHADDUBD</a></dt>
<dd>Packed Horizontal Add Unsigned Byte to  Doubleword</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPHADDUBD xmm1, xmm2/mem128 
</th><td>8F RXB.09 0.1111.0.00 D2 /r
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4542.htm">t4542</a>
</dd>
</dl><pre>
IixVPHADDUBD:: PROC
    IiEmitOpcode 0xD2
    JMP IixVPHADDBW.op:
  ENDP IixVPHADDUBD::
</pre>

<dl id="IixVPHADDUBQ">
<dt><a href="#IixVPHADDBW">&uarr; VPHADDUBQ</a></dt>
<dd>Packed Horizontal Add Unsigned Byte to  Quadword</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPHADDUBQ xmm1, xmm2/mem128 
</th><td>8F RXB.09 0.1111.0.00 D3 /r
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4542.htm">t4542</a>
</dd>
</dl><pre>
IixVPHADDUBQ:: PROC
    IiEmitOpcode 0xD3
    JMP IixVPHADDBW.op:
  ENDP IixVPHADDUBQ::
</pre>

<dl id="IixVPHADDUWD">
<dt><a href="#IixVPHADDBW">&uarr; VPHADDUWD</a></dt>
<dd>Packed Horizontal Add Unsigned Word to  Doubleword</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPHADDUWD xmm1, xmm2/mem128 
</th><td>8F RXB.09 0.1111.0.00 D6 /r
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4542.htm">t4542</a>
</dd>
</dl><pre>
IixVPHADDUWD:: PROC
    IiEmitOpcode 0xD6
    JMP IixVPHADDBW.op:
  ENDP IixVPHADDUWD::
</pre>

<dl id="IixVPHADDUWQ">
<dt><a href="#IixVPHADDBW">&uarr; VPHADDUWQ</a></dt>
<dd>Packed Horizontal Add Unsigned Word to  Quadword</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPHADDUWQ xmm1, xmm2/mem128 
</th><td>8F RXB.09 0.1111.0.00 D7 /r
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4542.htm">t4542</a>
</dd>
</dl><pre>
IixVPHADDUWQ:: PROC
    IiEmitOpcode 0xD7
    JMP IixVPHADDBW.op:
  ENDP IixVPHADDUWQ::
</pre>

<dl id="IixVPHADDDQ">
<dt><a href="#IixVPHADDBW">&uarr; VPHADDDQ</a></dt>
<dd>Packed Horizontal Add Signed Doubleword to  Signed Quadword</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPHADDDQ xmm1, xmm2/mem128 
</th><td>8F RXB.09 0.1111.0.00 CB /r
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4544.htm">t4544</a>
</dd>
</dl><pre>
IixVPHADDDQ:: PROC
    IiEmitOpcode 0xCB
    JMP IixVPHADDBW.op:
  ENDP IixVPHADDDQ::
</pre>

<dl id="IixVPHADDUDQ">
<dt><a href="#IixVPHADDBW">&uarr; VPHADDUDQ</a></dt>
<dd>Packed Horizontal Add Unsigned Doubleword  to Quadword</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPHADDUDQ xmm1, xmm2/mem128 
</th><td>8F RXB.09 0.1111.0.00 DB /r
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4544.htm">t4544</a>
</dd>
</dl><pre>
IixVPHADDUDQ:: PROC
    IiEmitOpcode 0xDB
    JMP IixVPHADDBW.op:
  ENDP IixVPHADDUDQ::
</pre>

<dl id="IixVPHSUBBW">
<dt><a href="#IixVPHADDBW">&uarr; VPHSUBBW</a></dt>
<dd>Packed Horizontal Subtract Signed Byte to  Signed Word</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPHSUBBW xmm1, xmm2/mem128 
</th><td>8F RXB.09 0.1111.0.00 E1 /r
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4544.htm">t4544</a>
</dd>
</dl><pre>
IixVPHSUBBW:: PROC
    IiEmitOpcode 0xE1
    JMP IixVPHADDBW.op:
  ENDP IixVPHSUBBW::
</pre>

<dl id="IixVPHSUBWD">
<dt><a href="#IixVPHADDBW">&uarr; VPHSUBWD</a></dt>
<dd>Packed Horizontal Subtract Signed Word to  Signed Doubleword</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPHSUBWD xmm1, xmm2/mem128 
</th><td>8F RXB.09 0.1111.0.00 E2 /r
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4544.htm">t4544</a>
</dd>
</dl><pre>
IixVPHSUBWD:: PROC
    IiEmitOpcode 0xE2
    JMP IixVPHADDBW.op:
  ENDP IixVPHSUBWD::
</pre>

<dl id="IixVPHSUBDQ">
<dt><a href="#IixVPHADDBW">&uarr; VPHSUBDQ</a></dt>
<dd>Packed Horizontal Subtract Signed Doubleword to  Signed Quadword</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPHSUBDQ xmm1, xmm2/mem128 
</th><td>8F RXB.09 0.1111.0.00 E3 /r
</td></tr>
</table></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4544.htm">t4544</a>
</dd>
</dl><pre>
IixVPHSUBDQ:: PROC
    IiEmitOpcode 0xE3
    JMP IixVPHADDBW.op:
  ENDP IixVPHSUBDQ::
</pre>

<dl id="IixVPCOMB">
<dt><a href="#IixVPCOMB">&uarr; VPCOMB</a></dt>
<dd>Compare Vector signed Bytes</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMB xmm1, xmm2, xmm3/mem128, imm8
</th><td>8F RXB.8 0.xsrc1.0.00 CC /r imm8 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>CC /r ib</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4550.htm">t4550</a>
</dd>
</dl><pre>
IixVPCOMB:: PROC
    MOV CL,0xCC
.op:IiRequire AMD, XOP, PROT
    IiEmitOpcode ECX
    IiOpEn RVM
    IiModRM /r
    IiEmitImm Operand4, BYTE, Max=7
    IiDispatchFormat  xmm.xmm.xmm.imm, xmm.xmm.mem.imm
.xmm.xmm.xmm.imm:
.xmm.xmm.mem.imm:
    IiEmitPrefix XOP.MAP8.W0.L0
    RET
  ENDP IixVPCOMB::
</pre>

<dl id="IixVPCOMLTB">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMLTB</a></dt>
<dd>Compare Vector signed Bytes if Less Than</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMLTB xmm1, xmm2, xmm3/mem128, 0
</th><td>8F RXB.8 0.xsrc1.0.00 CC /r 00 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>CC /r 00</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4550.htm">t4550</a>
</dd>
</dl><pre>
IixVPCOMLTB:: PROC
    MOV CH,0
    MOV CL,0xCC
.op:IiRequire AMD, XOP, PROT
    MOVB [EDI+II.Operand4+EXP.Low],CH
    MOVB [EDI+II.Operand4+EXP.Status],'N'
    IiEmitOpcode ECX
    IiOpEn RVM
    IiModRM /r
    IiEmitImm Operand4, BYTE
    IiEmitPrefix XOP.MAP8.W0.L0
    IiDispatchFormat  xmm.xmm.xmm, xmm.xmm.mem
.xmm.xmm.xmm:
.xmm.xmm.mem:
    RET
  ENDP IixVPCOMLTB::
</pre>

<dl id="IixVPCOMLEB">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMLEB</a></dt>
<dd>Compare Vector signed Bytes if Less than or Equal</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMLEB xmm1, xmm2, xmm3/mem128, 1
</th><td>8F RXB.8 0.xsrc1.0.00 CC /r 01 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>CC /r 01</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4550.htm">t4550</a>
</dd>
</dl><pre>
IixVPCOMLEB:: PROC
    MOV CL,0xCC
    MOV CH,0x1
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMLEB::
</pre>

<dl id="IixVPCOMGTB">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMGTB</a></dt>
<dd>Compare Vector signed Bytes if Greater Than</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMGTB xmm1, xmm2, xmm3/mem128, 2
</th><td>8F RXB.8 0.xsrc1.0.00 CC /r 02 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>CC /r 02</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4550.htm">t4550</a>
</dd>
</dl><pre>
IixVPCOMGTB:: PROC
    MOV CL,0xCC
    MOV CH,0x2
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMGTB::
</pre>

<dl id="IixVPCOMGEB">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMGEB</a></dt>
<dd>Compare Vector signed Bytes if Greater than or Equal</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMGEB xmm1, xmm2, xmm3/mem128, 3
</th><td>8F RXB.8 0.xsrc1.0.00 CC /r 03 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>CC /r 03</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4550.htm">t4550</a>
</dd>
</dl><pre>
IixVPCOMGEB:: PROC
    MOV CL,0xCC
    MOV CH,0x3
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMGEB::
</pre>

<dl id="IixVPCOMEQB">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMEQB</a></dt>
<dd>Compare Vector signed Bytes if EQual</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMEQB xmm1, xmm2, xmm3/mem128, 4
</th><td>8F RXB.8 0.xsrc1.0.00 CC /r 04 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>CC /r 04</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4550.htm">t4550</a>
</dd>
</dl><pre>
IixVPCOMEQB:: PROC
    MOV CL,0xCC
    MOV CH,0x4
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMEQB::
</pre>

<dl id="IixVPCOMNEQB">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMNEQB</a></dt>
<dd>Compare Vector signed Bytes if Not EQual</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMNEQB xmm1, xmm2, xmm3/mem128, 5
</th><td>8F RXB.8 0.xsrc1.0.00 CC /r 05 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>CC /r 05</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4550.htm">t4550</a>
</dd>
</dl><pre>
IixVPCOMNEQB:: PROC
    MOV CL,0xCC
    MOV CH,0x5
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMNEQB::
</pre>

<dl id="IixVPCOMFALSEB">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMFALSEB</a></dt>
<dd>Compare Vector signed Bytes if FALSE</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMFALSEB xmm1, xmm2, xmm3/mem128, 6
</th><td>8F RXB.8 0.xsrc1.0.00 CC /r 06 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>CC /r 06</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4550.htm">t4550</a>
</dd>
</dl><pre>
IixVPCOMFALSEB:: PROC
    MOV CL,0xCC
    MOV CH,0x6
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMFALSEB::
</pre>

<dl id="IixVPCOMTRUEB">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMTRUEB</a></dt>
<dd>Compare Vector signed Bytes if TRUE</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMTRUEB xmm1, xmm2, xmm3/mem128, 7
</th><td>8F RXB.8 0.xsrc1.0.00 CC /r 07 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>CC /r 07</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4550.htm">t4550</a>
</dd>
</dl><pre>
IixVPCOMTRUEB:: PROC
    MOV CL,0xCC
    MOV CH,0x7
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMTRUEB::
</pre>

<dl id="IixVPCOMW">
<dt><a href="#IixVPCOMB">&uarr; VPCOMW</a></dt>
<dd>Compare Vector signed Words</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMW xmm1, xmm2, xmm3/mem128, imm8
</th><td>8F RXB.8 0.xsrc1.0.00 CD /r imm8 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>CD /r ib</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4555.htm">t4555</a>
</dd>
</dl><pre>
IixVPCOMW:: PROC
    MOV CL,0xCD
    JMP IixVPCOMB.op:
 ENDP IixVPCOMW::
</pre>

<dl id="IixVPCOMLTW">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMLTW</a></dt>
<dd>Compare Vector signed Words if Less Than</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMLTW xmm1, xmm2, xmm3/mem128, 0
</th><td>8F RXB.8 0.xsrc1.0.00 CD /r 00 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>CD /r 00</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4555.htm">t4555</a>
</dd>
</dl><pre>
IixVPCOMLTW:: PROC
    MOV CL,0xCD
    MOV CH,0x0
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMLTW::
</pre>

<dl id="IixVPCOMLEW">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMLEW</a></dt>
<dd>Compare Vector signed Words if Less than or Equal</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMLEW xmm1, xmm2, xmm3/mem128, 1
</th><td>8F RXB.8 0.xsrc1.0.00 CD /r 01 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>CD /r 01</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4555.htm">t4555</a>
</dd>
</dl><pre>
IixVPCOMLEW:: PROC
    MOV CL,0xCD
    MOV CH,0x1
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMLEW::
</pre>

<dl id="IixVPCOMGTW">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMGTW</a></dt>
<dd>Compare Vector signed Words if Greater Than</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMGTW xmm1, xmm2, xmm3/mem128, 2
</th><td>8F RXB.8 0.xsrc1.0.00 CD /r 02 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>CD /r 02</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4555.htm">t4555</a>
</dd>
</dl><pre>
IixVPCOMGTW:: PROC
    MOV CL,0xCD
    MOV CH,0x2
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMGTW::
</pre>

<dl id="IixVPCOMGEW">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMGEW</a></dt>
<dd>Compare Vector signed Words if Greater than or Equal</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMGEW xmm1, xmm2, xmm3/mem128, 3
</th><td>8F RXB.8 0.xsrc1.0.00 CD /r 03 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>CD /r 03</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4555.htm">t4555</a>
</dd>
</dl><pre>
IixVPCOMGEW:: PROC
    MOV CL,0xCD
    MOV CH,0x3
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMGEW::
</pre>

<dl id="IixVPCOMEQW">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMEQW</a></dt>
<dd>Compare Vector signed Words if EQual</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMEQW xmm1, xmm2, xmm3/mem128, 4
</th><td>8F RXB.8 0.xsrc1.0.00 CD /r 04 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>CD /r 04</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4555.htm">t4555</a>
</dd>
</dl><pre>
IixVPCOMEQW:: PROC
    MOV CL,0xCD
    MOV CH,0x4
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMEQW::
</pre>

<dl id="IixVPCOMNEQW">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMNEQW</a></dt>
<dd>Compare Vector signed Words if Not EQual</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMNEQW xmm1, xmm2, xmm3/mem128, 5
</th><td>8F RXB.8 0.xsrc1.0.00 CD /r 05 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>CD /r 05</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4555.htm">t4555</a>
</dd>
</dl><pre>
IixVPCOMNEQW:: PROC
    MOV CL,0xCD
    MOV CH,0x5
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMNEQW::
</pre>

<dl id="IixVPCOMFALSEW">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMFALSEW</a></dt>
<dd>Compare Vector signed Words if FALSE</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMFALSEW xmm1, xmm2, xmm3/mem128, 6
</th><td>8F RXB.8 0.xsrc1.0.00 CD /r 06 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>CD /r 06</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4555.htm">t4555</a>
</dd>
</dl><pre>
IixVPCOMFALSEW:: PROC
    MOV CL,0xCD
    MOV CH,0x6
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMFALSEW::
</pre>

<dl id="IixVPCOMTRUEW">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMTRUEW</a></dt>
<dd>Compare Vector signed Words if TRUE</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMTRUEW xmm1, xmm2, xmm3/mem128, 7
</th><td>8F RXB.8 0.xsrc1.0.00 CD /r 07 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>CD /r 07</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4555.htm">t4555</a>
</dd>
</dl><pre>
IixVPCOMTRUEW:: PROC
    MOV CL,0xCD
    MOV CH,0x7
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMTRUEW::
</pre>

<dl id="IixVPCOMD">
<dt><a href="#IixVPCOMB">&uarr; VPCOMD</a></dt>
<dd>Compare Vector signed Dwords</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMD xmm1, xmm2, xmm3/mem128, imm8
</th><td>8F RXB.8 0.xsrc1.0.00 CE /r imm8 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>CE /r ib</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4560.htm">t4560</a>
</dd>
</dl><pre>
IixVPCOMD:: PROC
    MOV CL,0xCE
    JMP IixVPCOMB.op:
 ENDP IixVPCOMD::
</pre>

<dl id="IixVPCOMLTD">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMLTD</a></dt>
<dd>Compare Vector signed Dwords if Less Than</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMLTD xmm1, xmm2, xmm3/mem128, 0
</th><td>8F RXB.8 0.xsrc1.0.00 CE /r 00 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>CE /r 00</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4560.htm">t4560</a>
</dd>
</dl><pre>
IixVPCOMLTD:: PROC
    MOV CL,0xCE
    MOV CH,0x0
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMLTD::
</pre>

<dl id="IixVPCOMLED">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMLED</a></dt>
<dd>Compare Vector signed Dwords if Less than or Equal</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMLED xmm1, xmm2, xmm3/mem128, 1
</th><td>8F RXB.8 0.xsrc1.0.00 CE /r 01 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>CE /r 01</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4560.htm">t4560</a>
</dd>
</dl><pre>
IixVPCOMLED:: PROC
    MOV CL,0xCE
    MOV CH,0x1
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMLED::
</pre>

<dl id="IixVPCOMGTD">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMGTD</a></dt>
<dd>Compare Vector signed Dwords if Greater Than</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMGTD xmm1, xmm2, xmm3/mem128, 2
</th><td>8F RXB.8 0.xsrc1.0.00 CE /r 02 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>CE /r 02</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4560.htm">t4560</a>
</dd>
</dl><pre>
IixVPCOMGTD:: PROC
    MOV CL,0xCE
    MOV CH,0x2
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMGTD::
</pre>

<dl id="IixVPCOMGED">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMGED</a></dt>
<dd>Compare Vector signed Dwords if Greater than or Equal</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMGED xmm1, xmm2, xmm3/mem128, 3
</th><td>8F RXB.8 0.xsrc1.0.00 CE /r 03 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>CE /r 03</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4560.htm">t4560</a>
</dd>
</dl><pre>
IixVPCOMGED:: PROC
    MOV CL,0xCE
    MOV CH,0x3
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMGED::
</pre>

<dl id="IixVPCOMEQD">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMEQD</a></dt>
<dd>Compare Vector signed Dwords if EQual</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMEQD xmm1, xmm2, xmm3/mem128, 4
</th><td>8F RXB.8 0.xsrc1.0.00 CE /r 04 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>CE /r 04</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4560.htm">t4560</a>
</dd>
</dl><pre>
IixVPCOMEQD:: PROC
    MOV CL,0xCE
    MOV CH,0x4
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMEQD::
</pre>

<dl id="IixVPCOMNEQD">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMNEQD</a></dt>
<dd>Compare Vector signed Dwords if Not EQual</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMNEQD xmm1, xmm2, xmm3/mem128, 5
</th><td>8F RXB.8 0.xsrc1.0.00 CE /r 05 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>CE /r 05</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4560.htm">t4560</a>
</dd>
</dl><pre>
IixVPCOMNEQD:: PROC
    MOV CL,0xCE
    MOV CH,0x5
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMNEQD::
</pre>

<dl id="IixVPCOMFALSED">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMFALSED</a></dt>
<dd>Compare Vector signed Dwords if FALSE</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMFALSED xmm1, xmm2, xmm3/mem128, 6
</th><td>8F RXB.8 0.xsrc1.0.00 CE /r 06 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>CE /r 06</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4560.htm">t4560</a>
</dd>
</dl><pre>
IixVPCOMFALSED:: PROC
    MOV CL,0xCE
    MOV CH,0x6
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMFALSED::
</pre>

<dl id="IixVPCOMTRUED">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMTRUED</a></dt>
<dd>Compare Vector signed Dwords if TRUE</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMTRUED xmm1, xmm2, xmm3/mem128, 7
</th><td>8F RXB.8 0.xsrc1.0.00 CE /r 07 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>CE /r 07</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4560.htm">t4560</a>
</dd>
</dl><pre>
IixVPCOMTRUED:: PROC
    MOV CL,0xCE
    MOV CH,0x7
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMTRUED::
</pre>

<dl id="IixVPCOMQ">
<dt><a href="#IixVPCOMB">&uarr; VPCOMQ</a></dt>
<dd>Compare Vector signed Qwords</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMQ xmm1, xmm2, xmm3/mem128, imm8
</th><td>8F RXB.8 0.xsrc1.0.00 CF /r imm8 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>CF /r ib</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4565.htm">t4565</a>
</dd>
</dl><pre>
IixVPCOMQ:: PROC
    MOV CL,0xCF
    JMP IixVPCOMB.op:
 ENDP IixVPCOMQ::
</pre>

<dl id="IixVPCOMLTQ">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMLTQ</a></dt>
<dd>Compare Vector signed Qwords if Less Than</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMLTQ xmm1, xmm2, xmm3/mem128, 0
</th><td>8F RXB.8 0.xsrc1.0.00 CF /r 00 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>CF /r 00</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4565.htm">t4565</a>
</dd>
</dl><pre>
IixVPCOMLTQ:: PROC
    MOV CL,0xCF
    MOV CH,0x0
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMLTQ::
</pre>

<dl id="IixVPCOMLEQ">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMLEQ</a></dt>
<dd>Compare Vector signed Qwords if Less than or Equal</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMLEQ xmm1, xmm2, xmm3/mem128, 1
</th><td>8F RXB.8 0.xsrc1.0.00 CF /r 01 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>CF /r 01</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4565.htm">t4565</a>
</dd>
</dl><pre>
IixVPCOMLEQ:: PROC
    MOV CL,0xCF
    MOV CH,0x1
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMLEQ::
</pre>

<dl id="IixVPCOMGTQ">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMGTQ</a></dt>
<dd>Compare Vector signed Qwords if Greater Than</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMGTQ xmm1, xmm2, xmm3/mem128, 2
</th><td>8F RXB.8 0.xsrc1.0.00 CF /r 02 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>CF /r 02</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4565.htm">t4565</a>
</dd>
</dl><pre>
IixVPCOMGTQ:: PROC
    MOV CL,0xCF
    MOV CH,0x2
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMGTQ::
</pre>

<dl id="IixVPCOMGEQ">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMGEQ</a></dt>
<dd>Compare Vector signed Qwords if Greater than or Equal</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMGEQ xmm1, xmm2, xmm3/mem128, 3
</th><td>8F RXB.8 0.xsrc1.0.00 CF /r 03 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>CF /r 03</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4565.htm">t4565</a>
</dd>
</dl><pre>
IixVPCOMGEQ:: PROC
    MOV CL,0xCF
    MOV CH,0x3
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMGEQ::
</pre>

<dl id="IixVPCOMEQQ">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMEQQ</a></dt>
<dd>Compare Vector signed Qwords if EQual</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMEQQ xmm1, xmm2, xmm3/mem128, 4
</th><td>8F RXB.8 0.xsrc1.0.00 CF /r 04 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>CF /r 04</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4565.htm">t4565</a>
</dd>
</dl><pre>
IixVPCOMEQQ:: PROC
    MOV CL,0xCF
    MOV CH,0x4
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMEQQ::
</pre>

<dl id="IixVPCOMNEQQ">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMNEQQ</a></dt>
<dd>Compare Vector signed Qwords if Not EQual</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMNEQQ xmm1, xmm2, xmm3/mem128, 5
</th><td>8F RXB.8 0.xsrc1.0.00 CF /r 05 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>CF /r 05</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4565.htm">t4565</a>
</dd>
</dl><pre>
IixVPCOMNEQQ:: PROC
    MOV CL,0xCF
    MOV CH,0x5
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMNEQQ::
</pre>

<dl id="IixVPCOMFALSEQ">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMFALSEQ</a></dt>
<dd>Compare Vector signed Qwords if FALSE</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMFALSEQ xmm1, xmm2, xmm3/mem128, 6
</th><td>8F RXB.8 0.xsrc1.0.00 CF /r 06 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>CF /r 06</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4565.htm">t4565</a>
</dd>
</dl><pre>
IixVPCOMFALSEQ:: PROC
    MOV CL,0xCF
    MOV CH,0x6
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMFALSEQ::
</pre>

<dl id="IixVPCOMTRUEQ">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMTRUEQ</a></dt>
<dd>Compare Vector signed Qwords if TRUE</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMTRUEQ xmm1, xmm2, xmm3/mem128, 7
</th><td>8F RXB.8 0.xsrc1.0.00 CF /r 07 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>CF /r 07</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4565.htm">t4565</a>
</dd>
</dl><pre>
IixVPCOMTRUEQ:: PROC
    MOV CL,0xCF
    MOV CH,0x7
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMTRUEQ::
</pre>

<dl id="IixVPCOMUB">
<dt><a href="#IixVPCOMB">&uarr; VPCOMUB</a></dt>
<dd>Compare Vector Unsigned Bytes</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMUB xmm1, xmm2, xmm3/mem128, imm8
</th><td>8F RXB.8 0.xsrc1.0.00 EC /r imm8 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>EC /r ib</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4570.htm">t4570</a>
</dd>
</dl><pre>
IixVPCOMUB:: PROC
    MOV CL,0xEC
    JMP IixVPCOMB.op:
 ENDP IixVPCOMUB::
</pre>

<dl id="IixVPCOMLTUB">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMLTUB</a></dt>
<dd>Compare Vector Unsigned Bytes if Less Than</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMLTUB xmm1, xmm2, xmm3/mem128, 0
</th><td>8F RXB.8 0.xsrc1.0.00 EC /r 00 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>EC /r 00</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4570.htm">t4570</a>
</dd>
</dl><pre>
IixVPCOMLTUB:: PROC
    MOV CL,0xEC
    MOV CH,0x0
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMLTUB::
</pre>

<dl id="IixVPCOMLEUB">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMLEUB</a></dt>
<dd>Compare Vector Unsigned Bytes if Less than or Equal</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMLEUB xmm1, xmm2, xmm3/mem128, 1
</th><td>8F RXB.8 0.xsrc1.0.00 EC /r 01 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>EC /r 01</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4570.htm">t4570</a>
</dd>
</dl><pre>
IixVPCOMLEUB:: PROC
    MOV CL,0xEC
    MOV CH,0x1
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMLEUB::
</pre>

<dl id="IixVPCOMGTUB">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMGTUB</a></dt>
<dd>Compare Vector Unsigned Bytes if Greater Than</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMGTUB xmm1, xmm2, xmm3/mem128, 2
</th><td>8F RXB.8 0.xsrc1.0.00 EC /r 02 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>EC /r 02</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4570.htm">t4570</a>
</dd>
</dl><pre>
IixVPCOMGTUB:: PROC
    MOV CL,0xEC
    MOV CH,0x2
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMGTUB::
</pre>

<dl id="IixVPCOMGEUB">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMGEUB</a></dt>
<dd>Compare Vector Unsigned Bytes if Greater than or Equal</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMGEUB xmm1, xmm2, xmm3/mem128, 3
</th><td>8F RXB.8 0.xsrc1.0.00 EC /r 03 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>EC /r 03</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4570.htm">t4570</a>
</dd>
</dl><pre>
IixVPCOMGEUB:: PROC
    MOV CL,0xEC
    MOV CH,0x3
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMGEUB::
</pre>

<dl id="IixVPCOMEQUB">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMEQUB</a></dt>
<dd>Compare Vector Unsigned Bytes if EQual</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMEQUB xmm1, xmm2, xmm3/mem128, 4
</th><td>8F RXB.8 0.xsrc1.0.00 EC /r 04 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>EC /r 04</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4570.htm">t4570</a>
</dd>
</dl><pre>
IixVPCOMEQUB:: PROC
    MOV CL,0xEC
    MOV CH,0x4
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMEQUB::
</pre>

<dl id="IixVPCOMNEQUB">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMNEQUB</a></dt>
<dd>Compare Vector Unsigned Bytes if Not EQual</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMNEQUB xmm1, xmm2, xmm3/mem128, 5
</th><td>8F RXB.8 0.xsrc1.0.00 EC /r 05 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>EC /r 05</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4570.htm">t4570</a>
</dd>
</dl><pre>
IixVPCOMNEQUB:: PROC
    MOV CL,0xEC
    MOV CH,0x5
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMNEQUB::
</pre>

<dl id="IixVPCOMFALSEUB">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMFALSEUB</a></dt>
<dd>Compare Vector Unsigned Bytes if FALSE</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMFALSEUB xmm1, xmm2, xmm3/mem128, 6
</th><td>8F RXB.8 0.xsrc1.0.00 EC /r 06 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>EC /r 06</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4570.htm">t4570</a>
</dd>
</dl><pre>
IixVPCOMFALSEUB:: PROC
    MOV CL,0xEC
    MOV CH,0x6
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMFALSEUB::
</pre>

<dl id="IixVPCOMTRUEUB">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMTRUEUB</a></dt>
<dd>Compare Vector Unsigned Bytes if TRUE</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMTRUEUB xmm1, xmm2, xmm3/mem128, 7
</th><td>8F RXB.8 0.xsrc1.0.00 EC /r 07 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>EC /r 07</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4570.htm">t4570</a>
</dd>
</dl><pre>
IixVPCOMTRUEUB:: PROC
    MOV CL,0xEC
    MOV CH,0x7
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMTRUEUB::
</pre>

<dl id="IixVPCOMUW">
<dt><a href="#IixVPCOMB">&uarr; VPCOMUW</a></dt>
<dd>Compare Vector Unsigned Words</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMUW xmm1, xmm2, xmm3/mem128, imm8
</th><td>8F RXB.8 0.xsrc1.0.00 ED /r imm8 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>ED /r ib</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4575.htm">t4575</a>
</dd>
</dl><pre>
IixVPCOMUW:: PROC
    MOV CL,0xED
    JMP IixVPCOMB.op:
 ENDP IixVPCOMUW::
</pre>

<dl id="IixVPCOMLTUW">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMLTUW</a></dt>
<dd>Compare Vector Unsigned Words if Less Than</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMLTUW xmm1, xmm2, xmm3/mem128, 0
</th><td>8F RXB.8 0.xsrc1.0.00 ED /r 00 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>ED /r 00</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4575.htm">t4575</a>
</dd>
</dl><pre>
IixVPCOMLTUW:: PROC
    MOV CL,0xED
    MOV CH,0x0
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMLTUW::
</pre>

<dl id="IixVPCOMLEUW">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMLEUW</a></dt>
<dd>Compare Vector Unsigned Words if Less than or Equal</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMLEUW xmm1, xmm2, xmm3/mem128, 1
</th><td>8F RXB.8 0.xsrc1.0.00 ED /r 01 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>ED /r 01</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4575.htm">t4575</a>
</dd>
</dl><pre>
IixVPCOMLEUW:: PROC
    MOV CL,0xED
    MOV CH,0x1
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMLEUW::
</pre>

<dl id="IixVPCOMGTUW">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMGTUW</a></dt>
<dd>Compare Vector Unsigned Words if Greater Than</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMGTUW xmm1, xmm2, xmm3/mem128, 2
</th><td>8F RXB.8 0.xsrc1.0.00 ED /r 02 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>ED /r 02</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4575.htm">t4575</a>
</dd>
</dl><pre>
IixVPCOMGTUW:: PROC
    MOV CL,0xED
    MOV CH,0x2
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMGTUW::
</pre>

<dl id="IixVPCOMGEUW">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMGEUW</a></dt>
<dd>Compare Vector Unsigned Words if Greater than or Equal</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMGEUW xmm1, xmm2, xmm3/mem128, 3
</th><td>8F RXB.8 0.xsrc1.0.00 ED /r 03 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>ED /r 03</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4575.htm">t4575</a>
</dd>
</dl><pre>
IixVPCOMGEUW:: PROC
    MOV CL,0xED
    MOV CH,0x3
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMGEUW::
</pre>

<dl id="IixVPCOMEQUW">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMEQUW</a></dt>
<dd>Compare Vector Unsigned Words if EQual</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMEQUW xmm1, xmm2, xmm3/mem128, 4
</th><td>8F RXB.8 0.xsrc1.0.00 ED /r 04 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>ED /r 04</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4575.htm">t4575</a>
</dd>
</dl><pre>
IixVPCOMEQUW:: PROC
    MOV CL,0xED
    MOV CH,0x4
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMEQUW::
</pre>

<dl id="IixVPCOMNEQUW">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMNEQUW</a></dt>
<dd>Compare Vector Unsigned Words if Not EQual</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMNEQUW xmm1, xmm2, xmm3/mem128, 5
</th><td>8F RXB.8 0.xsrc1.0.00 ED /r 05 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>ED /r 05</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4575.htm">t4575</a>
</dd>
</dl><pre>
IixVPCOMNEQUW:: PROC
    MOV CL,0xED
    MOV CH,0x5
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMNEQUW::
</pre>

<dl id="IixVPCOMFALSEUW">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMFALSEUW</a></dt>
<dd>Compare Vector Unsigned Words if FALSE</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMFALSEUW xmm1, xmm2, xmm3/mem128, 6
</th><td>8F RXB.8 0.xsrc1.0.00 ED /r 06 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>ED /r 06</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4575.htm">t4575</a>
</dd>
</dl><pre>
IixVPCOMFALSEUW:: PROC
    MOV CL,0xED
    MOV CH,0x6
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMFALSEUW::
</pre>

<dl id="IixVPCOMTRUEUW">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMTRUEUW</a></dt>
<dd>Compare Vector Unsigned Words if TRUE</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMTRUEUW xmm1, xmm2, xmm3/mem128, 7
</th><td>8F RXB.8 0.xsrc1.0.00 ED /r 07 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>ED /r 07</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4575.htm">t4575</a>
</dd>
</dl><pre>
IixVPCOMTRUEUW:: PROC
    MOV CL,0xED
    MOV CH,0x7
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMTRUEUW::
</pre>

<dl id="IixVPCOMUD">
<dt><a href="#IixVPCOMB">&uarr; VPCOMUD</a></dt>
<dd>Compare Vector Unsigned Dwords</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMUD xmm1, xmm2, xmm3/mem128, imm8
</th><td>8F RXB.8 0.xsrc1.0.00 EE /r imm8 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>EE /r ib</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4580.htm">t4580</a>
</dd>
</dl><pre>
IixVPCOMUD:: PROC
    MOV CL,0xEE
    JMP IixVPCOMB.op:
 ENDP IixVPCOMUD::
</pre>

<dl id="IixVPCOMLTUD">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMLTUD</a></dt>
<dd>Compare Vector Unsigned Dwords if Less Than</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMLTUD xmm1, xmm2, xmm3/mem128, 0
</th><td>8F RXB.8 0.xsrc1.0.00 EE /r 00 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>EE /r 00</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4580.htm">t4580</a>
</dd>
</dl><pre>
IixVPCOMLTUD:: PROC
    MOV CL,0xEE
    MOV CH,0x0
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMLTUD::
</pre>

<dl id="IixVPCOMLEUD">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMLEUD</a></dt>
<dd>Compare Vector Unsigned Dwords if Less than or Equal</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMLEUD xmm1, xmm2, xmm3/mem128, 1
</th><td>8F RXB.8 0.xsrc1.0.00 EE /r 01 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>EE /r 01</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4580.htm">t4580</a>
</dd>
</dl><pre>
IixVPCOMLEUD:: PROC
    MOV CL,0xEE
    MOV CH,0x1
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMLEUD::
</pre>

<dl id="IixVPCOMGTUD">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMGTUD</a></dt>
<dd>Compare Vector Unsigned Dwords if Greater Than</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMGTUD xmm1, xmm2, xmm3/mem128, 2
</th><td>8F RXB.8 0.xsrc1.0.00 EE /r 02 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>EE /r 02</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4580.htm">t4580</a>
</dd>
</dl><pre>
IixVPCOMGTUD:: PROC
    MOV CL,0xEE
    MOV CH,0x2
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMGTUD::
</pre>

<dl id="IixVPCOMGEUD">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMGEUD</a></dt>
<dd>Compare Vector Unsigned Dwords if Greater than or Equal</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMGEUD xmm1, xmm2, xmm3/mem128, 3
</th><td>8F RXB.8 0.xsrc1.0.00 EE /r 03 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>EE /r 03</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4580.htm">t4580</a>
</dd>
</dl><pre>
IixVPCOMGEUD:: PROC
    MOV CL,0xEE
    MOV CH,0x3
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMGEUD::
</pre>

<dl id="IixVPCOMEQUD">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMEQUD</a></dt>
<dd>Compare Vector Unsigned Dwords if EQual</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMEQUD xmm1, xmm2, xmm3/mem128, 4
</th><td>8F RXB.8 0.xsrc1.0.00 EE /r 04 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>EE /r 04</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4580.htm">t4580</a>
</dd>
</dl><pre>
IixVPCOMEQUD:: PROC
    MOV CL,0xEE
    MOV CH,0x4
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMEQUD::
</pre>

<dl id="IixVPCOMNEQUD">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMNEQUD</a></dt>
<dd>Compare Vector Unsigned Dwords if Not EQual</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMNEQUD xmm1, xmm2, xmm3/mem128, 5
</th><td>8F RXB.8 0.xsrc1.0.00 EE /r 05 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>EE /r 05</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4580.htm">t4580</a>
</dd>
</dl><pre>
IixVPCOMNEQUD:: PROC
    MOV CL,0xEE
    MOV CH,0x5
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMNEQUD::
</pre>

<dl id="IixVPCOMFALSEUD">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMFALSEUD</a></dt>
<dd>Compare Vector Unsigned Dwords if FALSE</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMFALSEUD xmm1, xmm2, xmm3/mem128, 6
</th><td>8F RXB.8 0.xsrc1.0.00 EE /r 06 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>EE /r 06</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4580.htm">t4580</a>
</dd>
</dl><pre>
IixVPCOMFALSEUD:: PROC
    MOV CL,0xEE
    MOV CH,0x6
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMFALSEUD::
</pre>

<dl id="IixVPCOMTRUEUD">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMTRUEUD</a></dt>
<dd>Compare Vector Unsigned Dwords if TRUE</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMTRUEUD xmm1, xmm2, xmm3/mem128, 7
</th><td>8F RXB.8 0.xsrc1.0.00 EE /r 07 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>EE /r 07</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4580.htm">t4580</a>
</dd>
</dl><pre>
IixVPCOMTRUEUD:: PROC
    MOV CL,0xEE
    MOV CH,0x7
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMTRUEUD::
</pre>

<dl id="IixVPCOMUQ">
<dt><a href="#IixVPCOMB">&uarr; VPCOMUQ</a></dt>
<dd>Compare Vector Unsigned Qwords</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMUQ xmm1, xmm2, xmm3/mem128, imm8
</th><td>8F RXB.8 0.xsrc1.0.00 EF /r imm8 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>EF /r ib</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4585.htm">t4585</a>
</dd>
</dl><pre>
IixVPCOMUQ:: PROC
    MOV CL,0xEF
    JMP IixVPCOMB.op:
 ENDP IixVPCOMUQ::
</pre>

<dl id="IixVPCOMLTUQ">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMLTUQ</a></dt>
<dd>Compare Vector Unsigned Qwords if Less Than</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMLTUQ xmm1, xmm2, xmm3/mem128, 0
</th><td>8F RXB.8 0.xsrc1.0.00 EF /r 00 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>EF /r 00</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4585.htm">t4585</a>
</dd>
</dl><pre>
IixVPCOMLTUQ:: PROC
    MOV CL,0xEF
    MOV CH,0x0
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMLTUQ::
</pre>

<dl id="IixVPCOMLEUQ">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMLEUQ</a></dt>
<dd>Compare Vector Unsigned Qwords if Less than or Equal</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMLEUQ xmm1, xmm2, xmm3/mem128, 1
</th><td>8F RXB.8 0.xsrc1.0.00 EF /r 01 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>EF /r 01</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4585.htm">t4585</a>
</dd>
</dl><pre>
IixVPCOMLEUQ:: PROC
    MOV CL,0xEF
    MOV CH,0x1
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMLEUQ::
</pre>

<dl id="IixVPCOMGTUQ">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMGTUQ</a></dt>
<dd>Compare Vector Unsigned Qwords if Greater Than</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMGTUQ xmm1, xmm2, xmm3/mem128, 2
</th><td>8F RXB.8 0.xsrc1.0.00 EF /r 02
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>EF /r 02</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4585.htm">t4585</a>
</dd>
</dl><pre>
IixVPCOMGTUQ:: PROC
    MOV CL,0xEF
    MOV CH,0x2
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMGTUQ::
</pre>

<dl id="IixVPCOMGEUQ">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMGEUQ</a></dt>
<dd>Compare Vector Unsigned Qwords if Greater than or Equal</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMGEUQ xmm1, xmm2, xmm3/mem128, 3
</th><td>8F RXB.8 0.xsrc1.0.00 EF /r 03 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>EF /r 03</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4585.htm">t4585</a>
</dd>
</dl><pre>
IixVPCOMGEUQ:: PROC
    MOV CL,0xEF
    MOV CH,0x3
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMGEUQ::
</pre>

<dl id="IixVPCOMEQUQ">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMEQUQ</a></dt>
<dd>Compare Vector Unsigned Qwords if EQual</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMEQUQ xmm1, xmm2, xmm3/mem128, 4
</th><td>8F RXB.8 0.xsrc1.0.00 EF /r 04 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>EF /r 04</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4585.htm">t4585</a>
</dd>
</dl><pre>
IixVPCOMEQUQ:: PROC
    MOV CL,0xEF
    MOV CH,0x4
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMEQUQ::
</pre>

<dl id="IixVPCOMNEQUQ">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMNEQUQ</a></dt>
<dd>Compare Vector Unsigned Qwords if Not EQual</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMNEQUQ xmm1, xmm2, xmm3/mem128, 5
</th><td>8F RXB.8 0.xsrc1.0.00 EF /r 05 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>EF /r 05</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4585.htm">t4585</a>
</dd>
</dl><pre>
IixVPCOMNEQUQ:: PROC
    MOV CL,0xEF
    MOV CH,0x5
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMNEQUQ::
</pre>

<dl id="IixVPCOMFALSEUQ">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMFALSEUQ</a></dt>
<dd>Compare Vector Unsigned Qwords if FALSE</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMFALSEUQ xmm1, xmm2, xmm3/mem128, 6
</th><td>8F RXB.8 0.xsrc1.0.00 EF /r 06 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>EF /r 06</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4585.htm">t4585</a>
</dd>
</dl><pre>
IixVPCOMFALSEUQ:: PROC
    MOV CL,0xEF
    MOV CH,0x6
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMFALSEUQ::
</pre>

<dl id="IixVPCOMTRUEUQ">
<dt><a href="#IixVPCOMLTB">&uarr; VPCOMTRUEUQ</a></dt>
<dd>Compare Vector Unsigned Qwords if TRUE</dd>
<dt>AMD reference</dt>
<dd><table>
<tr><th>VPCOMTRUEUQ xmm1, xmm2, xmm3/mem128, 7
</th><td>8F RXB.8 0.xsrc1.0.00 EF /r 07 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>EF /r 07</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4585.htm">t4585</a>
</dd>
</dl><pre>
IixVPCOMTRUEUQ:: PROC
    MOV CL,0xEF
    MOV CH,0x7
    JMP IixVPCOMLTB.op:
 ENDP IixVPCOMTRUEUQ::
</pre>

<!--IixEpilogue--><pre>
  ENDPROGRAM iix
</pre><!--TAILMENU-->
<!--Contents below the marker {!==TAILMENU==} was generated by "generate.php".-->
<br class='CLEAR'/><a id='bottom' href='#top'>&#x25B2;Back to the top&#x25B2;</a>
</body></html>
