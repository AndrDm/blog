<!doctype html><html lang='en'><head>
<meta http-equiv='Content-Type' content='text/html; charset=utf-8'/>
<meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=2.0, user-scalable=yes'>
<meta name='robots' content='ALL,FOLLOW'/>
<meta name='description' content='iip.htm source file'/>
<meta name='version' content='20250318'/>
<meta name='author' content='Pavel vitsoft Šrubař'/>
<link rel='stylesheet' href='../euroasm.css' type='text/css'/>
<link rel='shortcut icon' href='../favicon.ico'/>
<title>iip.htm source file</title>
</head>
<body class='EASOURCE' id='top'><div class='HEADMENU'><table>
<tr><td rowspan='2' title='&euro;ASM - assembler and linker'><img src='../favicon.ico' alt='EuroAssembler' />
<td><a href='../index.htm' title='Alphabetical index of all &euro;ASM elements, directives and instructions'>Index</a></td>
<td><a href='../eadoc/' class='EADOC' title='Documentation of EuroAssembler'>Manual</a></td>
<td><a href='https://euroassembler.eu/download/' title='History &amp; download of the latest and previous versions'>Download</a></td>
<td><a href='../easource/' class='EASOURCE' title='Source files of EuroAssembler itself'>Source</a></td>
<td><a href='../maclib/' class='MACLIB' title='Macro libraries shipped with &euro;ASM'>Macros</a></td>
<td rowspan='2' title='Find the searched token in any text file on this site'>
<form method='post' action='../search.php' enctype='multipart/form-data' accept-charset='utf-8'>
<input type='text' id='q' placeholder='Searched word(s)' name='q' value=''/>
<br/><label title='Check the box to find the expression even if it is surrounded by other letters | digits.'>
<input type='checkbox' name='EW'/><small>Embedded word</small></label>
<br/><label title='Check the box for case-insensitive search.'>
<input type='checkbox' name='CI'/><small>Case ins.</small></label>
<input type='submit' title='Search for the specified word|expression in all site files.' name='find' value='Search'/>
</form></td></tr><tr>
<td><a href='../sitemap.htm' title='List of directories and files on this site'>Sitemap</a></td>
<td><a href='../eadoc/links.htm' class='EADOC' title='References and external links to resources used in EuroAssembler developement'>Links</a></td>
<td><a href='https://euroassembler.eu/forum/' title='Discussion forum concerning EuroAssembler'>Forum</a></td>
<td><a href='../eatests/' class='EATESTS' title='Program snippets for testing the function of &euro;ASM'>Tests</a></td>
<td><a href='../objlib/' class='OBJLIB' title='Skeletons and sample objects and projects shipped with &euro;ASM'>Projects</a></td>
</tr></table></div>
<!--Contents above the marker {!==/HEADMENU==} was generated by "generate.php".-->
<!--/HEADMENU-->
<h1>iip.htm
<br/><i>Enumerations</i>
<br/><a href="#IipList">IipList</a>
<br/><i>Grouphandlers</i>
<br/><a href="#IipGroupAES">IipGroupAES</a>
<br/><a href="#IipGroupBLEND">IipGroupBLEND</a>
<br/><a href="#IipGroupCLMUL">IipGroupCLMUL</a>
<br/><a href="#IipGroupSSE">IipGroupSSE</a>
<br/><a href="#IipGroupSSE1">IipGroupSSE1</a>
<br/><a href="#IipGroupSSE4">IipGroupSSE4</a>
<br/><a href="#IipGroupSSE4_1">IipGroupSSE4_1</a>
<br/><i>Instruction handlers</i><br/><span class="ILIST">
<a href="#IipADDPD">ADDPD</a>
<a href="#IipADDPS">ADDPS</a>
<a href="#IipADDSD">ADDSD</a>
<a href="#IipADDSS">ADDSS</a>
<a href="#IipADDSUBPD">ADDSUBPD</a>
<a href="#IipADDSUBPS">ADDSUBPS</a>
<a href="#IipAESDEC">AESDEC</a>
<a href="#IipAESDECLAST">AESDECLAST</a>
<a href="#IipAESENC">AESENC</a>
<a href="#IipAESENCLAST">AESENCLAST</a>
<a href="#IipAESIMC">AESIMC</a>
<a href="#IipAESKEYGENASSIST">AESKEYGENASSIST</a>
<a href="#IipANDNPD">ANDNPD</a>
<a href="#IipANDNPS">ANDNPS</a>
<a href="#IipANDPD">ANDPD</a>
<a href="#IipANDPS">ANDPS</a>
<a href="#IipBLENDPD">BLENDPD</a>
<a href="#IipBLENDPS">BLENDPS</a>
<a href="#IipBLENDVPD">BLENDVPD</a>
<a href="#IipBLENDVPS">BLENDVPS</a>
<a href="#IipCMPEQPD">CMPEQPD</a>
<a href="#IipCMPEQPS">CMPEQPS</a>
<a href="#IipCMPEQSD">CMPEQSD</a>
<a href="#IipCMPEQSS">CMPEQSS</a>
<a href="#IipCMPLEPD">CMPLEPD</a>
<a href="#IipCMPLEPS">CMPLEPS</a>
<a href="#IipCMPLESD">CMPLESD</a>
<a href="#IipCMPLESS">CMPLESS</a>
<a href="#IipCMPLTPD">CMPLTPD</a>
<a href="#IipCMPLTPS">CMPLTPS</a>
<a href="#IipCMPLTSD">CMPLTSD</a>
<a href="#IipCMPLTSS">CMPLTSS</a>
<a href="#IipCMPNEQPD">CMPNEQPD</a>
<a href="#IipCMPNEQPS">CMPNEQPS</a>
<a href="#IipCMPNEQSD">CMPNEQSD</a>
<a href="#IipCMPNEQSS">CMPNEQSS</a>
<a href="#IipCMPNLEPD">CMPNLEPD</a>
<a href="#IipCMPNLEPS">CMPNLEPS</a>
<a href="#IipCMPNLESD">CMPNLESD</a>
<a href="#IipCMPNLESS">CMPNLESS</a>
<a href="#IipCMPNLTPD">CMPNLTPD</a>
<a href="#IipCMPNLTPS">CMPNLTPS</a>
<a href="#IipCMPNLTSD">CMPNLTSD</a>
<a href="#IipCMPNLTSS">CMPNLTSS</a>
<a href="#IipCMPORDPD">CMPORDPD</a>
<a href="#IipCMPORDPS">CMPORDPS</a>
<a href="#IipCMPORDSD">CMPORDSD</a>
<a href="#IipCMPORDSS">CMPORDSS</a>
<a href="#IipCMPPD">CMPPD</a>
<a href="#IipCMPPS">CMPPS</a>
<a href="#IipCMPSS">CMPSS</a>
<a href="#IipCMPUNORDPD">CMPUNORDPD</a>
<a href="#IipCMPUNORDPS">CMPUNORDPS</a>
<a href="#IipCMPUNORDSD">CMPUNORDSD</a>
<a href="#IipCMPUNORDSS">CMPUNORDSS</a>
<a href="#IipCOMISD">COMISD</a>
<a href="#IipCOMISS">COMISS</a>
<a href="#IipCRC32">CRC32</a>
<a href="#IipCRC32B">CRC32B</a>
<a href="#IipCRC32D">CRC32D</a>
<a href="#IipCRC32Q">CRC32Q</a>
<a href="#IipCRC32W">CRC32W</a>
<a href="#IipCVTDQ2PD">CVTDQ2PD</a>
<a href="#IipCVTDQ2PS">CVTDQ2PS</a>
<a href="#IipCVTPD2DQ">CVTPD2DQ</a>
<a href="#IipCVTPD2PS">CVTPD2PS</a>
<a href="#IipCVTPS2DQ">CVTPS2DQ</a>
<a href="#IipCVTPS2PD">CVTPS2PD</a>
<a href="#IipCVTSD2SI">CVTSD2SI</a>
<a href="#IipCVTSD2SS">CVTSD2SS</a>
<a href="#IipCVTSI2SD">CVTSI2SD</a>
<a href="#IipCVTSI2SS">CVTSI2SS</a>
<a href="#IipCVTSS2SD">CVTSS2SD</a>
<a href="#IipCVTSS2SI">CVTSS2SI</a>
<a href="#IipCVTTPD2DQ">CVTTPD2DQ</a>
<a href="#IipCVTTPS2DQ">CVTTPS2DQ</a>
<a href="#IipCVTTSD2SI">CVTTSD2SI</a>
<a href="#IipCVTTSS2SI">CVTTSS2SI</a>
<a href="#IipDIVPD">DIVPD</a>
<a href="#IipDIVPS">DIVPS</a>
<a href="#IipDIVSD">DIVSD</a>
<a href="#IipDIVSS">DIVSS</a>
<a href="#IipDPPD">DPPD</a>
<a href="#IipDPPS">DPPS</a>
<a href="#IipEXTRACTPS">EXTRACTPS</a>
<a href="#IipEXTRQ">EXTRQ</a>
<a href="#IipHADDPD">HADDPD</a>
<a href="#IipHADDPS">HADDPS</a>
<a href="#IipHSUBPD">HSUBPD</a>
<a href="#IipHSUBPS">HSUBPS</a>
<a href="#IipINSERTPS">INSERTPS</a>
<a href="#IipINSERTQ">INSERTQ</a>
<a href="#IipLDDQU">LDDQU</a>
<a href="#IipLDMXCSR">LDMXCSR</a>
<a href="#IipMASKMOVDQU">MASKMOVDQU</a>
<a href="#IipMAXPD">MAXPD</a>
<a href="#IipMAXPS">MAXPS</a>
<a href="#IipMAXSD">MAXSD</a>
<a href="#IipMAXSS">MAXSS</a>
<a href="#IipMINPD">MINPD</a>
<a href="#IipMINPS">MINPS</a>
<a href="#IipMINSD">MINSD</a>
<a href="#IipMINSS">MINSS</a>
<a href="#IipMOVAPD">MOVAPD</a>
<a href="#IipMOVAPS">MOVAPS</a>
<a href="#IipMOVDDUP">MOVDDUP</a>
<a href="#IipMOVDQA">MOVDQA</a>
<a href="#IipMOVDQU">MOVDQU</a>
<a href="#IipMOVHLPS">MOVHLPS</a>
<a href="#IipMOVHPD">MOVHPD</a>
<a href="#IipMOVHPS">MOVHPS</a>
<a href="#IipMOVLHPS">MOVLHPS</a>
<a href="#IipMOVLPD">MOVLPD</a>
<a href="#IipMOVLPS">MOVLPS</a>
<a href="#IipMOVMSKPD">MOVMSKPD</a>
<a href="#IipMOVMSKPS">MOVMSKPS</a>
<a href="#IipMOVNTDQ">MOVNTDQ</a>
<a href="#IipMOVNTDQA">MOVNTDQA</a>
<a href="#IipMOVNTI">MOVNTI</a>
<a href="#IipMOVNTPD">MOVNTPD</a>
<a href="#IipMOVNTPS">MOVNTPS</a>
<a href="#IipMOVNTSD">MOVNTSD</a>
<a href="#IipMOVNTSS">MOVNTSS</a>
<a href="#IipMOVSHDUP">MOVSHDUP</a>
<a href="#IipMOVSLDUP">MOVSLDUP</a>
<a href="#IipMOVSS">MOVSS</a>
<a href="#IipMOVUPD">MOVUPD</a>
<a href="#IipMOVUPS">MOVUPS</a>
<a href="#IipMPSADBW">MPSADBW</a>
<a href="#IipMULPD">MULPD</a>
<a href="#IipMULPS">MULPS</a>
<a href="#IipMULSD">MULSD</a>
<a href="#IipMULSS">MULSS</a>
<a href="#IipORPD">ORPD</a>
<a href="#IipORPS">ORPS</a>
<a href="#IipPACKUSDW">PACKUSDW</a>
<a href="#IipPBLENDVB">PBLENDVB</a>
<a href="#IipPBLENDW">PBLENDW</a>
<a href="#IipPCLMULHQHQDQ">PCLMULHQHQDQ</a>
<a href="#IipPCLMULHQLQDQ">PCLMULHQLQDQ</a>
<a href="#IipPCLMULLQHQDQ">PCLMULLQHQDQ</a>
<a href="#IipPCLMULLQLQDQ">PCLMULLQLQDQ</a>
<a href="#IipPCLMULQDQ">PCLMULQDQ</a>
<a href="#IipPCMPEQQ">PCMPEQQ</a>
<a href="#IipPCMPESTRI">PCMPESTRI</a>
<a href="#IipPCMPESTRM">PCMPESTRM</a>
<a href="#IipPCMPGTQ">PCMPGTQ</a>
<a href="#IipPCMPISTRI">PCMPISTRI</a>
<a href="#IipPCMPISTRM">PCMPISTRM</a>
<a href="#IipPEXTRB">PEXTRB</a>
<a href="#IipPEXTRD">PEXTRD</a>
<a href="#IipPEXTRQ">PEXTRQ</a>
<a href="#IipPHMINPOSUW">PHMINPOSUW</a>
<a href="#IipPINSRB">PINSRB</a>
<a href="#IipPINSRD">PINSRD</a>
<a href="#IipPINSRQ">PINSRQ</a>
<a href="#IipPMAXSB">PMAXSB</a>
<a href="#IipPMAXSD">PMAXSD</a>
<a href="#IipPMAXUD">PMAXUD</a>
<a href="#IipPMAXUW">PMAXUW</a>
<a href="#IipPMINSB">PMINSB</a>
<a href="#IipPMINSD">PMINSD</a>
<a href="#IipPMINUD">PMINUD</a>
<a href="#IipPMINUW">PMINUW</a>
<a href="#IipPMOVSXBD">PMOVSXBD</a>
<a href="#IipPMOVSXBQ">PMOVSXBQ</a>
<a href="#IipPMOVSXBW">PMOVSXBW</a>
<a href="#IipPMOVSXDQ">PMOVSXDQ</a>
<a href="#IipPMOVSXWD">PMOVSXWD</a>
<a href="#IipPMOVSXWQ">PMOVSXWQ</a>
<a href="#IipPMOVZXBD">PMOVZXBD</a>
<a href="#IipPMOVZXBQ">PMOVZXBQ</a>
<a href="#IipPMOVZXBW">PMOVZXBW</a>
<a href="#IipPMOVZXDQ">PMOVZXDQ</a>
<a href="#IipPMOVZXWD">PMOVZXWD</a>
<a href="#IipPMOVZXWQ">PMOVZXWQ</a>
<a href="#IipPMULDQ">PMULDQ</a>
<a href="#IipPMULLD">PMULLD</a>
<a href="#IipPSHUFD">PSHUFD</a>
<a href="#IipPSHUFHW">PSHUFHW</a>
<a href="#IipPSHUFLW">PSHUFLW</a>
<a href="#IipPSLLDQ">PSLLDQ</a>
<a href="#IipPSRLDQ">PSRLDQ</a>
<a href="#IipPTEST">PTEST</a>
<a href="#IipPUNPCKHQDQ">PUNPCKHQDQ</a>
<a href="#IipPUNPCKLQDQ">PUNPCKLQDQ</a>
<a href="#IipRCPPS">RCPPS</a>
<a href="#IipRCPSS">RCPSS</a>
<a href="#IipROUNDPD">ROUNDPD</a>
<a href="#IipROUNDPS">ROUNDPS</a>
<a href="#IipROUNDSD">ROUNDSD</a>
<a href="#IipROUNDSS">ROUNDSS</a>
<a href="#IipRSQRTPS">RSQRTPS</a>
<a href="#IipRSQRTSS">RSQRTSS</a>
<a href="#IipSHUFPD">SHUFPD</a>
<a href="#IipSHUFPS">SHUFPS</a>
<a href="#IipSQRTPD">SQRTPD</a>
<a href="#IipSQRTPS">SQRTPS</a>
<a href="#IipSQRTSD">SQRTSD</a>
<a href="#IipSQRTSS">SQRTSS</a>
<a href="#IipSTMXCSR">STMXCSR</a>
<a href="#IipSUBPD">SUBPD</a>
<a href="#IipSUBPS">SUBPS</a>
<a href="#IipSUBSD">SUBSD</a>
<a href="#IipSUBSS">SUBSS</a>
<a href="#IipUCOMISD">UCOMISD</a>
<a href="#IipUCOMISS">UCOMISS</a>
<a href="#IipUNPCKHPD">UNPCKHPD</a>
<a href="#IipUNPCKHPS">UNPCKHPS</a>
<a href="#IipUNPCKLPD">UNPCKLPD</a>
<a href="#IipUNPCKLPS">UNPCKLPS</a>
<a href="#IipXORPD">XORPD</a>
<a href="#IipXORPS">XORPS</a>
</span><!--IipAList-->
</h1>
<dl id="IipHandlers"><dt><a href="#top">&uarr; <em>IipHandlers</em></a> </dt>
<dd> assemble SSE  machine instructions with <b>packed</b> and scalar operands.
</dd><dt>See also</dt><dd><a class="EXT" href="ii.htm#IiHandlers">IiHandlers</a>,
<a class="EXT" href="../eadoc/links.htm#IntelVol2">[IntelVol2]</a>.</dd>
</dl><pre>
iip PROGRAM FORMAT=COFF,MODEL=FLAT,WIDTH=32
    INCLUDEHEAD euroasm.htm, \  Interface (structures, symbols and macros) of other modules used in this source.
                ea.htm,eaopt.htm,exp.htm,ii.htm,msg.htm,pgm.htm,pgmopt.htm,sss.htm,stm.htm,sym.htm
</pre><br class="CLEAR"/><pre>
iip HEAD ; Start ofmodule interface.
</pre>

<dl id="IipList"><dt><a href="#top">&uarr; %IipList</a></dt><dd> enumerates machine instructions
<!---->of this family which &euro;ASM can assemble.
<br/>Each instruction declared in <code>%IipList</code> requires the corresponding
<a href="#IipHandlers">handler</a> in this file.</dd>
<dt>See also</dt><dd><a class="EXT" href="dict.htm#DictLookupIi">DictLookupIi</a></dd></dl><pre>
%IipList %SET \
AESIMC, \
AESENC, \
AESENCLAST, \
AESDEC, \
AESDECLAST, \
AESKEYGENASSIST, \
CRC32, \
CRC32B, \
CRC32W, \
CRC32D, \
CRC32Q, \
MOVNTPS, \
MOVNTPD, \
MOVNTI, \
MOVNTDQ, \
MOVNTDQA, \
EXTRACTPS, \
PEXTRB, \
PEXTRD, \
PEXTRQ, \
LDMXCSR, \
STMXCSR, \
MOVMSKPD, \
MOVMSKPS, \
PSRLDQ, \
PSLLDQ, \
CVTTSD2SI, \
CVTSD2SI, \
CVTSS2SI, \
CVTTSS2SI, \
CVTSI2SS, \
CVTSI2SD, \
PINSRB, \
PINSRD, \
PINSRQ, \
MOVUPS, \
MOVAPS, \
MOVLPS, \
MOVHPS, \
MOVHLPS, \
MOVLHPS, \
UNPCKLPS, \
UNPCKHPS, \
UCOMISS, \
COMISS, \
SQRTPS, \
RSQRTPS, \
RCPPS, \
ANDNPS, \
ANDPS, \
ORPS, \
XORPS, \
ADDPS, \
MULPS, \
CVTPS2PD, \
CVTDQ2PS, \
SUBPS, \
MINPS, \
DIVPS, \
MAXPS, \
MOVHPD, \
MOVLPD, \
MOVAPD, \
MOVSS, \
MOVUPD, \
PTEST, \
PMOVSXBW, \
PMOVSXBD, \
PMOVSXBQ, \
PMOVSXWD, \
PMOVSXWQ, \
PMOVSXDQ, \
PMULDQ, \
PCMPEQQ, \
PACKUSDW, \
PMOVZXBW, \
PMOVZXBD, \
PMOVZXBQ, \
PMOVZXWD, \
PMOVZXWQ, \
PMOVZXDQ, \
PCMPGTQ, \
PMINSB, \
PMINSD, \
PMINUW, \
PMINUD, \
PMAXSB, \
PMAXSD, \
PMAXUW, \
PMAXUD, \
PMULLD, \
PHMINPOSUW, \
UNPCKLPD, \
UNPCKHPD, \
UCOMISD, \
COMISD, \
SQRTPD, \
ANDPD, \
ANDNPD, \
ORPD, \
XORPD, \
ADDPD, \
MULPD, \
CVTPD2PS, \
CVTPS2DQ, \
SUBPD, \
MINPD, \
DIVPD, \
MAXPD, \
PUNPCKLQDQ, \
PUNPCKHQDQ, \
HADDPD, \
HSUBPD, \
ADDSUBPD, \
CVTTPD2DQ, \
MOVDDUP, \
SQRTSD, \
ADDSD, \
MULSD, \
CVTSD2SS, \
SUBSD, \
MINSD, \
DIVSD, \
MAXSD, \
HADDPS, \
HSUBPS, \
ADDSUBPS, \
CVTPD2DQ, \
MOVSLDUP, \
MOVSHDUP, \
SQRTSS, \
RSQRTSS, \
RCPSS, \
ADDSS, \
MULSS, \
CVTSS2SD, \
CVTTPS2DQ, \
SUBSS, \
MINSS, \
DIVSS, \
MAXSS, \
CVTDQ2PD, \
ROUNDPS, \
ROUNDPD, \
ROUNDSS, \
ROUNDSD, \
BLENDPS, \
BLENDPD, \
PBLENDW, \
INSERTPS, \
DPPS, \
MPSADBW, \
PCMPESTRM, \
PCMPESTRI, \
PCMPISTRM, \
PCMPISTRI, \
DPPD, \
SHUFPS, \
PSHUFD, \
SHUFPD, \
PSHUFLW, \
PSHUFHW, \
MOVDQA, \
MOVDQU, \
MASKMOVDQU, \
LDDQU, \
PCLMULQDQ, \
PCLMULLQLQDQ, \
PCLMULHQLQDQ, \
PCLMULLQHQDQ, \
PCLMULHQHQDQ, \
PBLENDVB, \
BLENDVPS, \
BLENDVPD, \
CMPEQSS, \
CMPLTSS, \
CMPLESS, \
CMPUNORDSS, \
CMPNEQSS, \
CMPNLTSS, \
CMPNLESS, \
CMPORDSS, \
CMPEQSD, \
CMPLTSD, \
CMPLESD, \
CMPUNORDSD, \
CMPNEQSD, \
CMPNLTSD, \
CMPNLESD, \
CMPORDSD, \
CMPEQPS, \
CMPLTPS, \
CMPLEPS, \
CMPUNORDPS, \
CMPNEQPS, \
CMPNLTPS, \
CMPNLEPS, \
CMPORDPS, \
CMPEQPD, \
CMPLTPD, \
CMPLEPD, \
CMPUNORDPD, \
CMPNEQPD, \
CMPNLTPD, \
CMPNLEPD, \
CMPORDPD, \
CMPPS, \
CMPSS, \
CMPPD, \
MOVNTSS, \
MOVNTSD, \
EXTRQ, \
INSERTQ, \
<!--IipList-->
;
</pre><pre>
  ENDHEAD iip  ; End of module interface.
</pre>

<dl id="IipGroupAES">
<dt><a href="#IipHandlers">&uarr; <em>IipGroupAES</em></a></dt>
<dd>IipGroupAES is a common handler for AES instructions in format <b>xmm,xmm/mem
</b> with prefix 0x66 and three-byte opcode 0x0F,0x38,CL.</dd>
<dt>Input</dt>
<dd><b>CL</b> is the tertiary opcode.
<br/><b>EDX</b> has operand types as set by <a class='EXT' href='ii.htm#IiAssemble'>IiAssemble</a>.
<br/><b>EDI</b> is pointer to <a class='EXT' href='ii.htm#II'>II</a> structure with parsed operands.</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4100.htm">t4100</a>
</dd>
</dl><pre>
IipGroupAES:: PROC
     IiRequire 686,AES
     IiEncoding DATA=OWORD
     IiEmitPrefix OTOGGLE
     IiEmitOpcode 0x0F,0x38,ECX
     IiOpEn RM
     IiModRM /r
     IiDispatchFormat xmm.xmm, xmm.mem
.xmm.xmm:
.xmm.mem:
     RET
 ENDP IipGroupAES::
</pre>

<dl id="IipAESIMC">
<dt><a href='#IipGroupAES'>&uarr; AESIMC</a></dt>
<dd>Perform the AES InvMixColumn Transformation</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/AESIMC.html">AESIMC</a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4100.htm">t4100</a>
</dd>
</dl><pre>
IipAESIMC:: PROC
    MOV CL,0xDB
    JMP IipGroupAES:
 ENDP IipAESIMC::
</pre>

<dl id="IipAESENC">
<dt><a href='#IipGroupAES'>&uarr; AESENC</a></dt>
<dd>Perform One Round of an AES Encryption Flow</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/AESENC.html">AESENC</a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4100.htm">t4100</a>
</dd>
</dl><pre>
IipAESENC:: PROC
    MOV CL,0xDC
    JMP IipGroupAES:
 ENDP IipAESENC::
</pre>

<dl id="IipAESENCLAST">
<dt><a href='#IipGroupAES'>&uarr; AESENCLAST</a></dt>
<dd>Perform Last Round of an AES Encryption Flow</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/AESENCLAST.html">AESENCLAST</a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4100.htm">t4100</a>
</dd>
</dl><pre>
IipAESENCLAST:: PROC
    MOV CL,0xDD
    JMP IipGroupAES:
 ENDP IipAESENCLAST::
</pre>

<dl id="IipAESDEC">
<dt><a href='#IipGroupAES'>&uarr; AESDEC</a></dt>
<dd>Perform One Round of an AES Decryption Flow</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/AESDEC.html">AESDEC</a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4100.htm">t4100</a>
</dd>
</dl><pre>
IipAESDEC:: PROC
    MOV CL,0xDE
    JMP IipGroupAES:
 ENDP IipAESDEC::
</pre>

<dl id="IipAESDECLAST">
<dt><a href='#IipGroupAES'>&uarr; AESDECLAST</a></dt>
<dd>Perform Last Round of an AES Decryption Flow</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/AESDECLAST.html">AESDECLAST</a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4100.htm">t4100</a>
</dd>
</dl><pre>
IipAESDECLAST:: PROC
    MOV CL,0xDF
    JMP IipGroupAES:
 ENDP IipAESDECLAST::
</pre>

<dl id="IipAESKEYGENASSIST">
<dt><a href='#IipGroupAES'>&uarr; AESKEYGENASSIST</a></dt>
<dd>AES Round Key Generation Assist</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/AESKEYGENASSIST.html">AESKEYGENASSIST</a></dd>
</dl><pre>
IipAESKEYGENASSIST:: PROC
     IiRequire 686,AES
     IiEmitPrefix OTOGGLE
     IiEmitOpcode 0x0F,0x3A,0xDF
     IiOpEn RM
     IiModRM /r
     IiEmitImm Operand3, BYTE
     IiDispatchFormat xmm.xmm.imm, xmm.mem.imm
.xmm.xmm.imm:
.xmm.mem.imm:
     RET
 ENDP IipAESKEYGENASSIST::
</pre>

<dl id="IipCRC32">
<dt><a href='#IipHandlers'>&uarr; CRC32</a></dt>
<dd>Accumulate CRC32 Value</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/CRC32.html">CRC32</a></dd>
<dt>Category</dt>
<dd>sse42</dd>
<dt>Operands</dt>
<dd><b>Gdqp</b>,Eb | <b>Gdqp</b>,Evqp</dd>
<dt>Opcode</dt>
<dd>0xF20F38F0 /r | 0xF20F38F1 /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3725.htm">t3725</a>
<a class="EXT" href="../eatests/t3865.htm">t3865</a>
</dd>
</dl><pre>
IipCRC32:: PROC
    IiRequire 686,SSE4.2
    IiDataSize Operand2
    IiEmitPrefix REPNE
    IiEmitOpcode 0x0F,0x38
    IiOpEn RM
    IiModRM /r
    IiDispatchFormat r32.r8, r32.m8, r32.r16, r32.m16, r32.r32, r32.m32, r64.r8, r64.m8, r64.r64,r64.m64
.r64.r8:
.r64.m8:
    IiEmitPrefix REX.W
.r32.r8:
.r32.m8:
     IiEmitOpcode 0xF0
     RET
.r64.r64:
.r64.m64:
    IiEmitPrefix REX.W
.r32.r32:
.r32.m32:
.r32.r16:
.r32.m16:
    IiEmitOpcode 0xF1
    RET
 ENDP IipCRC32::
</pre>

<dl id="IipCRC32B">
<dt><a href='#IipCRC32'>&uarr; CRC32B</a></dt>
<dd>Accumulate CRC32 Value from Byte</dd>
<dt>Category</dt>
<dd>sse42</dd>
<dt>Operands</dt>
<dd><b>Gdqp</b>,Eb | <b>Gdqp</b>,Evqp</dd>
<dt>Opcode</dt>
<dd>0xF20F38F0 /r | 0xF20F38F1 /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3725.htm">t3725</a>
<a class="EXT" href="../eatests/t3865.htm">t3865</a>
</dd>
</dl><pre>
IipCRC32B:: PROC
    IiSuffixed CRC32,B,Category=p
 ENDP IipCRC32B::
</pre>

<dl id="IipCRC32W">
<dt><a href='#IipCRC32'>&uarr; CRC32W</a></dt>
<dd>Accumulate CRC32 Value from Word</dd>
<dt>Category</dt>
<dd>sse42</dd>
<dt>Operands</dt>
<dd><b>Gdqp</b>,Eb | <b>Gdqp</b>,Evqp</dd>
<dt>Opcode</dt>
<dd>0xF20F38F0 /r | 0xF20F38F1 /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3725.htm">t3725</a>
<a class="EXT" href="../eatests/t3865.htm">t3865</a>
</dd>
</dl><pre>
IipCRC32W:: PROC
    IiSuffixed CRC32,W,Category=p
 ENDP IipCRC32W::
</pre>

<dl id="IipCRC32D">
<dt><a href='#IipCRC32'>&uarr; CRC32D</a></dt>
<dd>Accumulate CRC32 Value from Dword</dd>
<dt>Category</dt>
<dd>sse42</dd>
<dt>Operands</dt>
<dd><b>Gdqp</b>,Eb | <b>Gdqp</b>,Evqp</dd>
<dt>Opcode</dt>
<dd>0xF20F38F0 /r | 0xF20F38F1 /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3725.htm">t3725</a>
<a class="EXT" href="../eatests/t3865.htm">t3865</a>
</dd>
</dl><pre>
IipCRC32D:: PROC
    IiSuffixed CRC32,D,Category=p
 ENDP IipCRC32D::
</pre>

<dl id="IipCRC32Q">
<dt><a href='#IipCRC32'>&uarr; CRC32Q</a></dt>
<dd>Accumulate CRC32 Value from Qword</dd>
<dt>Category</dt>
<dd>sse42</dd>
<dt>Operands</dt>
<dd><b>Gdqp</b>,Eb | <b>Gdqp</b>,Evqp</dd>
<dt>Opcode</dt>
<dd>0xF20F38F0 /r | 0xF20F38F1 /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3725.htm">t3725</a>
<a class="EXT" href="../eatests/t3865.htm">t3865</a>
</dd>
</dl><pre>
IipCRC32Q:: PROC
    IiSuffixed CRC32,Q,Category=p
 ENDP IipCRC32Q::
</pre>

<dl id="IipMOVNTPS">
<dt><a href='#IipHandlers'>&uarr; MOVNTPS</a></dt>
<dd>Store Packed Single-FP Values Using Non-Temporal Hint</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/MOVNTPS.html">MOVNTPS</a></dd>
<dt>Category</dt>
<dd>sse1,cachect</dd>
<dt>Operands</dt>
<dd><b>Mps</b>,Vps</dd>
<dt>Opcode</dt>
<dd>0x0F2B /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3690.htm">t3690</a>
</dd>
</dl><pre>
IipMOVNTPS:: PROC
    IiRequire 686,SSE
    IiEmitOpcode 0x0F,0x2B
    IiOpEn MR
    IiModRM /r
    IiDispatchFormat mem.xmm
.mem.xmm:
    RET
 ENDP IipMOVNTPS::
</pre>

<dl id="IipMOVNTPD">
<dt><a href='#IipMOVNTPS'>&uarr; MOVNTPD</a></dt>
<dd>Store Packed Double-FP Values Using Non-Temporal Hint</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/MOVNTPD.html">MOVNTPD</a></dd>
<dt>Category</dt>
<dd>sse2,cachect</dd>
<dt>Operands</dt>
<dd><b>Mpd</b>,Vpd</dd>
<dt>Opcode</dt>
<dd>0x660F2B /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3690.htm">t3690</a>
</dd>
</dl><pre>
IipMOVNTPD:: PROC
    IiEmitPrefix OTOGGLE
    IiRequire SSE2
    JMP IipMOVNTPS
 ENDP IipMOVNTPD::
</pre>

<dl id="IipMOVNTI">
<dt><a href='#IipHandlers'>&uarr; MOVNTI</a></dt>
<dd>Store Doubleword Using Non-Temporal Hint</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/MOVNTI.html">MOVNTI</a></dd>
<dt>Category</dt>
<dd>sse2,cachect</dd>
<dt>Operands</dt>
<dd><b>Mdqp</b>,Gdqp</dd>
<dt>Opcode</dt>
<dd>0x0FC3 /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3690.htm">t3690</a>
</dd>
</dl><pre>
IipMOVNTI:: PROC
    IiRequire 686,SSE2
    IiEmitOpcode 0x0F,0xC3
    IiOpEn MR
    IiModRM /r
    IiDispatchFormat mem.r32, mem.r64
.mem.r64:
    IiEmitPrefix REX.W
.mem.r32:
    RET
 ENDP IipMOVNTI::
</pre>

<dl id="IipMOVNTDQ">
<dt><a href='#IipHandlers'>&uarr; MOVNTDQ</a></dt>
<dd>Store Double Quadword Using Non-Temporal Hint</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/MOVNTDQ.html">MOVNTDQ</a></dd>
<dt>Category</dt>
<dd>sse2,cachect</dd>
<dt>Operands</dt>
<dd><b>Mdq</b>,Vdq</dd>
<dt>Opcode</dt>
<dd>0x660FE7 /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3690.htm">t3690</a>
</dd>
</dl><pre>
IipMOVNTDQ:: PROC
    IiRequire 686,SSE2
    IiEmitPrefix OTOGGLE
    IiEmitOpcode 0x0F,0xE7
    IiOpEn MR
    IiModRM /r
    IiDispatchFormat mem.xmm
.mem.xmm:
    RET
 ENDP IipMOVNTDQ::
</pre>

<dl id="IipMOVNTDQA">
<dt><a href='#IipHandlers'>&uarr; MOVNTDQA</a></dt>
<dd>Load Double Quadword Non-Temporal Aligned Hint</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/MOVNTDQA.html">MOVNTDQA</a></dd>
<dt>Category</dt>
<dd>sse41,cachect</dd>
<dt>Operands</dt>
<dd><b>Vdq</b>,Mdq</dd>
<dt>Opcode</dt>
<dd>0x660F382A /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3690.htm">t3690</a>
</dd>
</dl><pre>
IipMOVNTDQA:: PROC
    IiRequire 686,SSE4
    IiEmitPrefix OTOGGLE
    IiEmitOpcode 0x0F,0x38,0x2A
    IiOpEn RM
    IiModRM /r
    IiDispatchFormat xmm.mem
.xmm.mem:
    RET
 ENDP IipMOVNTDQA::
</pre>

<dl id="IipEXTRACTPS">
<dt><a href='#IipHandlers'>&uarr; EXTRACTPS</a></dt>
<dd>Extract Packed Single-FP Value</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/EXTRACTPS.html">EXTRACTPS</a></dd>
<dt>Category</dt>
<dd>sse41,simdfp,datamov</dd>
<dt>Operands</dt>
<dd><b>Ed</b>,Vdq,Ib</dd>
<dt>Opcode</dt>
<dd>0x660F3A17 /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3695.htm">t3695</a>
</dd>
</dl><pre>
IipEXTRACTPS:: PROC
    IiRequire 686,SSE4
    IiEmitPrefix OTOGGLE
    IiEmitOpcode 0x0F,0x3A,0x17
    IiOpEn MR
    IiModRM /r
    IiEmitImm Operand3, BYTE
    IiDispatchFormat r32.xmm.imm, r64.xmm.imm, mem.xmm.imm
.r64.xmm.imm:
    IiEncoding DATA=QWORD    
    IiEmitPrefix REX.W
.r32.xmm.imm:
.mem.xmm.imm:
    IiEncoding DATA=DWORD
    RET
 ENDP IipEXTRACTPS::
</pre>

<dl id="IipPEXTRB">
<dt><a href='#IipHandlers'>&uarr; PEXTRB</a></dt>
<dd>Extract Byte</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PEXTRB:PEXTRD:PEXTRQ.html">PEXTRB</a></dd>
<dt>Category</dt>
<dd>sse41,simdint,datamov</dd>
<dt>Operands</dt>
<dd><b>Mb</b>,Vdq,Ib | <b>Rdqp</b>,Vdq,Ib</dd>
<dt>Opcode</dt>
<dd>0x660F3A14 /r | 0x660F3A14 /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3695.htm">t3695</a>
</dd>
</dl><pre>
IipPEXTRB:: PROC
    IiRequire 686,SSE4
    IiEncoding DATA=BYTE
    IiEmitPrefix OTOGGLE
    IiEmitOpcode 0x0F,0x3A,0x14
    IiOpEn MR
    IiModRM /r
    IiEmitImm Operand3, BYTE
    IiDispatchFormat r64.xmm.imm, r32.xmm.imm, mem.xmm.imm
.r64.xmm.imm:
    IiEmitPrefix REX.W
    IiEncoding DATA=QWORD
    RET
.r32.xmm.imm:
    IiEncoding DATA=DWORD
.mem.xmm.imm:
    RET
 ENDP IipPEXTRB::
</pre>

<dl id="IipPEXTRD">
<dt><a href='#IipHandlers'>&uarr; PEXTRD</a></dt>
<dd>Extract Dword</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PEXTRB:PEXTRD:PEXTRQ.html">PEXTRD</a></dd>
<dt>Category</dt>
<dd>sse41,simdint,datamov</dd>
<dt>Operands</dt>
<dd><b>Ed</b>,Vdq,Ib</dd>
<dt>Opcode</dt>
<dd>0x660F3A16 /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3695.htm">t3695</a>
</dd>
</dl><pre>
IipPEXTRD:: PROC
    IiRequire 686,SSE4
    IiEncoding DATA=DWORD
    IiEmitPrefix OTOGGLE
    IiEmitOpcode 0x0F,0x3A,0x16
    IiOpEn MR
    IiModRM /r
    IiEmitImm Operand3, BYTE
    IiDispatchFormat r32.xmm.imm, mem.xmm.imm
.r32.xmm.imm:
.mem.xmm.imm:
    RET
 ENDP IipPEXTRD::
</pre>

<dl id="IipPEXTRQ">
<dt><a href='#IipHandlers'>&uarr; PEXTRQ</a></dt>
<dd>Extract Qword</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PEXTRB:PEXTRD:PEXTRQ.html">PEXTRQ</a></dd>
<dt>Category</dt>
<dd>sse41,simdint,datamov</dd>
<dt>Operands</dt>
<dd><b>Eqp</b>,Vdq,Ib</dd>
<dt>Opcode</dt>
<dd>0x660F3A16 /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3695.htm">t3695</a>
</dd>
</dl><pre>
IipPEXTRQ:: PROC
    IiRequire 686,SSE4
    IiEncoding DATA=QWORD
    IiEmitPrefix OTOGGLE, REX.W
    IiEmitOpcode 0x0F,0x3A,0x16
    IiOpEn MR
    IiModRM /r
    IiEmitImm Operand3, BYTE
    IiDispatchFormat r64.xmm.imm, mem.xmm.imm
.r64.xmm.imm:
.mem.xmm.imm:
    RET
 ENDP IipPEXTRQ::
</pre>

<dl id="IipLDMXCSR">
<dt><a href='#IipHandlers'>&uarr; LDMXCSR</a></dt>
<dd>Load MXCSR Register</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/LDMXCSR.html">LDMXCSR</a></dd>
<dt>Category</dt>
<dd>sse1,mxcsrsm</dd>
<dt>Operands</dt>
<dd>Md</dd>
<dt>Opcode</dt>
<dd>0x0FAE /2</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3700.htm">t3700</a>
</dd>
</dl><pre>
IipLDMXCSR:: PROC
    IiModRM /2
.rm:IiRequire SSE
    IiEncoding DATA=DWORD
    IiEmitOpcode 0x0F,0xAE
    IiOpEn M
    IiDispatchFormat mem
.mem:RET
 ENDP IipLDMXCSR::
</pre>

<dl id="IipSTMXCSR">
<dt><a href='#IipLDMXCSR'>&uarr; STMXCSR</a></dt>
<dd>Store MXCSR Register State</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/STMXCSR.html">STMXCSR</a></dd>
<dt>Category</dt>
<dd>sse1,mxcsrsm</dd>
<dt>Operands</dt>
<dd><b>Md</b></dd>
<dt>Opcode</dt>
<dd>0x0FAE /3</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3700.htm">t3700</a>
</dd>
</dl><pre>
IipSTMXCSR:: PROC
    IiModRM /3
    JMP IipLDMXCSR.rm:
 ENDP IipSTMXCSR::
</pre>

<dl id="IipMOVMSKPS">
<dt><a href='#IipHandlers'>&uarr; MOVMSKPS</a></dt>
<dd>Extract Packed Single-FP Sign Mask</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/MOVMSKPS.html">MOVMSKPS</a></dd>
<dt>Category</dt>
<dd>sse1,simdfp,datamov</dd>
<dt>Operands</dt>
<dd><b>Gdqp</b>,Ups</dd>
<dt>Opcode</dt>
<dd>0x0F50 /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3705.htm">t3705</a>
</dd>
</dl><pre>
IipMOVMSKPS:: PROC
    IiRequire 686,SSE
    IiEmitOpcode 0x0F,0x50
    IiOpEn RM
    IiModRM /r
    IiDispatchFormat r32.xmm, r64.xmm
.r64.xmm:
    IiEmitPrefix REX.W
.r32.xmm:
    RET
 ENDP IipMOVMSKPS::
</pre>

<dl id="IipMOVMSKPD">
<dt><a href='#IipMOVMSKPS'>&uarr; MOVMSKPD</a></dt>
<dd>Extract Packed Double-FP Sign Mask</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/MOVMSKPD.html">MOVMSKPD</a></dd>
<dt>Category</dt>
<dd>sse2,pcksclr,datamov</dd>
<dt>Operands</dt>
<dd><b>Gdqp</b>,Upd</dd>
<dt>Opcode</dt>
<dd>0x660F50 /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3705.htm">t3705</a>
</dd>
</dl><pre>
IipMOVMSKPD:: PROC
    IiRequire 686,SSE2
    IiEmitPrefix OTOGGLE
    JMP IipMOVMSKPS:
 ENDP IipMOVMSKPD::
</pre>

<dl id="IipPSRLDQ">
<dt><a href='#IipHandlers'>&uarr; PSRLDQ</a></dt>
<dd>Shift Double Quadword Right Logical</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PSRLDQ.html">PSRLDQ</a></dd>
<dt>Category</dt>
<dd>sse2,simdint,shift</dd>
<dt>Operands</dt>
<dd><b>Udq</b>,Ib</dd>
<dt>Opcode</dt>
<dd>0x660F73 /3</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3710.htm">t3710</a>
</dd>
</dl><pre>
IipPSRLDQ:: PROC
    IiModRM /3
.rm:IiRequire 686,SSE2
    IiEmitPrefix OTOGGLE
    IiEmitOpcode 0x0F,0x73
    IiOpEn M
    IiEmitImm Operand2, BYTE
    IiDispatchFormat xmm.imm
.xmm.imm:
    RET
 ENDP IipPSRLDQ::
</pre>

<dl id="IipPSLLDQ">
<dt><a href='#IipHandlers'>&uarr; PSLLDQ</a></dt>
<dd>Shift Double Quadword Left Logical</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PSLLDQ.html">PSLLDQ</a></dd>
<dt>Category</dt>
<dd>sse2,simdint,shift</dd>
<dt>Operands</dt>
<dd><b>Udq</b>,Ib</dd>
<dt>Opcode</dt>
<dd>0x660F73 /7</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3710.htm">t3710</a>
</dd>
</dl><pre>
IipPSLLDQ:: PROC
    IiModRM /7
    JMP IipPSRLDQ.rm:
 ENDP IipPSLLDQ::
</pre>

<dl id="IipCVTTSD2SI">
<dt><a href='#IipHandlers'>&uarr; CVTTSD2SI</a></dt>
<dd>Conv. with Trunc. Scalar Double-FP Value to Signed DW Int</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/CVTTSD2SI.html">CVTTSD2SI</a></dd>
<dt>Category</dt>
<dd>sse2,pcksclr,conver</dd>
<dt>Operands</dt>
<dd><b>Gdqp</b>,Wsd</dd>
<dt>Opcode</dt>
<dd>0xF20F2C /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3715.htm">t3715</a>
</dd>
</dl><pre>
IipCVTTSD2SI:: PROC
    IiEmitPrefix REPNE
    MOV CL,0x2C
.pf:IiRequire 686,SSE2
    IiEmitOpcode 0x0F,ECX
    IiOpEn RM
    IiModRM /r
    IiDispatchFormat r32.xmm, r32.mem, r64.xmm, r64.mem
.r64.xmm:
.r64.mem:
    IiEmitPrefix REX.W
    IiEncoding DATA=QWORD
    RET
.r32.xmm:
.r32.mem:
    IiEncoding DATA=DWORD
    RET
 ENDP IipCVTTSD2SI::
</pre>

<dl id="IipCVTSD2SI">
<dt><a href='#IipCVTTSD2SI'>&uarr; CVTSD2SI</a></dt>
<dd>Convert Scalar Double-FP Value to DW Integer</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/CVTSD2SI.html">CVTSD2SI</a></dd>
<dt>Category</dt>
<dd>sse2,pcksclr,conver</dd>
<dt>Operands</dt>
<dd><b>Gdqp</b>,Wsd</dd>
<dt>Opcode</dt>
<dd>0xF20F2D /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3715.htm">t3715</a>
</dd>
</dl><pre>
IipCVTSD2SI:: PROC
    IiEmitPrefix REPNE
    MOV CL,0x2D
    JMP IipCVTTSD2SI.pf:
 ENDP IipCVTSD2SI::
</pre>

<dl id="IipCVTSS2SI">
<dt><a href='#IipCVTTSD2SI'>&uarr; CVTSS2SI</a></dt>
<dd>Convert Scalar Single-FP Value to DW Integer</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/CVTSS2SI.html">CVTSS2SI</a></dd>
<dt>Category</dt>
<dd>sse1,conver</dd>
<dt>Operands</dt>
<dd><b>Gdqp</b>,Wss</dd>
<dt>Opcode</dt>
<dd>0xF30F2D /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3715.htm">t3715</a>
</dd>
</dl><pre>
IipCVTSS2SI:: PROC
    IiEmitPrefix REPE
    MOV CL,0x2D
    JMP IipCVTTSD2SI.pf:
 ENDP IipCVTSS2SI::
</pre>

<dl id="IipCVTTSS2SI">
<dt><a href='#IipCVTTSD2SI'>&uarr; CVTTSS2SI</a></dt>
<dd>Convert with Trunc. Scalar Single-FP Value to DW Integer</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/CVTTSS2SI.html">CVTTSS2SI</a></dd>
<dt>Category</dt>
<dd>sse1,conver</dd>
<dt>Operands</dt>
<dd><b>Gdqp</b>,Wss</dd>
<dt>Opcode</dt>
<dd>0xF30F2C /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3715.htm">t3715</a>
</dd>
</dl><pre>
IipCVTTSS2SI:: PROC
    IiEmitPrefix REPE
    MOV CL,0x2C
    JMP IipCVTTSD2SI.pf:
 ENDP IipCVTTSS2SI::
</pre>

<dl id="IipCVTSI2SS">
<dt><a href='#IipHandlers'>&uarr; CVTSI2SS</a></dt>
<dd>Convert DW Integer to Scalar Single-FP Value</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/CVTSI2SS.html">CVTSI2SS</a></dd>
<dt>Category</dt>
<dd>sse1,conver</dd>
<dt>Operands</dt>
<dd><b>Vss</b>,Edqp</dd>
<dt>Opcode</dt>
<dd>0xF30F2A /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3720.htm">t3720</a>
</dd>
</dl><pre>
IipCVTSI2SS:: PROC
    IiEmitPrefix REPE
.pf:IiRequire 686,SSE
    IiDataSize Operand2, StreamingSIMD=ON
    IiEmitOpcode 0x0F,0x2A
    IiOpEn RM
    IiModRM /r
    IiDispatchFormat xmm.r32, xmm.r64, xmm.m32, xmm.m64
.xmm.m64:
.xmm.r64:
    IiEmitPrefix REX.W
.xmm.m32:
.xmm.r32:
    RET
 ENDP IipCVTSI2SS::
</pre>

<dl id="IipCVTSI2SD">
<dt><a href='#IipCVTSI2SS'>&uarr; CVTSI2SD</a></dt>
<dd>Convert DW Integer to Scalar Double-FP Value</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/CVTSI2SD.html">CVTSI2SD</a></dd>
<dt>Category</dt>
<dd>sse2,pcksclr,conver</dd>
<dt>Operands</dt>
<dd><b>Vsd</b>,Edqp</dd>
<dt>Opcode</dt>
<dd>0xF20F2A /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3720.htm">t3720</a>
</dd>
</dl><pre>
IipCVTSI2SD:: PROC
    IiEmitPrefix REPNE
    JMP IipCVTSI2SS.pf:
 ENDP IipCVTSI2SD::
</pre>

<dl id="IipPINSRB">
<dt><a href='#IipHandlers'>&uarr; PINSRB</a></dt>
<dd>Insert Byte</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PINSRB:PINSRD:PINSRQ.html">PINSRB</a></dd>
<dt>Category</dt>
<dd>sse41,simdint,datamov</dd>
<dt>Operands</dt>
<dd><b>Vdq</b>,Mb,Ib | <b>Vdq</b>,Rdqp,Ib</dd>
<dt>Opcode</dt>
<dd>0x660F3A20 /r | 0x660F3A20 /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3730.htm">t3730</a>
</dd>
</dl><pre>
IipPINSRB:: PROC
    IiRequire 686,SSE4.1
    IiEncoding DATA=BYTE
    IiEmitPrefix OTOGGLE
    IiEmitOpcode 0x0F,0x3A,0x20
    IiOpEn RM
    IiModRM /r
    IiEmitImm Operand3, BYTE
    IiDispatchFormat xmm.r8.imm, xmm.r16.imm, xmm.r32.imm, xmm.r64.imm, xmm.mem.imm
.xmm.r64.imm:
.xmm.r32.imm:
.xmm.r16.imm:
.xmm.r8.imm:
.xmm.mem.imm:
    RET
 ENDP IipPINSRB::
</pre>

<dl id="IipPINSRD">
<dt><a href='#IipHandlers'>&uarr; PINSRD</a></dt>
<dd>Insert Dword</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PINSRB:PINSRD:PINSRQ.html">PINSRD</a></dd>
<dt>Category</dt>
<dd>sse41,simdint,datamov</dd>
<dt>Operands</dt>
<dd><b>Vdq</b>,Ed,Ib</dd>
<dt>Opcode</dt>
<dd>0x660F3A22 /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3730.htm">t3730</a>
</dd>
</dl><pre>
IipPINSRD:: PROC
    IiRequire 686,SSE4.1
    IiEncoding DATA=DWORD
    IiEmitPrefix OTOGGLE
    IiEmitOpcode 0x0F,0x3A,0x22
    IiOpEn RM
    IiModRM /r
    IiEmitImm Operand3, BYTE
    IiDispatchFormat xmm.r32.imm, xmm.r64.imm, xmm.mem.imm
.xmm.r64.imm:
.xmm.r32.imm:
.xmm.mem.imm:
    RET
 ENDP IipPINSRD::
</pre>

<dl id="IipPINSRQ">
<dt><a href='#IipHandlers'>&uarr; PINSRQ</a></dt>
<dd>Insert Qword</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PINSRB:PINSRD:PINSRQ.html">PINSRQ</a></dd>
<dt>Category</dt>
<dd>sse41,simdint,datamov</dd>
<dt>Operands</dt>
<dd><b>Vdq</b>,Eqp,Ib</dd>
<dt>Opcode</dt>
<dd>0x660F3A22 /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3730.htm">t3730</a>
</dd>
</dl><pre>
IipPINSRQ:: PROC
    IiRequire 686,SSE4.1
    IiEncoding DATA=QWORD
    IiEmitPrefix OTOGGLE, REX.W
    IiEmitOpcode 0x0F,0x3A,0x22
    IiOpEn RM
    IiModRM /r
    IiEmitImm Operand3, BYTE
    IiDispatchFormat xmm.r64.imm, xmm.mem.imm
.xmm.r64.imm:
.xmm.mem.imm:
    RET
 ENDP IipPINSRQ::
</pre>

<dl id="IipMOVUPS">
<dt><a href='#IipHandlers'>&uarr; MOVUPS</a></dt>
<dd>Move Unaligned Packed Single-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/MOVUPS.html">MOVUPS</a></dd>
<dt>Category</dt>
<dd>sse1,simdfp,datamov</dd>
<dt>Operands</dt>
<dd><b>Vps</b>,Wps | <b>Wps</b>,Vps</dd>
<dt>Opcode</dt>
<dd>0x0F10 /r | 0x0F11 /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3735.htm">t3735</a>
</dd>
</dl><pre>
IipMOVUPS:: PROC
    IiRequire 686,SSE1
    IiAllowModifier CODE
    IiModRM /r
    IiDispatchFormat xmm.mem, mem.xmm, xmm.xmm
.mem.xmm:
    IiEmitOpcode 0x0F,0x11
    IiEncoding CODE=LONG,DATA=OWORD
    IiOpEn MR
    RET
.xmm.xmm:
    JSt [EDI+II.MfgExplicit],iiMfgCODE_LONG,.mem.xmm:
.xmm.mem:
    IiEmitOpcode 0x0F,0x10
    IiEncoding CODE=SHORT,DATA=OWORD
    IiOpEn RM
    RET
 ENDP IipMOVUPS::
</pre>

<dl id="IipMOVAPS">
<dt><a href='#IipHandlers'>&uarr; MOVAPS</a></dt>
<dd>Move Aligned Packed Single-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/MOVAPS.html">MOVAPS</a></dd>
<dt>Category</dt>
<dd>sse1,simdfp,datamov</dd>
<dt>Operands</dt>
<dd><b>Vps</b>,Wps | <b>Wps</b>,Vps</dd>
<dt>Opcode</dt>
<dd>0x0F28 /r | 0x0F29 /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3735.htm">t3735</a>
</dd>
</dl><pre>
IipMOVAPS:: PROC
    IiRequire 686,SSE1
    IiAllowModifier CODE
    IiModRM /r
    IiDispatchFormat xmm.mem, mem.xmm, xmm.xmm
.mem.xmm:
    IiEmitOpcode 0x0F,0x29
    IiEncoding CODE=LONG,DATA=OWORD
    IiOpEn MR
    RET
.xmm.xmm:
    JSt [EDI+II.MfgExplicit],iiMfgCODE_LONG,.mem.xmm:
.xmm.mem:
    IiEmitOpcode 0x0F,0x28
    IiEncoding CODE=SHORT,DATA=OWORD
    IiOpEn RM
    RET
 ENDP IipMOVAPS::
</pre>

<dl id="IipMOVLPS">
<dt><a href='#IipHandlers'>&uarr; MOVLPS</a></dt>
<dd>Move Low Packed Single-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/MOVLPS.html">MOVLPS</a></dd>
<dt>Category</dt>
<dd>sse1,simdfp,datamov</dd>
<dt>Operands</dt>
<dd><b>Vq</b>,Mq | <b>Mq</b>,Vq</dd>
<dt>Opcode</dt>
<dd>0x0F12 /r | 0x0F13 /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3740.htm">t3740</a>
</dd>
</dl><pre>
IipMOVLPS:: PROC
    IiEncoding DATA=QWORD
    IiModRM /r
    IiDispatchFormat xmm.mem, mem.xmm
.xmm.mem:
    IiEmitOpcode 0x0F,0x12
    IiOpEn RM
    RET
.mem.xmm:
    IiEmitOpcode 0x0F,0x13
    IiOpEn MR
    RET
 ENDP IipMOVLPS::
</pre>

<dl id="IipMOVHPS">
<dt><a href='#IipHandlers'>&uarr; MOVHPS</a></dt>
<dd>Move High Packed Single-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/MOVHPS.html">MOVHPS</a></dd>
<dt>Category</dt>
<dd>sse1,simdfp,datamov</dd>
<dt>Operands</dt>
<dd><b>Vq</b>,Mq | <b>Mq</b>,Vq</dd>
<dt>Opcode</dt>
<dd>0x0F16 /r | 0x0F17 /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3740.htm">t3740</a>
</dd>
</dl><pre>
IipMOVHPS:: PROC
    IiEncoding DATA=QWORD
    IiModRM /r
    IiDispatchFormat xmm.mem, mem.xmm
.xmm.mem:
    IiEmitOpcode 0x0F,0x16
    IiOpEn RM
    RET
.mem.xmm:
    IiEmitOpcode 0x0F,0x17
    IiOpEn MR
    RET
 ENDP IipMOVHPS::
</pre>

<dl id="IipMOVHLPS">
<dt><a href='#IipHandlers'>&uarr; MOVHLPS</a></dt>
<dd>Move Packed Single-FP Values High to Low</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/MOVHLPS.html">MOVHLPS</a></dd>
<dt>Category</dt>
<dd>sse1,simdfp,datamov</dd>
<dt>Operands</dt>
<dd><b>Vq</b>,Uq</dd>
<dt>Opcode</dt>
<dd>0x0F12 /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3745.htm">t3745</a>
</dd>
</dl><pre>
IipMOVHLPS:: PROC
    IiEncoding DATA=QWORD
    IiEmitOpcode 0x0F,0x12
    IiOpEn RM
    IiModRM /r
    IiDispatchFormat xmm.xmm
.xmm.xmm:
    RET
 ENDP IipMOVHLPS::
</pre>

<dl id="IipMOVLHPS">
<dt><a href='#IipHandlers'>&uarr; MOVLHPS</a></dt>
<dd>Move Packed Single-FP Values Low to High</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/MOVLHPS.html">MOVLHPS</a></dd>
<dt>Category</dt>
<dd>sse1,simdfp,datamov</dd>
<dt>Operands</dt>
<dd><b>Vq</b>,Uq</dd>
<dt>Opcode</dt>
<dd>0x0F16 /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3745.htm">t3745</a>
</dd>
</dl><pre>
IipMOVLHPS:: PROC
    IiEncoding DATA=QWORD
    IiEmitOpcode 0x0F,0x16
    IiOpEn RM
    IiModRM /r
    IiDispatchFormat xmm.xmm
.xmm.xmm:
    RET
 ENDP IipMOVLHPS::
</pre>

<dl id="IipGroupSSE1">
<dt><a href="#IipHandlers">&uarr; <em>IipGroupSSE1</em></a></dt>
<dd>IipGroupSSE1 is a common handler for SSE1 instructions in format <b>xmm,xmm/mem
</b> encoded with two-byte opcode <b>0x0F,CL</b>.</dd>
<dt>Input</dt>
<dd><b>CL</b> is the secondary opcode.
<br/><b>EDX</b> has operand types as set by <a class='EXT' href='ii.htm#IiAssemble'>IiAssemble</a>.
<br/><b>EDI</b> is pointer to <a class='EXT' href='ii.htm#II'>II</a> structure with parsed operands.</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3760.htm">t3760</a>
<a class="EXT" href="../eatests/t3765.htm">t3765</a>
<a class="EXT" href="../eatests/t3770.htm">t3770</a>
</dd>
</dl><pre>
IipGroupSSE1:: PROC
     IiEncoding DATA=OWORD
.en: IiEmitOpcode 0x0F,ECX
     IiOpEn RM
     IiModRM /r
     IiDispatchFormat xmm.xmm, xmm.mem
.DW: IiEncoding DATA=DWORD  ; Entry when operand size is DWORD rather than OWORD.
     JMP .en:
.xmm.xmm:
.xmm.mem:
     RET
 ENDP IipGroupSSE1::
</pre>

<dl id="IipUNPCKLPS">
<dt><a href='#IipGroupSSE1'>&uarr; UNPCKLPS</a></dt>
<dd>Unpack and Interleave Low Packed Single-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/UNPCKLPS.html">UNPCKLPS</a></dd>
<dt>Category</dt>
<dd>sse1,simdfp,shunpck</dd>
<dt>Operands</dt>
<dd><b>Vps</b>,Wq</dd>
<dt>Opcode</dt>
<dd>0x0F14 /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3760.htm">t3760</a>
</dd>
</dl><pre>
IipUNPCKLPS:: PROC
    MOV CL,0x14
    JMP IipGroupSSE1:
 ENDP IipUNPCKLPS::
</pre>

<dl id="IipUNPCKHPS">
<dt><a href='#IipGroupSSE1'>&uarr; UNPCKHPS</a></dt>
<dd>Unpack and Interleave High Packed Single-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/UNPCKHPS.html">UNPCKHPS</a></dd>
<dt>Category</dt>
<dd>sse1,simdfp,shunpck</dd>
<dt>Operands</dt>
<dd><b>Vps</b>,Wq</dd>
<dt>Opcode</dt>
<dd>0x0F15 /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3760.htm">t3760</a>
</dd>
</dl><pre>
IipUNPCKHPS:: PROC
    MOV CL,0x15
    JMP IipGroupSSE1:
 ENDP IipUNPCKHPS::
</pre>

<dl id="IipUCOMISS">
<dt><a href='#IipGroupSSE1'>&uarr; UCOMISS</a></dt>
<dd>Unordered Compare Scalar Single-FP Values and Set EFLAGS</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/UCOMISS.html">UCOMISS</a></dd>
<dt>Category</dt>
<dd>sse1,simdfp,compar</dd>
<dt>Operands</dt>
<dd>Vss,Wss</dd>
<dt>Opcode</dt>
<dd>0x0F2E /r</dd>
<dt>Flags</dt>
<dd>modified:<b>....Z.PC</b>, defined:<b>....Z.PC</b></dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3760.htm">t3760</a>
</dd>
</dl><pre>
IipUCOMISS:: PROC
    MOV CL,0x2E
    JMP IipGroupSSE1.DW:
 ENDP IipUCOMISS::
</pre>

<dl id="IipCOMISS">
<dt><a href='#IipGroupSSE1'>&uarr; COMISS</a></dt>
<dd>Compare Scalar Ordered Single-FP Values and Set EFLAGS</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/COMISS.html">COMISS</a></dd>
<dt>Category</dt>
<dd>sse1,simdfp,compar</dd>
<dt>Operands</dt>
<dd>Vss,Wss</dd>
<dt>Opcode</dt>
<dd>0x0F2F /r</dd>
<dt>Flags</dt>
<dd>modified:<b>....Z.PC</b>, defined:<b>....Z.PC</b></dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3760.htm">t3760</a>
</dd>
</dl><pre>
IipCOMISS:: PROC
    MOV CL,0x2F
    JMP IipGroupSSE1.DW:
 ENDP IipCOMISS::
</pre>

<dl id="IipSQRTPS">
<dt><a href='#IipGroupSSE1'>&uarr; SQRTPS</a></dt>
<dd>Compute Square Roots of Packed Single-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/SQRTPS.html">SQRTPS</a></dd>
<dt>Category</dt>
<dd>sse1,simdfp,arith</dd>
<dt>Operands</dt>
<dd><b>Vps</b>,Wps</dd>
<dt>Opcode</dt>
<dd>0x0F51 /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3760.htm">t3760</a>
</dd>
</dl><pre>
IipSQRTPS:: PROC
    MOV CL,0x51
    JMP IipGroupSSE1:
 ENDP IipSQRTPS::
</pre>

<dl id="IipRSQRTPS">
<dt><a href='#IipGroupSSE1'>&uarr; RSQRTPS</a></dt>
<dd>Compute Recipr. of Square Roots of Packed Single-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/RSQRTPS.html">RSQRTPS</a></dd>
<dt>Category</dt>
<dd>sse1,simdfp,arith</dd>
<dt>Operands</dt>
<dd><b>Vps</b>,Wps</dd>
<dt>Opcode</dt>
<dd>0x0F52 /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3760.htm">t3760</a>
</dd>
</dl><pre>
IipRSQRTPS:: PROC
    MOV CL,0x52
    JMP IipGroupSSE1:
 ENDP IipRSQRTPS::
</pre>

<dl id="IipRCPPS">
<dt><a href='#IipGroupSSE1'>&uarr; RCPPS</a></dt>
<dd>Compute Reciprocals of Packed Single-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/RCPPS.html">RCPPS</a></dd>
<dt>Category</dt>
<dd>sse1,simdfp,arith</dd>
<dt>Operands</dt>
<dd><b>Vps</b>,Wps</dd>
<dt>Opcode</dt>
<dd>0x0F53 /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3760.htm">t3760</a>
</dd>
</dl><pre>
IipRCPPS:: PROC
    MOV CL,0x53
    JMP IipGroupSSE1:
 ENDP IipRCPPS::
</pre>

<dl id="IipANDNPS">
<dt><a href='#IipGroupSSE1'>&uarr; ANDNPS</a></dt>
<dd>Bitwise Logical AND NOT of Packed Single-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/ANDNPS.html">ANDNPS</a></dd>
<dt>Category</dt>
<dd>sse1,simdfp,logical</dd>
<dt>Operands</dt>
<dd><b>Vps</b>,Wps</dd>
<dt>Opcode</dt>
<dd>0x0F55 /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3765.htm">t3765</a>
</dd>
</dl><pre>
IipANDNPS:: PROC
    MOV CL,0x55
    JMP IipGroupSSE1:
 ENDP IipANDNPS::
</pre>

<dl id="IipANDPS">
<dt><a href='#IipGroupSSE1'>&uarr; ANDPS</a></dt>
<dd>Bitwise Logical AND of Packed Single-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/ANDPS.html">ANDPS</a></dd>
<dt>Category</dt>
<dd>sse1,simdfp,logical</dd>
<dt>Operands</dt>
<dd><b>Vps</b>,Wps</dd>
<dt>Opcode</dt>
<dd>0x0F54 /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3765.htm">t3765</a>
</dd>
</dl><pre>
IipANDPS:: PROC
    MOV CL,0x54
    JMP IipGroupSSE1:
 ENDP IipANDPS::
</pre>

<dl id="IipORPS">
<dt><a href='#IipGroupSSE1'>&uarr; ORPS</a></dt>
<dd>Bitwise Logical OR of Single-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/ORPS.html">ORPS</a></dd>
<dt>Category</dt>
<dd>sse1,simdfp,logical</dd>
<dt>Operands</dt>
<dd><b>Vps</b>,Wps</dd>
<dt>Opcode</dt>
<dd>0x0F56 /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3765.htm">t3765</a>
</dd>
</dl><pre>
IipORPS:: PROC
    MOV CL,0x56
    JMP IipGroupSSE1:
 ENDP IipORPS::
</pre>

<dl id="IipXORPS">
<dt><a href='#IipGroupSSE1'>&uarr; XORPS</a></dt>
<dd>Bitwise Logical XOR for Single-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/XORPS.html">XORPS</a></dd>
<dt>Category</dt>
<dd>sse1,simdfp,logical</dd>
<dt>Operands</dt>
<dd><b>Vps</b>,Wps</dd>
<dt>Opcode</dt>
<dd>0x0F57 /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3765.htm">t3765</a>
</dd>
</dl><pre>
IipXORPS:: PROC
    MOV CL,0x57
    JMP IipGroupSSE1:
 ENDP IipXORPS::
</pre>

<dl id="IipADDPS">
<dt><a href='#IipGroupSSE1'>&uarr; ADDPS</a></dt>
<dd>Add Packed Single-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/ADDPS.html">ADDPS</a></dd>
<dt>Category</dt>
<dd>sse1,simdfp,arith</dd>
<dt>Operands</dt>
<dd><b>Vps</b>,Wps</dd>
<dt>Opcode</dt>
<dd>0x0F58 /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3765.htm">t3765</a>
</dd>
</dl><pre>
IipADDPS:: PROC
    MOV CL,0x58
    JMP IipGroupSSE1:
 ENDP IipADDPS::
</pre>

<dl id="IipMULPS">
<dt><a href='#IipGroupSSE1'>&uarr; MULPS</a></dt>
<dd>Multiply Packed Single-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/MULPS.html">MULPS</a></dd>
<dt>Category</dt>
<dd>sse1,simdfp,arith</dd>
<dt>Operands</dt>
<dd><b>Vps</b>,Wps</dd>
<dt>Opcode</dt>
<dd>0x0F59 /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3765.htm">t3765</a>
</dd>
</dl><pre>
IipMULPS:: PROC
    MOV CL,0x59
    JMP IipGroupSSE1:
 ENDP IipMULPS::
</pre>

<dl id="IipCVTPS2PD">
<dt><a href='#IipGroupSSE1'>&uarr; CVTPS2PD</a></dt>
<dd>Convert Packed Single-FP Values to Double-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/CVTPS2PD.html">CVTPS2PD</a></dd>
<dt>Category</dt>
<dd>sse2,pcksclr,conver</dd>
<dt>Operands</dt>
<dd><b>Vpd</b>,Wps</dd>
<dt>Opcode</dt>
<dd>0x0F5A /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3770.htm">t3770</a>
</dd>
</dl><pre>
IipCVTPS2PD:: PROC
    MOV CL,0x5A
    JMP IipGroupSSE1:
 ENDP IipCVTPS2PD::
</pre>

<dl id="IipCVTDQ2PS">
<dt><a href='#IipGroupSSE1'>&uarr; CVTDQ2PS</a></dt>
<dd>Convert Packed DW Integers to Single-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/CVTDQ2PS.html">CVTDQ2PS</a></dd>
<dt>Category</dt>
<dd>sse2,pcksp</dd>
<dt>Operands</dt>
<dd><b>Vps</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0F5B /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3770.htm">t3770</a>
</dd>
</dl><pre>
IipCVTDQ2PS:: PROC
    MOV CL,0x5B
    JMP IipGroupSSE1:
 ENDP IipCVTDQ2PS::
</pre>

<dl id="IipSUBPS">
<dt><a href='#IipGroupSSE1'>&uarr; SUBPS</a></dt>
<dd>Subtract Packed Single-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/SUBPS.html">SUBPS</a></dd>
<dt>Category</dt>
<dd>sse1,simdfp,arith</dd>
<dt>Operands</dt>
<dd><b>Vps</b>,Wps</dd>
<dt>Opcode</dt>
<dd>0x0F5C /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3770.htm">t3770</a>
</dd>
</dl><pre>
IipSUBPS:: PROC
    MOV CL,0x5C
    JMP IipGroupSSE1:
 ENDP IipSUBPS::
</pre>

<dl id="IipMINPS">
<dt><a href='#IipGroupSSE1'>&uarr; MINPS</a></dt>
<dd>Return Minimum Packed Single-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/MINPS.html">MINPS</a></dd>
<dt>Category</dt>
<dd>sse1,simdfp,arith</dd>
<dt>Operands</dt>
<dd><b>Vps</b>,Wps</dd>
<dt>Opcode</dt>
<dd>0x0F5D /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3770.htm">t3770</a>
</dd>
</dl><pre>
IipMINPS:: PROC
    MOV CL,0x5D
    JMP IipGroupSSE1:
 ENDP IipMINPS::
</pre>

<dl id="IipDIVPS">
<dt><a href='#IipGroupSSE1'>&uarr; DIVPS</a></dt>
<dd>Divide Packed Single-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/DIVPS.html">DIVPS</a></dd>
<dt>Category</dt>
<dd>sse1,simdfp,arith</dd>
<dt>Operands</dt>
<dd><b>Vps</b>,Wps</dd>
<dt>Opcode</dt>
<dd>0x0F5E /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3770.htm">t3770</a>
</dd>
</dl><pre>
IipDIVPS:: PROC
    MOV CL,0x5E
    JMP IipGroupSSE1:
 ENDP IipDIVPS::
</pre>

<dl id="IipMAXPS">
<dt><a href='#IipGroupSSE1'>&uarr; MAXPS</a></dt>
<dd>Return Maximum Packed Single-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/MAXPS.html">MAXPS</a></dd>
<dt>Category</dt>
<dd>sse1,simdfp,arith</dd>
<dt>Operands</dt>
<dd><b>Vps</b>,Wps</dd>
<dt>Opcode</dt>
<dd>0x0F5F /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3770.htm">t3770</a>
</dd>
</dl><pre>
IipMAXPS:: PROC
    MOV CL,0x5F
    JMP IipGroupSSE1:
 ENDP IipMAXPS::
</pre>

<dl id="IipMOVHPD">
<dt><a href='#IipHandlers'>&uarr; MOVHPD</a></dt>
<dd>Move High Packed Double-FP Value</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/MOVHPD.html">MOVHPD</a></dd>
<dt>Category</dt>
<dd>sse2,pcksclr,datamov</dd>
<dt>Operands</dt>
<dd><b>Vq</b>,Mq | <b>Mq</b>,Vq</dd>
<dt>Opcode</dt>
<dd>0x660F16 /r | 0x660F17 /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3750.htm">t3750</a>
</dd>
</dl><pre>
IipMOVHPD:: PROC
    IiRequire 686,SSE2
    IiEmitPrefix OTOGGLE
    IiEmitOpcode 0x0F
    IiEncoding DATA=QWORD
    IiModRM /r
    IiDispatchFormat xmm.mem, mem.xmm
.xmm.mem:
    IiEmitOpcode 0x16
    IiOpEn RM
    RET
.mem.xmm:
    IiEmitOpcode 0x17
    IiOpEn MR
    RET
 ENDP IipMOVHPD::
</pre>

<dl id="IipMOVLPD">
<dt><a href='#IipHandlers'>&uarr; MOVLPD</a></dt>
<dd>Move Low Packed Double-FP Value</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/MOVLPD.html">MOVLPD</a></dd>
<dt>Category</dt>
<dd>sse2,pcksclr,datamov</dd>
<dt>Operands</dt>
<dd><b>Vq</b>,Mq | <b>Mq</b>,Vq</dd>
<dt>Opcode</dt>
<dd>0x660F12 /r | 0x660F13 /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3750.htm">t3750</a>
</dd>
</dl><pre>
IipMOVLPD:: PROC
    IiRequire 686,SSE2
    IiEmitPrefix OTOGGLE
    IiEmitOpcode 0x0F
    IiEncoding DATA=QWORD
    IiModRM /r
    IiDispatchFormat xmm.mem, mem.xmm
.xmm.mem:
    IiEmitOpcode 0x12
    IiOpEn RM
    RET
.mem.xmm:
    IiEmitOpcode 0x13
    IiOpEn MR
    RET
 ENDP IipMOVLPD::
</pre>

<dl id="IipMOVAPD">
<dt><a href='#IipHandlers'>&uarr; MOVAPD</a></dt>
<dd>Move Aligned Packed Double-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/MOVAPD.html">MOVAPD</a></dd>
<dt>Category</dt>
<dd>sse2,pcksclr,datamov</dd>
<dt>Operands</dt>
<dd><b>Vpd</b>,Wpd | <b>Wpd</b>,Vpd</dd>
<dt>Opcode</dt>
<dd>0x660F28 /r | 0x660F29 /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3750.htm">t3750</a>
</dd>
</dl><pre>
IipMOVAPD:: PROC
    IiRequire 686,SSE2
    IiAllowModifier CODE
    IiEmitPrefix OTOGGLE
    IiEmitOpcode 0x0F
    IiModRM /r
    IiDispatchFormat xmm.mem, mem.xmm, xmm.xmm
.mem.xmm:
    IiEmitOpcode 0x29
    IiEncoding CODE=LONG,DATA=OWORD
    IiOpEn MR
    RET
.xmm.xmm:
    IiDispatchCode LONG=.mem.xmm:
.xmm.mem:
    IiEmitOpcode 0x28
    IiEncoding CODE=SHORT,DATA=OWORD
    IiOpEn RM
    RET
 ENDP IipMOVAPD::
</pre>

<dl id="IipMOVSS">
<dt><a href='#IipHandlers'>&uarr; MOVSS</a></dt>
<dd>Move Scalar Single-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/MOVSS.html">MOVSS</a></dd>
<dt>Category</dt>
<dd>sse1,simdfp,datamov</dd>
<dt>Operands</dt>
<dd><b>Vss</b>,Wss | <b>Wss</b>,Vss</dd>
<dt>Opcode</dt>
<dd>0xF30F10 /r | 0xF30F11 /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3750.htm">t3750</a>
</dd>
</dl><pre>
IipMOVSS:: PROC
    IiAllowModifier CODE
    IiEmitPrefix REPE
    IiEmitOpcode 0x0F
    IiModRM /r
    IiDispatchFormat xmm.mem, mem.xmm, xmm.xmm
.mem.xmm:
    IiEmitOpcode 0x11
    IiEncoding CODE=LONG,DATA=DWORD
    IiOpEn MR
    RET
.xmm.xmm:
    IiDispatchCode LONG=.mem.xmm:
.xmm.mem:
    IiEmitOpcode 0x10
    IiEncoding CODE=SHORT,DATA=DWORD
    IiOpEn RM
    RET
 ENDP IipMOVSS::
</pre>

<dl id="IipMOVUPD">
<dt><a href='#IipHandlers'>&uarr; MOVUPD</a></dt>
<dd>Move Unaligned Packed Double-FP Value</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/MOVUPD.html">MOVUPD</a></dd>
<dt>Category</dt>
<dd>sse2,pcksclr,datamov</dd>
<dt>Operands</dt>
<dd><b>Vpd</b>,Wpd | <b>Wpd</b>,Vpd</dd>
<dt>Opcode</dt>
<dd>0x660F10 /r | 0x660F11 /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3750.htm">t3750</a>
</dd>
</dl><pre>
IipMOVUPD:: PROC
    IiRequire 686,SSE2
    IiAllowModifier CODE
    IiEmitPrefix OTOGGLE
    IiEmitOpcode 0x0F
    IiModRM /r
    IiDispatchFormat xmm.mem, mem.xmm, xmm.xmm
.mem.xmm:
    IiEmitOpcode 0x11
    IiEncoding CODE=LONG,DATA=OWORD
    IiOpEn MR
    RET
.xmm.xmm:
    IiDispatchCode LONG=.mem.xmm:
.xmm.mem:
    IiEmitOpcode 0x10
    IiEncoding CODE=SHORT,DATA=OWORD
    IiOpEn RM
    RET
 ENDP IipMOVUPD::
</pre>

<dl id="IipGroupSSE4_1">
<dt><a href="#IipHandlers">&uarr; <em>IipGroupSSE4_1</em></a></dt>
<dd>IipGroupSSE4_1 is a common handler for SSE4.1 instructions in format <b>xmm,xmm/mem
</b> encoded with prefix and three-byte opcode <b>0x66,0x0F,0x38,CL</b>.</dd>
<dt>Input</dt>
<dd><b>CL</b> is the tertiary opcode.
<br/><b>EDX</b> has operand types as set by <a class='EXT' href='ii.htm#IiAssemble'>IiAssemble</a>.
<br/><b>EDI</b> is pointer to <a class='EXT' href='ii.htm#II'>II</a> structure with parsed operands.</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3795.htm">t3795</a>
<a class="EXT" href="../eatests/t3800.htm">t3800</a>
<a class="EXT" href="../eatests/t3805.htm">t3805</a>
<a class="EXT" href="../eatests/t3810.htm">t3810</a>
</dd>
</dl><pre>
IipGroupSSE4_1:: PROC
     IiRequire 686,SSE4.1
     IiEncoding DATA=OWORD
     IiEmitPrefix OTOGGLE
     IiEmitOpcode 0x0F,0x38,ECX
     IiOpEn RM
     IiModRM /r
     IiDispatchFormat xmm.xmm, xmm.mem
.xmm.xmm:
.xmm.mem:
     RET
 ENDP IipGroupSSE4_1::
</pre>

<dl id="IipPTEST">
<dt><a href='#IipGroupSSE4_1'>&uarr; PTEST</a></dt>
<dd>Logical Compare</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PTEST.html">PTEST</a></dd>
<dt>Category</dt>
<dd>sse41</dd>
<dt>Operands</dt>
<dd>Vdq,Wdq</dd>
<dt>Opcode</dt>
<dd>0x660F3817 /r</dd>
<dt>Flags</dt>
<dd>modified:<b>O..SZAPC</b>, defined:<b>O..SZAPC</b>, values:<b>O..S.AP.</b></dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3810.htm">t3810</a>
</dd>
</dl><pre>
IipPTEST:: PROC
    MOV CL,0x17
    JMP IipGroupSSE4_1:
 ENDP IipPTEST::
</pre>

<dl id="IipPMOVSXBW">
<dt><a href='#IipGroupSSE4_1'>&uarr; PMOVSXBW</a></dt>
<dd>Packed Move with Sign Extend</dd>
<dt>Category</dt>
<dd>sse41,simdint,conver</dd>
<dt>Operands</dt>
<dd><b>Vdq</b>,Mq | <b>Vdq</b>,Udq</dd>
<dt>Opcode</dt>
<dd>0x660F3820 /r | 0x660F3820 /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3795.htm">t3795</a>
</dd>
</dl><pre>
IipPMOVSXBW:: PROC
    IiEncoding DATA=QWORD
    MOV CL,0x20
    JMP IipGroupSSE4_1:
 ENDP IipPMOVSXBW::
</pre>

<dl id="IipPMOVSXBD">
<dt><a href='#IipGroupSSE4_1'>&uarr; PMOVSXBD</a></dt>
<dd>Packed Move with Sign Extend</dd>
<dt>Category</dt>
<dd>sse41,simdint,conver</dd>
<dt>Operands</dt>
<dd><b>Vdq</b>,Md | <b>Vdq</b>,Udq</dd>
<dt>Opcode</dt>
<dd>0x660F3821 /r | 0x660F3821 /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3795.htm">t3795</a>
</dd>
</dl><pre>
IipPMOVSXBD:: PROC
    IiEncoding DATA=DWORD
    MOV CL,0x21
    JMP IipGroupSSE4_1:
 ENDP IipPMOVSXBD::
</pre>

<dl id="IipPMOVSXBQ">
<dt><a href='#IipGroupSSE4_1'>&uarr; PMOVSXBQ</a></dt>
<dd>Packed Move with Sign Extend</dd>
<dt>Category</dt>
<dd>sse41,simdint,conver</dd>
<dt>Operands</dt>
<dd><b>Vdq</b>,Mw | <b>Vdq</b>,Udq</dd>
<dt>Opcode</dt>
<dd>0x660F3822 /r | 0x660F3822 /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3795.htm">t3795</a>
</dd>
</dl><pre>
IipPMOVSXBQ:: PROC
    IiEncoding DATA=WORD
    MOV CL,0x22
    JMP IipGroupSSE4_1:
 ENDP IipPMOVSXBQ::
</pre>

<dl id="IipPMOVSXWD">
<dt><a href='#IipGroupSSE4_1'>&uarr; PMOVSXWD</a></dt>
<dd>Packed Move with Sign Extend</dd>
<dt>Category</dt>
<dd>sse41,simdint,conver</dd>
<dt>Operands</dt>
<dd><b>Vdq</b>,Mq | <b>Vdq</b>,Udq</dd>
<dt>Opcode</dt>
<dd>0x660F3823 /r | 0x660F3823 /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3795.htm">t3795</a>
</dd>
</dl><pre>
IipPMOVSXWD:: PROC
    IiEncoding DATA=QWORD
    MOV CL,0x23
    JMP IipGroupSSE4_1:
 ENDP IipPMOVSXWD::
</pre>

<dl id="IipPMOVSXWQ">
<dt><a href='#IipGroupSSE4_1'>&uarr; PMOVSXWQ</a></dt>
<dd>Packed Move with Sign Extend</dd>
<dt>Category</dt>
<dd>sse41,simdint,conver</dd>
<dt>Operands</dt>
<dd><b>Vdq</b>,Md | <b>Vdq</b>,Udq</dd>
<dt>Opcode</dt>
<dd>0x660F3824 /r | 0x660F3824 /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3795.htm">t3795</a>
</dd>
</dl><pre>
IipPMOVSXWQ:: PROC
    IiEncoding DATA=DWORD
    MOV CL,0x24
    JMP IipGroupSSE4_1:
 ENDP IipPMOVSXWQ::
</pre>

<dl id="IipPMOVSXDQ">
<dt><a href='#IipGroupSSE4_1'>&uarr; PMOVSXDQ</a></dt>
<dd>Packed Move with Sign Extend</dd>
<dt>Category</dt>
<dd>sse41,simdint,conver</dd>
<dt>Operands</dt>
<dd><b>Vdq</b>,Mq | <b>Vdq</b>,Udq</dd>
<dt>Opcode</dt>
<dd>0x660F3825 /r | 0x660F3825 /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3795.htm">t3795</a>
</dd>
</dl><pre>
IipPMOVSXDQ:: PROC
    IiEncoding DATA=QWORD
    MOV CL,0x25
    JMP IipGroupSSE4_1:
 ENDP IipPMOVSXDQ::
</pre>

<dl id="IipPMULDQ">
<dt><a href='#IipGroupSSE4_1'>&uarr; PMULDQ</a></dt>
<dd>Multiply Packed Signed Dword Integers</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PMULDQ.html">PMULDQ</a></dd>
<dt>Category</dt>
<dd>sse41,simdint,arith</dd>
<dt>Operands</dt>
<dd><b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x660F3828 /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3810.htm">t3810</a>
</dd>
</dl><pre>
IipPMULDQ:: PROC
    MOV CL,0x28
    JMP IipGroupSSE4_1:
 ENDP IipPMULDQ::
</pre>

<dl id="IipPCMPEQQ">
<dt><a href='#IipGroupSSE4_1'>&uarr; PCMPEQQ</a></dt>
<dd>Compare Packed Qword Data for Equal</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PCMPEQQ.html">PCMPEQQ</a></dd>
<dt>Category</dt>
<dd>sse41,simdint,compar</dd>
<dt>Operands</dt>
<dd><b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x660F3829 /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3810.htm">t3810</a>
</dd>
</dl><pre>
IipPCMPEQQ:: PROC
    MOV CL,0x29
    JMP IipGroupSSE4_1:
 ENDP IipPCMPEQQ::
</pre>

<dl id="IipPACKUSDW">
<dt><a href='#IipGroupSSE4_1'>&uarr; PACKUSDW</a></dt>
<dd>Pack with Unsigned Saturation</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PACKUSDW.html">PACKUSDW</a></dd>
<dt>Category</dt>
<dd>sse41,simdint,conver</dd>
<dt>Operands</dt>
<dd><b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x660F382B /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3810.htm">t3810</a>
</dd>
</dl><pre>
IipPACKUSDW:: PROC
    MOV CL,0x2B
    JMP IipGroupSSE4_1:
 ENDP IipPACKUSDW::
</pre>

<dl id="IipPMOVZXBW">
<dt><a href='#IipGroupSSE4_1'>&uarr; PMOVZXBW</a></dt>
<dd>Packed Move with Zero Extend</dd>
<dt>Category</dt>
<dd>sse41,simdint,conver</dd>
<dt>Operands</dt>
<dd><b>Vdq</b>,Mq | <b>Vdq</b>,Udq</dd>
<dt>Opcode</dt>
<dd>0x660F3830 /r | 0x660F3830 /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3800.htm">t3800</a>
</dd>
</dl><pre>
IipPMOVZXBW:: PROC
    IiEncoding DATA=QWORD
    MOV CL,0x30
    JMP IipGroupSSE4_1:
 ENDP IipPMOVZXBW::
</pre>

<dl id="IipPMOVZXBD">
<dt><a href='#IipGroupSSE4_1'>&uarr; PMOVZXBD</a></dt>
<dd>Packed Move with Zero Extend</dd>
<dt>Category</dt>
<dd>sse41,simdint,conver</dd>
<dt>Operands</dt>
<dd><b>Vdq</b>,Md | <b>Vdq</b>,Udq</dd>
<dt>Opcode</dt>
<dd>0x660F3831 /r | 0x660F3831 /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3800.htm">t3800</a>
</dd>
</dl><pre>
IipPMOVZXBD:: PROC
    IiEncoding DATA=DWORD
    MOV CL,0x31
    JMP IipGroupSSE4_1:
 ENDP IipPMOVZXBD::
</pre>

<dl id="IipPMOVZXBQ">
<dt><a href='#IipGroupSSE4_1'>&uarr; PMOVZXBQ</a></dt>
<dd>Packed Move with Zero Extend</dd>
<dt>Category</dt>
<dd>sse41,simdint,conver</dd>
<dt>Operands</dt>
<dd><b>Vdq</b>,Mw | <b>Vdq</b>,Udq</dd>
<dt>Opcode</dt>
<dd>0x660F3832 /r | 0x660F3832 /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3800.htm">t3800</a>
</dd>
</dl><pre>
IipPMOVZXBQ:: PROC
    IiEncoding DATA=WORD
    MOV CL,0x32
    JMP IipGroupSSE4_1:
 ENDP IipPMOVZXBQ::
</pre>

<dl id="IipPMOVZXWD">
<dt><a href='#IipGroupSSE4_1'>&uarr; PMOVZXWD</a></dt>
<dd>Packed Move with Zero Extend</dd>
<dt>Category</dt>
<dd>sse41,simdint,conver</dd>
<dt>Operands</dt>
<dd><b>Vdq</b>,Mq | <b>Vdq</b>,Udq</dd>
<dt>Opcode</dt>
<dd>0x660F3833 /r | 0x660F3833 /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3800.htm">t3800</a>
</dd>
</dl><pre>
IipPMOVZXWD:: PROC
    IiEncoding DATA=QWORD
    MOV CL,0x33
    JMP IipGroupSSE4_1:
 ENDP IipPMOVZXWD::
</pre>

<dl id="IipPMOVZXWQ">
<dt><a href='#IipGroupSSE4_1'>&uarr; PMOVZXWQ</a></dt>
<dd>Packed Move with Zero Extend</dd>
<dt>Category</dt>
<dd>sse41,simdint,conver</dd>
<dt>Operands</dt>
<dd><b>Vdq</b>,Md | <b>Vdq</b>,Udq</dd>
<dt>Opcode</dt>
<dd>0x660F3834 /r | 0x660F3834 /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3800.htm">t3800</a>
</dd>
</dl><pre>
IipPMOVZXWQ:: PROC
    IiEncoding DATA=DWORD
    MOV CL,0x34
    JMP IipGroupSSE4_1:
 ENDP IipPMOVZXWQ::
</pre>

<dl id="IipPMOVZXDQ">
<dt><a href='#IipGroupSSE4_1'>&uarr; PMOVZXDQ</a></dt>
<dd>Packed Move with Zero Extend</dd>
<dt>Category</dt>
<dd>sse41,simdint,conver</dd>
<dt>Operands</dt>
<dd><b>Vdq</b>,Mq | <b>Vdq</b>,Udq</dd>
<dt>Opcode</dt>
<dd>0x660F3835 /r | 0x660F3835 /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3800.htm">t3800</a>
</dd>
</dl><pre>
IipPMOVZXDQ:: PROC
    IiEncoding DATA=QWORD
    MOV CL,0x35
    JMP IipGroupSSE4_1:
 ENDP IipPMOVZXDQ::
</pre>

<dl id="IipPCMPGTQ">
<dt><a href='#IipGroupSSE4_1'>&uarr; PCMPGTQ</a></dt>
<dd>Compare Packed Qword Data for Greater Than</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PCMPGTQ.html">PCMPGTQ</a></dd>
<dt>Category</dt>
<dd>sse42,simdint,compar</dd>
<dt>Operands</dt>
<dd><b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x660F3837 /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3810.htm">t3810</a>
</dd>
</dl><pre>
IipPCMPGTQ:: PROC
    IiRequire SSE4.2
    MOV CL,0x37
    JMP IipGroupSSE4_1:
 ENDP IipPCMPGTQ::
</pre>

<dl id="IipPMINSB">
<dt><a href='#IipGroupSSE4_1'>&uarr; PMINSB</a></dt>
<dd>Minimum of Packed Signed Byte Integers</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PMINSB:PMINSW.html">PMINSB</a></dd>
<dt>Category</dt>
<dd>sse41,simdint,compar</dd>
<dt>Operands</dt>
<dd><b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x660F3838 /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3805.htm">t3805</a>
</dd>
</dl><pre>
IipPMINSB:: PROC
    MOV CL,0x38
    JMP IipGroupSSE4_1:
 ENDP IipPMINSB::
</pre>

<dl id="IipPMINSD">
<dt><a href='#IipGroupSSE4_1'>&uarr; PMINSD</a></dt>
<dd>Minimum of Packed Signed Dword Integers</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PMINSD:PMINSQ.html">PMINSD</a></dd>
<dt>Category</dt>
<dd>sse41,simdint,compar</dd>
<dt>Operands</dt>
<dd><b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x660F3839 /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3805.htm">t3805</a>
</dd>
</dl><pre>
IipPMINSD:: PROC
    MOV CL,0x39
    JMP IipGroupSSE4_1:
 ENDP IipPMINSD::
</pre>

<dl id="IipPMINUW">
<dt><a href='#IipGroupSSE4_1'>&uarr; PMINUW</a></dt>
<dd>Minimum of Packed Unsigned Word Integers</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PMINUB:PMINUW.html">PMINUW</a></dd>
<dt>Category</dt>
<dd>sse41,simdint,compar</dd>
<dt>Operands</dt>
<dd><b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x660F383A /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3805.htm">t3805</a>
</dd>
</dl><pre>
IipPMINUW:: PROC
    MOV CL,0x3A
    JMP IipGroupSSE4_1:
 ENDP IipPMINUW::
</pre>

<dl id="IipPMINUD">
<dt><a href='#IipGroupSSE4_1'>&uarr; PMINUD</a></dt>
<dd>Minimum of Packed Unsigned Dword Integers</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PMINUD:PMINUQ.html">PMINUD</a></dd>
<dt>Category</dt>
<dd>sse41,simdint,compar</dd>
<dt>Operands</dt>
<dd><b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x660F383B /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3805.htm">t3805</a>
</dd>
</dl><pre>
IipPMINUD:: PROC
    MOV CL,0x3B
    JMP IipGroupSSE4_1:
 ENDP IipPMINUD::
</pre>

<dl id="IipPMAXSB">
<dt><a href='#IipGroupSSE4_1'>&uarr; PMAXSB</a></dt>
<dd>Maximum of Packed Signed Byte Integers</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PMAXSB:PMAXSW:PMAXSD:PMAXSQ.html">PMAXSB</a></dd>
<dt>Category</dt>
<dd>sse41,simdint,compar</dd>
<dt>Operands</dt>
<dd><b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x660F383C /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3805.htm">t3805</a>
</dd>
</dl><pre>
IipPMAXSB:: PROC
    MOV CL,0x3C
    JMP IipGroupSSE4_1:
 ENDP IipPMAXSB::
</pre>

<dl id="IipPMAXSD">
<dt><a href='#IipGroupSSE4_1'>&uarr; PMAXSD</a></dt>
<dd>Maximum of Packed Signed Dword Integers</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PMAXSB:PMAXSW:PMAXSD:PMAXSQ.html">PMAXSD</a></dd>
<dt>Category</dt>
<dd>sse41,simdint,compar</dd>
<dt>Operands</dt>
<dd><b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x660F383D /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3805.htm">t3805</a>
</dd>
</dl><pre>
IipPMAXSD:: PROC
    MOV CL,0x3D
    JMP IipGroupSSE4_1:
 ENDP IipPMAXSD::
</pre>

<dl id="IipPMAXUW">
<dt><a href='#IipGroupSSE4_1'>&uarr; PMAXUW</a></dt>
<dd>Maximum of Packed Unsigned Word Integers</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PMAXUB:PMAXUW.html">PMAXUW</a></dd>
<dt>Category</dt>
<dd>sse41,simdint,compar</dd>
<dt>Operands</dt>
<dd><b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x660F383E /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3805.htm">t3805</a>
</dd>
</dl><pre>
IipPMAXUW:: PROC
    MOV CL,0x3E
    JMP IipGroupSSE4_1:
 ENDP IipPMAXUW::
</pre>

<dl id="IipPMAXUD">
<dt><a href='#IipGroupSSE4_1'>&uarr; PMAXUD</a></dt>
<dd>Maximum of Packed Unsigned Dword Integers</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PMAXUD:PMAXUQ.html">PMAXUD</a></dd>
<dt>Category</dt>
<dd>sse41,simdint,compar</dd>
<dt>Operands</dt>
<dd><b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x660F383F /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3805.htm">t3805</a>
</dd>
</dl><pre>
IipPMAXUD:: PROC
    MOV CL,0x3F
    JMP IipGroupSSE4_1:
 ENDP IipPMAXUD::
</pre>

<dl id="IipPMULLD">
<dt><a href='#IipGroupSSE4_1'>&uarr; PMULLD</a></dt>
<dd>Multiply Packed Signed Dword Integers and Store Low Result</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PMULLD:PMULLQ.html">PMULLD</a></dd>
<dt>Category</dt>
<dd>sse41,simdint,arith</dd>
<dt>Operands</dt>
<dd><b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x660F3840 /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3810.htm">t3810</a>
</dd>
</dl><pre>
IipPMULLD:: PROC
    MOV CL,0x40
    JMP IipGroupSSE4_1:
 ENDP IipPMULLD::
</pre>

<dl id="IipPHMINPOSUW">
<dt><a href='#IipGroupSSE4_1'>&uarr; PHMINPOSUW</a></dt>
<dd>Packed Horizontal Word Minimum</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PHMINPOSUW.html">PHMINPOSUW</a></dd>
<dt>Category</dt>
<dd>sse41,simdint,compar</dd>
<dt>Operands</dt>
<dd><b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x660F3841 /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3810.htm">t3810</a>
</dd>
</dl><pre>
IipPHMINPOSUW:: PROC
    MOV CL,0x41
    JMP IipGroupSSE4_1:
 ENDP IipPHMINPOSUW::
</pre>

<dl id="IipGroupSSE">
<dt><a href="#IipHandlers">&uarr; <em>IipGroupSSE</em></a></dt>
<dd>IipGroupSSE is a common handler for SSE1, SSE2 or SSE3 instructions in format <b>xmm, xmm/mem
</b> encoded with prefix and two-byte opcode <b>Pfx,0x0F,CL</b>.</dd>
<dt>Input</dt>
<dd><b>EAX</b> is <a class="EXT" href="ii.htm#IiMfgEnc">iiMfgDATA_Mask
</a> encoding of operand size.
<br/><b>CL</b> is secondary opcode.
<br/><b>EDX</b> has operand types as set by <a class='EXT' href='ii.htm#IiAssemble'>IiAssemble</a>.
<br/><b>EDI</b> is pointer to <a class='EXT' href='ii.htm#II'>II</a> structure with parsed operands.</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3830.htm">t3830</a>
<a class="EXT" href="../eatests/t3835.htm">t3835</a>
<a class="EXT" href="../eatests/t3840.htm">t3840</a>
<a class="EXT" href="../eatests/t3845.htm">t3845</a>
<a class="EXT" href="../eatests/t3850.htm">t3850</a>
<a class="EXT" href="../eatests/t3855.htm">t3855</a>
<a class="EXT" href="../eatests/t3860.htm">t3860</a>
</dd>
</dl><pre>
IipGroupSSE:: PROC
    IiEncoding EAX
    IiEmitOpcode 0x0F,ECX
    IiOpEn RM
    IiModRM /r
    IiDispatchFormat xmm.xmm, xmm.mem
.xmm.xmm:
.xmm.mem:
    RET
; Procedure entries which specify required SSE level and prefix.
.3.66:IiRequire SSE3
.2.66:IiRequire SSE2
.1.66:IiEmitPrefix OTOGGLE
      JMP IipGroupSSE:
.3.F2:IiRequire SSE3
.2.F2:IiRequire SSE2
.1.F2:IiEmitPrefix REPNE
      JMP IipGroupSSE:
.3.F3:IiRequire SSE3
.2.F3:IiRequire SSE2
.1.F3:IiEmitPrefix REPE
      JMP IipGroupSSE:
 ENDP IipGroupSSE::
</pre>

<dl id="IipUNPCKLPD">
<dt><a href='#IipGroupSSE'>&uarr; UNPCKLPD</a></dt>
<dd>Unpack and Interleave Low Packed Double-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/UNPCKLPD.html">UNPCKLPD</a></dd>
<dt>Category</dt>
<dd>sse2,pcksclr,shunpck</dd>
<dt>Operands</dt>
<dd><b>Vpd</b>,Wpd</dd>
<dt>Opcode</dt>
<dd>0x660F14 /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3855.htm">t3855</a>
</dd>
</dl><pre>
IipUNPCKLPD:: PROC
    MOV EAX,iiMfgDATA_OWORD
    MOV CL,0x14
    JMP IipGroupSSE.2.66:
 ENDP IipUNPCKLPD::
</pre>

<dl id="IipUNPCKHPD">
<dt><a href='#IipGroupSSE'>&uarr; UNPCKHPD</a></dt>
<dd>Unpack and Interleave High Packed Double-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/UNPCKHPD.html">UNPCKHPD</a></dd>
<dt>Category</dt>
<dd>sse2,pcksclr,shunpck</dd>
<dt>Operands</dt>
<dd><b>Vpd</b>,Wpd</dd>
<dt>Opcode</dt>
<dd>0x660F15 /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3855.htm">t3855</a>
</dd>
</dl><pre>
IipUNPCKHPD:: PROC
    MOV EAX,iiMfgDATA_OWORD
    MOV CL,0x15
    JMP IipGroupSSE.2.66:
 ENDP IipUNPCKHPD::
</pre>

<dl id="IipUCOMISD">
<dt><a href='#IipGroupSSE'>&uarr; UCOMISD</a></dt>
<dd>Unordered Compare Scalar Double-FP Values and Set EFLAGS</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/UCOMISD.html">UCOMISD</a></dd>
<dt>Category</dt>
<dd>sse2,pcksclr,compar</dd>
<dt>Operands</dt>
<dd>Vsd,Wsd</dd>
<dt>Opcode</dt>
<dd>0x660F2E /r</dd>
<dt>Flags</dt>
<dd>modified:<b>....Z.PC</b>, defined:<b>....Z.PC</b></dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3855.htm">t3855</a>
</dd>
</dl><pre>
IipUCOMISD:: PROC
    MOV EAX,iiMfgDATA_QWORD
    MOV CL,0x2E
    JMP IipGroupSSE.2.66:
 ENDP IipUCOMISD::
</pre>

<dl id="IipCOMISD">
<dt><a href='#IipGroupSSE'>&uarr; COMISD</a></dt>
<dd>Compare Scalar Ordered Double-FP Values and Set EFLAGS</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/COMISD.html">COMISD</a></dd>
<dt>Category</dt>
<dd>sse2,pcksclr,compar</dd>
<dt>Operands</dt>
<dd>Vsd,Wsd</dd>
<dt>Opcode</dt>
<dd>0x660F2F /r</dd>
<dt>Flags</dt>
<dd>modified:<b>....Z.PC</b>, defined:<b>....Z.PC</b></dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3855.htm">t3855</a>
</dd>
</dl><pre>
IipCOMISD:: PROC
    MOV EAX,iiMfgDATA_OWORD
    MOV CL,0x2F
    JMP IipGroupSSE.2.66:
 ENDP IipCOMISD::
</pre>

<dl id="IipSQRTPD">
<dt><a href='#IipGroupSSE'>&uarr; SQRTPD</a></dt>
<dd>Compute Square Roots of Packed Double-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/SQRTPD.html">SQRTPD</a></dd>
<dt>Category</dt>
<dd>sse2,pcksclr,arith</dd>
<dt>Operands</dt>
<dd><b>Vpd</b>,Wpd</dd>
<dt>Opcode</dt>
<dd>0x660F51 /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3850.htm">t3850</a>
</dd>
</dl><pre>
IipSQRTPD:: PROC
    MOV EAX,iiMfgDATA_OWORD
    MOV CL,0x51
    JMP IipGroupSSE.2.66:
 ENDP IipSQRTPD::
</pre>

<dl id="IipANDPD">
<dt><a href='#IipGroupSSE'>&uarr; ANDPD</a></dt>
<dd>Bitwise Logical AND of Packed Double-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/ANDPD.html">ANDPD</a></dd>
<dt>Category</dt>
<dd>sse2,pcksclr,logical</dd>
<dt>Operands</dt>
<dd><b>Vpd</b>,Wpd</dd>
<dt>Opcode</dt>
<dd>0x660F54 /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3840.htm">t3840</a>
</dd>
</dl><pre>
IipANDPD:: PROC
    MOV EAX,iiMfgDATA_OWORD
    MOV CL,0x54
    JMP IipGroupSSE.2.66:
 ENDP IipANDPD::
</pre>

<dl id="IipANDNPD">
<dt><a href='#IipGroupSSE'>&uarr; ANDNPD</a></dt>
<dd>Bitwise Logical AND NOT of Packed Double-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/ANDNPD.html">ANDNPD</a></dd>
<dt>Category</dt>
<dd>sse2,pcksclr,logical</dd>
<dt>Operands</dt>
<dd><b>Vpd</b>,Wpd</dd>
<dt>Opcode</dt>
<dd>0x660F55 /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3840.htm">t3840</a>
</dd>
</dl><pre>
IipANDNPD:: PROC
    MOV EAX,iiMfgDATA_OWORD
    MOV CL,0x55
    JMP IipGroupSSE.2.66:
 ENDP IipANDNPD::
</pre>

<dl id="IipORPD">
<dt><a href='#IipGroupSSE'>&uarr; ORPD</a></dt>
<dd>Bitwise Logical OR of Double-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/ORPD.html">ORPD</a></dd>
<dt>Category</dt>
<dd>sse2,pcksclr,logical</dd>
<dt>Operands</dt>
<dd><b>Vpd</b>,Wpd</dd>
<dt>Opcode</dt>
<dd>0x660F56 /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3840.htm">t3840</a>
</dd>
</dl><pre>
IipORPD:: PROC
    MOV EAX,iiMfgDATA_OWORD
    MOV CL,0x56
    JMP IipGroupSSE.2.66:
 ENDP IipORPD::
</pre>

<dl id="IipXORPD">
<dt><a href='#IipGroupSSE'>&uarr; XORPD</a></dt>
<dd>Bitwise Logical XOR for Double-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/XORPD.html">XORPD</a></dd>
<dt>Category</dt>
<dd>sse2,pcksclr,logical</dd>
<dt>Operands</dt>
<dd><b>Vpd</b>,Wpd</dd>
<dt>Opcode</dt>
<dd>0x660F57 /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3840.htm">t3840</a>
</dd>
</dl><pre>
IipXORPD:: PROC
    MOV EAX,iiMfgDATA_OWORD
    MOV CL,0x57
    JMP IipGroupSSE.2.66:
 ENDP IipXORPD::
</pre>

<dl id="IipADDPD">
<dt><a href='#IipGroupSSE'>&uarr; ADDPD</a></dt>
<dd>Add Packed Double-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/ADDPD.html">ADDPD</a></dd>
<dt>Category</dt>
<dd>sse2,pcksclr,arith</dd>
<dt>Operands</dt>
<dd><b>Vpd</b>,Wpd</dd>
<dt>Opcode</dt>
<dd>0x660F58 /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3840.htm">t3840</a>
</dd>
</dl><pre>
IipADDPD:: PROC
    MOV EAX,iiMfgDATA_OWORD
    MOV CL,0x58
    JMP IipGroupSSE.2.66:
 ENDP IipADDPD::
</pre>

<dl id="IipMULPD">
<dt><a href='#IipGroupSSE'>&uarr; MULPD</a></dt>
<dd>Multiply Packed Double-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/MULPD.html">MULPD</a></dd>
<dt>Category</dt>
<dd>sse2,pcksclr,arith</dd>
<dt>Operands</dt>
<dd><b>Vpd</b>,Wpd</dd>
<dt>Opcode</dt>
<dd>0x660F59 /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3850.htm">t3850</a>
</dd>
</dl><pre>
IipMULPD:: PROC
    MOV EAX,iiMfgDATA_OWORD
    MOV CL,0x59
    JMP IipGroupSSE.2.66:
 ENDP IipMULPD::
</pre>

<dl id="IipCVTPD2PS">
<dt><a href='#IipGroupSSE'>&uarr; CVTPD2PS</a></dt>
<dd>Convert Packed Double-FP Values to Single-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/CVTPD2PS.html">CVTPD2PS</a></dd>
<dt>Category</dt>
<dd>sse2,pcksclr,conver</dd>
<dt>Operands</dt>
<dd><b>Vps</b>,Wpd</dd>
<dt>Opcode</dt>
<dd>0x660F5A /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3845.htm">t3845</a>
</dd>
</dl><pre>
IipCVTPD2PS:: PROC
    MOV EAX,iiMfgDATA_OWORD
    MOV CL,0x5A
    JMP IipGroupSSE.2.66:
 ENDP IipCVTPD2PS::
</pre>

<dl id="IipCVTPS2DQ">
<dt><a href='#IipGroupSSE'>&uarr; CVTPS2DQ</a></dt>
<dd>Convert Packed Single-FP Values to DW Integers</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/CVTPS2DQ.html">CVTPS2DQ</a></dd>
<dt>Category</dt>
<dd>sse2,pcksp</dd>
<dt>Operands</dt>
<dd><b>Vdq</b>,Wps</dd>
<dt>Opcode</dt>
<dd>0x660F5B /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3845.htm">t3845</a>
</dd>
</dl><pre>
IipCVTPS2DQ:: PROC
    MOV EAX,iiMfgDATA_OWORD
    MOV CL,0x5B
    JMP IipGroupSSE.2.66:
 ENDP IipCVTPS2DQ::
</pre>

<dl id="IipSUBPD">
<dt><a href='#IipGroupSSE'>&uarr; SUBPD</a></dt>
<dd>Subtract Packed Double-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/SUBPD.html">SUBPD</a></dd>
<dt>Category</dt>
<dd>sse2,pcksclr,arith</dd>
<dt>Operands</dt>
<dd><b>Vpd</b>,Wpd</dd>
<dt>Opcode</dt>
<dd>0x660F5C /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3855.htm">t3855</a>
</dd>
</dl><pre>
IipSUBPD:: PROC
    MOV EAX,iiMfgDATA_OWORD
    MOV CL,0x5C
    JMP IipGroupSSE.2.66:
 ENDP IipSUBPD::
</pre>

<dl id="IipMINPD">
<dt><a href='#IipGroupSSE'>&uarr; MINPD</a></dt>
<dd>Return Minimum Packed Double-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/MINPD.html">MINPD</a></dd>
<dt>Category</dt>
<dd>sse2,pcksclr,arith</dd>
<dt>Operands</dt>
<dd><b>Vpd</b>,Wpd</dd>
<dt>Opcode</dt>
<dd>0x660F5D /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3850.htm">t3850</a>
</dd>
</dl><pre>
IipMINPD:: PROC
    MOV EAX,iiMfgDATA_OWORD
    MOV CL,0x5D
    JMP IipGroupSSE.2.66:
 ENDP IipMINPD::
</pre>

<dl id="IipDIVPD">
<dt><a href='#IipGroupSSE'>&uarr; DIVPD</a></dt>
<dd>Divide Packed Double-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/DIVPD.html">DIVPD</a></dd>
<dt>Category</dt>
<dd>sse2,pcksclr,arith</dd>
<dt>Operands</dt>
<dd><b>Vpd</b>,Wpd</dd>
<dt>Opcode</dt>
<dd>0x660F5E /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3840.htm">t3840</a>
</dd>
</dl><pre>
IipDIVPD:: PROC
    MOV EAX,iiMfgDATA_OWORD
    MOV CL,0x5E
    JMP IipGroupSSE.2.66:
 ENDP IipDIVPD::
</pre>

<dl id="IipMAXPD">
<dt><a href='#IipGroupSSE'>&uarr; MAXPD</a></dt>
<dd>Return Maximum Packed Double-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/MAXPD.html">MAXPD</a></dd>
<dt>Category</dt>
<dd>sse2,pcksclr,arith</dd>
<dt>Operands</dt>
<dd><b>Vpd</b>,Wpd</dd>
<dt>Opcode</dt>
<dd>0x660F5F /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3850.htm">t3850</a>
</dd>
</dl><pre>
IipMAXPD:: PROC
    MOV EAX,iiMfgDATA_OWORD
    MOV CL,0x5F
    JMP IipGroupSSE.2.66:
 ENDP IipMAXPD::
</pre>

<dl id="IipPUNPCKLQDQ">
<dt><a href='#IipGroupSSE'>&uarr; PUNPCKLQDQ</a></dt>
<dd>Unpack Low Data</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PUNPCKLBW:PUNPCKLWD:PUNPCKLDQ:PUNPCKLQDQ.html">PUNPCKLQDQ</a></dd>
<dt>Category</dt>
<dd>sse2,simdint,shunpck</dd>
<dt>Operands</dt>
<dd><b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x660F6C /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3855.htm">t3855</a>
</dd>
</dl><pre>
IipPUNPCKLQDQ:: PROC
    MOV EAX,iiMfgDATA_OWORD
    MOV CL,0x6C
    JMP IipGroupSSE.2.66:
 ENDP IipPUNPCKLQDQ::
</pre>

<dl id="IipPUNPCKHQDQ">
<dt><a href='#IipGroupSSE'>&uarr; PUNPCKHQDQ</a></dt>
<dd>Unpack High Data</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PUNPCKHBW:PUNPCKHWD:PUNPCKHDQ:PUNPCKHQDQ.html">PUNPCKHQDQ</a></dd>
<dt>Category</dt>
<dd>sse2,simdint,shunpck</dd>
<dt>Operands</dt>
<dd><b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x660F6D /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3855.htm">t3855</a>
</dd>
</dl><pre>
IipPUNPCKHQDQ:: PROC
    MOV EAX,iiMfgDATA_OWORD
    MOV CL,0x6D
    JMP IipGroupSSE.2.66:
 ENDP IipPUNPCKHQDQ::
</pre>

<dl id="IipHADDPD">
<dt><a href='#IipGroupSSE'>&uarr; HADDPD</a></dt>
<dd>Packed Double-FP Horizontal Add</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/HADDPD.html">HADDPD</a></dd>
<dt>Category</dt>
<dd>sse3,simdfp,arith</dd>
<dt>Operands</dt>
<dd><b>Vpd</b>,Wpd</dd>
<dt>Opcode</dt>
<dd>0x660F7C /r</dd>
<dt>CPU</dt>
<dd>P4++</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3860.htm">t3860</a>
</dd>
</dl><pre>
IipHADDPD:: PROC
    MOV EAX,iiMfgDATA_OWORD
    MOV CL,0x7C
    JMP IipGroupSSE.3.66:
 ENDP IipHADDPD::
</pre>

<dl id="IipHSUBPD">
<dt><a href='#IipGroupSSE'>&uarr; HSUBPD</a></dt>
<dd>Packed Double-FP Horizontal Subtract</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/HSUBPD.html">HSUBPD</a></dd>
<dt>Category</dt>
<dd>sse3,simdfp,arith</dd>
<dt>Operands</dt>
<dd><b>Vpd</b>,Wpd</dd>
<dt>Opcode</dt>
<dd>0x660F7D /r</dd>
<dt>CPU</dt>
<dd>P4++</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3860.htm">t3860</a>
</dd>
</dl><pre>
IipHSUBPD:: PROC
    MOV EAX,iiMfgDATA_OWORD
    MOV CL,0x7D
    JMP IipGroupSSE.3.66:
 ENDP IipHSUBPD::
</pre>

<dl id="IipADDSUBPD">
<dt><a href='#IipGroupSSE'>&uarr; ADDSUBPD</a></dt>
<dd>Packed Double-FP Add/Subtract</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/ADDSUBPD.html">ADDSUBPD</a></dd>
<dt>Category</dt>
<dd>sse3,simdfp,arith</dd>
<dt>Operands</dt>
<dd><b>Vpd</b>,Wpd</dd>
<dt>Opcode</dt>
<dd>0x660FD0 /r</dd>
<dt>CPU</dt>
<dd>P4++</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3860.htm">t3860</a>
</dd>
</dl><pre>
IipADDSUBPD:: PROC
    MOV EAX,iiMfgDATA_OWORD
    MOV CL,0xD0
    JMP IipGroupSSE.3.66:
 ENDP IipADDSUBPD::
</pre>

<dl id="IipCVTTPD2DQ">
<dt><a href='#IipGroupSSE'>&uarr; CVTTPD2DQ</a></dt>
<dd>Convert with Trunc. Packed Double-FP Values to DW Integers</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/CVTTPD2DQ.html">CVTTPD2DQ</a></dd>
<dt>Category</dt>
<dd>sse2,pcksclr,conver</dd>
<dt>Operands</dt>
<dd><b>Vdq</b>,Wpd</dd>
<dt>Opcode</dt>
<dd>0x660FE6 /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3845.htm">t3845</a>
</dd>
</dl><pre>
IipCVTTPD2DQ:: PROC
    MOV EAX,iiMfgDATA_OWORD
    MOV CL,0xE6
    JMP IipGroupSSE.2.66:
 ENDP IipCVTTPD2DQ::
</pre>

<dl id="IipMOVDDUP">
<dt><a href='#IipGroupSSE'>&uarr; MOVDDUP</a></dt>
<dd>Move One Double-FP and Duplicate</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/MOVDDUP.html">MOVDDUP</a></dd>
<dt>Category</dt>
<dd>sse3,simdfp,datamov</dd>
<dt>Operands</dt>
<dd><b>Vq</b>,Wq</dd>
<dt>Opcode</dt>
<dd>0xF20F12 /r</dd>
<dt>CPU</dt>
<dd>P4++</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3860.htm">t3860</a>
</dd>
</dl><pre>
IipMOVDDUP:: PROC
    MOV EAX,iiMfgDATA_QWORD+iiMfgDATA_OWORD
    MOV CL,0x12
    JMP IipGroupSSE.3.F2:
 ENDP IipMOVDDUP::
</pre>

<dl id="IipSQRTSD">
<dt><a href='#IipGroupSSE'>&uarr; SQRTSD</a></dt>
<dd>Compute Square Root of Scalar Double-FP Value</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/SQRTSD.html">SQRTSD</a></dd>
<dt>Category</dt>
<dd>sse2,pcksclr,arith</dd>
<dt>Operands</dt>
<dd><b>Vsd</b>,Wsd</dd>
<dt>Opcode</dt>
<dd>0xF20F51 /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3850.htm">t3850</a>
</dd>
</dl><pre>
IipSQRTSD:: PROC
    MOV EAX,iiMfgDATA_QWORD
    MOV CL,0x51
    JMP IipGroupSSE.2.F2:
 ENDP IipSQRTSD::
</pre>

<dl id="IipADDSD">
<dt><a href='#IipGroupSSE'>&uarr; ADDSD</a></dt>
<dd>Add Scalar Double-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/ADDSD.html">ADDSD</a></dd>
<dt>Category</dt>
<dd>sse2,pcksclr,arith</dd>
<dt>Operands</dt>
<dd><b>Vsd</b>,Wsd</dd>
<dt>Opcode</dt>
<dd>0xF20F58 /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3840.htm">t3840</a>
</dd>
</dl><pre>
IipADDSD:: PROC
    MOV EAX,iiMfgDATA_QWORD
    MOV CL,0x58
    JMP IipGroupSSE.2.F2:
 ENDP IipADDSD::
</pre>

<dl id="IipMULSD">
<dt><a href='#IipGroupSSE'>&uarr; MULSD</a></dt>
<dd>Multiply Scalar Double-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/MULSD.html">MULSD</a></dd>
<dt>Category</dt>
<dd>sse2,pcksclr,arith</dd>
<dt>Operands</dt>
<dd><b>Vsd</b>,Wsd</dd>
<dt>Opcode</dt>
<dd>0xF20F59 /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3850.htm">t3850</a>
</dd>
</dl><pre>
IipMULSD:: PROC
    MOV EAX,iiMfgDATA_QWORD
    MOV CL,0x59
    JMP IipGroupSSE.2.F2:
 ENDP IipMULSD::
</pre>

<dl id="IipCVTSD2SS">
<dt><a href='#IipGroupSSE'>&uarr; CVTSD2SS</a></dt>
<dd>Convert Scalar Double-FP Value to Scalar Single-FP Value</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/CVTSD2SS.html">CVTSD2SS</a></dd>
<dt>Category</dt>
<dd>sse2,pcksclr,conver</dd>
<dt>Operands</dt>
<dd><b>Vss</b>,Wsd</dd>
<dt>Opcode</dt>
<dd>0xF20F5A /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3845.htm">t3845</a>
</dd>
</dl><pre>
IipCVTSD2SS:: PROC
    MOV EAX,iiMfgDATA_QWORD+iiMfgDATA_DWORD
    MOV CL,0x5A
    JMP IipGroupSSE.2.F2:
 ENDP IipCVTSD2SS::
</pre>

<dl id="IipSUBSD">
<dt><a href='#IipGroupSSE'>&uarr; SUBSD</a></dt>
<dd>Subtract Scalar Double-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/SUBSD.html">SUBSD</a></dd>
<dt>Category</dt>
<dd>sse2,pcksclr,arith</dd>
<dt>Operands</dt>
<dd><b>Vsd</b>,Wsd</dd>
<dt>Opcode</dt>
<dd>0xF20F5C /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3855.htm">t3855</a>
</dd>
</dl><pre>
IipSUBSD:: PROC
    MOV EAX,iiMfgDATA_QWORD
    MOV CL,0x5C
    JMP IipGroupSSE.2.F2:
 ENDP IipSUBSD::
</pre>

<dl id="IipMINSD">
<dt><a href='#IipGroupSSE'>&uarr; MINSD</a></dt>
<dd>Return Minimum Scalar Double-FP Value</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/MINSD.html">MINSD</a></dd>
<dt>Category</dt>
<dd>sse2,pcksclr,arith</dd>
<dt>Operands</dt>
<dd><b>Vsd</b>,Wsd</dd>
<dt>Opcode</dt>
<dd>0xF20F5D /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3850.htm">t3850</a>
</dd>
</dl><pre>
IipMINSD:: PROC
    MOV EAX,iiMfgDATA_QWORD
    MOV CL,0x5D
    JMP IipGroupSSE.2.F2:
 ENDP IipMINSD::
</pre>

<dl id="IipDIVSD">
<dt><a href='#IipGroupSSE'>&uarr; DIVSD</a></dt>
<dd>Divide Scalar Double-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/DIVSD.html">DIVSD</a></dd>
<dt>Category</dt>
<dd>sse2,pcksclr,arith</dd>
<dt>Operands</dt>
<dd><b>Vsd</b>,Wsd</dd>
<dt>Opcode</dt>
<dd>0xF20F5E /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3840.htm">t3840</a>
</dd>
</dl><pre>
IipDIVSD:: PROC
    MOV EAX,iiMfgDATA_QWORD
    MOV CL,0x5E
    JMP IipGroupSSE.2.F2:
 ENDP IipDIVSD::
</pre>

<dl id="IipMAXSD">
<dt><a href='#IipGroupSSE'>&uarr; MAXSD</a></dt>
<dd>Return Maximum Scalar Double-FP Value</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/MAXSD.html">MAXSD</a></dd>
<dt>Category</dt>
<dd>sse2,pcksclr,arith</dd>
<dt>Operands</dt>
<dd><b>Vsd</b>,Wsd</dd>
<dt>Opcode</dt>
<dd>0xF20F5F /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3850.htm">t3850</a>
</dd>
</dl><pre>
IipMAXSD:: PROC
    MOV EAX,iiMfgDATA_QWORD
    MOV CL,0x5F
    JMP IipGroupSSE.2.F2:
 ENDP IipMAXSD::
</pre>

<dl id="IipHADDPS">
<dt><a href='#IipGroupSSE'>&uarr; HADDPS</a></dt>
<dd>Packed Single-FP Horizontal Add</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/HADDPS.html">HADDPS</a></dd>
<dt>Category</dt>
<dd>sse3,simdfp,arith</dd>
<dt>Operands</dt>
<dd><b>Vps</b>,Wps</dd>
<dt>Opcode</dt>
<dd>0xF20F7C /r</dd>
<dt>CPU</dt>
<dd>P4++</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3860.htm">t3860</a>
</dd>
</dl><pre>
IipHADDPS:: PROC
    MOV EAX,iiMfgDATA_QWORD+iiMfgDATA_OWORD
    MOV CL,0x7C
    JMP IipGroupSSE.3.F2:
 ENDP IipHADDPS::
</pre>

<dl id="IipHSUBPS">
<dt><a href='#IipGroupSSE'>&uarr; HSUBPS</a></dt>
<dd>Packed Single-FP Horizontal Subtract</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/HSUBPS.html">HSUBPS</a></dd>
<dt>Category</dt>
<dd>sse3,simdfp,arith</dd>
<dt>Operands</dt>
<dd><b>Vps</b>,Wps</dd>
<dt>Opcode</dt>
<dd>0xF20F7D /r</dd>
<dt>CPU</dt>
<dd>P4++</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3860.htm">t3860</a>
</dd>
</dl><pre>
IipHSUBPS:: PROC
    MOV EAX,iiMfgDATA_QWORD+iiMfgDATA_OWORD
    MOV CL,0x7D
    JMP IipGroupSSE.3.F2:
 ENDP IipHSUBPS::
</pre>

<dl id="IipADDSUBPS">
<dt><a href='#IipGroupSSE'>&uarr; ADDSUBPS</a></dt>
<dd>Packed Single-FP Add/Subtract</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/ADDSUBPS.html">ADDSUBPS</a></dd>
<dt>Category</dt>
<dd>sse3,simdfp,arith</dd>
<dt>Operands</dt>
<dd><b>Vps</b>,Wps</dd>
<dt>Opcode</dt>
<dd>0xF20FD0 /r</dd>
<dt>CPU</dt>
<dd>P4++</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3830.htm">t3830</a>
</dd>
</dl><pre>
IipADDSUBPS:: PROC
    MOV EAX,iiMfgDATA_QWORD
    MOV CL,0xD0
    JMP IipGroupSSE.3.F2:
 ENDP IipADDSUBPS::
</pre>

<dl id="IipCVTPD2DQ">
<dt><a href='#IipGroupSSE'>&uarr; CVTPD2DQ</a></dt>
<dd>Convert Packed Double-FP Values to DW Integers</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/CVTPD2DQ.html">CVTPD2DQ</a></dd>
<dt>Category</dt>
<dd>sse2,pcksclr,conver</dd>
<dt>Operands</dt>
<dd><b>Vdq</b>,Wpd</dd>
<dt>Opcode</dt>
<dd>0xF20FE6 /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3845.htm">t3845</a>
</dd>
</dl><pre>
IipCVTPD2DQ:: PROC
    MOV EAX,iiMfgDATA_QWORD
    MOV CL,0xE6
    JMP IipGroupSSE.2.F2:
 ENDP IipCVTPD2DQ::
</pre>

<dl id="IipMOVSLDUP">
<dt><a href='#IipGroupSSE'>&uarr; MOVSLDUP</a></dt>
<dd>Move Packed Single-FP Low and Duplicate</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/MOVSLDUP.html">MOVSLDUP</a></dd>
<dt>Category</dt>
<dd>sse3,simdfp,datamov</dd>
<dt>Operands</dt>
<dd><b>Vq</b>,Wq</dd>
<dt>Opcode</dt>
<dd>0xF30F12 /r</dd>
<dt>CPU</dt>
<dd>P4++</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3860.htm">t3860</a>
</dd>
</dl><pre>
IipMOVSLDUP:: PROC
    MOV EAX,iiMfgDATA_OWORD
    MOV CL,0x12
    JMP IipGroupSSE.3.F3:
 ENDP IipMOVSLDUP::
</pre>

<dl id="IipMOVSHDUP">
<dt><a href='#IipGroupSSE'>&uarr; MOVSHDUP</a></dt>
<dd>Move Packed Single-FP High and Duplicate</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/MOVSHDUP.html">MOVSHDUP</a></dd>
<dt>Category</dt>
<dd>sse3,simdfp,datamov</dd>
<dt>Operands</dt>
<dd><b>Vq</b>,Wq</dd>
<dt>Opcode</dt>
<dd>0xF30F16 /r</dd>
<dt>CPU</dt>
<dd>P4++</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3860.htm">t3860</a>
</dd>
</dl><pre>
IipMOVSHDUP:: PROC
    MOV EAX,iiMfgDATA_OWORD
    MOV CL,0x16
    JMP IipGroupSSE.3.F3:
 ENDP IipMOVSHDUP::
</pre>

<dl id="IipSQRTSS">
<dt><a href='#IipGroupSSE'>&uarr; SQRTSS</a></dt>
<dd>Compute Square Root of Scalar Single-FP Value</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/SQRTSS.html">SQRTSS</a></dd>
<dt>Category</dt>
<dd>sse1,simdfp,arith</dd>
<dt>Operands</dt>
<dd><b>Vss</b>,Wss</dd>
<dt>Opcode</dt>
<dd>0xF30F51 /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3830.htm">t3830</a>
</dd>
</dl><pre>
IipSQRTSS:: PROC
    MOV EAX,iiMfgDATA_DWORD
    MOV CL,0x51
    JMP IipGroupSSE.1.F3:
 ENDP IipSQRTSS::
</pre>

<dl id="IipRSQRTSS">
<dt><a href='#IipGroupSSE'>&uarr; RSQRTSS</a></dt>
<dd>Compute Recipr. of Square Root of Scalar Single-FP Value</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/RSQRTSS.html">RSQRTSS</a></dd>
<dt>Category</dt>
<dd>sse1,simdfp,arith</dd>
<dt>Operands</dt>
<dd><b>Vss</b>,Wss</dd>
<dt>Opcode</dt>
<dd>0xF30F52 /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3835.htm">t3835</a>
</dd>
</dl><pre>
IipRSQRTSS:: PROC
    MOV EAX,iiMfgDATA_DWORD
    MOV CL,0x52
    JMP IipGroupSSE.1.F3:
 ENDP IipRSQRTSS::
</pre>

<dl id="IipRCPSS">
<dt><a href='#IipGroupSSE'>&uarr; RCPSS</a></dt>
<dd>Compute Reciprocal of Scalar Single-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/RCPSS.html">RCPSS</a></dd>
<dt>Category</dt>
<dd>sse1,simdfp,arith</dd>
<dt>Operands</dt>
<dd><b>Vss</b>,Wss</dd>
<dt>Opcode</dt>
<dd>0xF30F53 /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3835.htm">t3835</a>
</dd>
</dl><pre>
IipRCPSS:: PROC
    MOV EAX,iiMfgDATA_DWORD
    MOV CL,0x53
    JMP IipGroupSSE.1.F3:
 ENDP IipRCPSS::
</pre>

<dl id="IipADDSS">
<dt><a href='#IipGroupSSE'>&uarr; ADDSS</a></dt>
<dd>Add Scalar Single-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/ADDSS.html">ADDSS</a></dd>
<dt>Category</dt>
<dd>sse1,simdfp,arith</dd>
<dt>Operands</dt>
<dd><b>Vss</b>,Wss</dd>
<dt>Opcode</dt>
<dd>0xF30F58 /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3830.htm">t3830</a>
</dd>
</dl><pre>
IipADDSS:: PROC
    MOV EAX,iiMfgDATA_DWORD
    MOV CL,0x58
    JMP IipGroupSSE.1.F3:
 ENDP IipADDSS::
</pre>

<dl id="IipMULSS">
<dt><a href='#IipGroupSSE'>&uarr; MULSS</a></dt>
<dd>Multiply Scalar Single-FP Value</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/MULSS.html">MULSS</a></dd>
<dt>Category</dt>
<dd>sse1,simdfp,arith</dd>
<dt>Operands</dt>
<dd><b>Vss</b>,Wss</dd>
<dt>Opcode</dt>
<dd>0xF30F59 /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3835.htm">t3835</a>
</dd>
</dl><pre>
IipMULSS:: PROC
    MOV EAX,iiMfgDATA_DWORD
    MOV CL,0x59
    JMP IipGroupSSE.1.F3:
 ENDP IipMULSS::
</pre>

<dl id="IipCVTSS2SD">
<dt><a href='#IipGroupSSE'>&uarr; CVTSS2SD</a></dt>
<dd>Convert Scalar Single-FP Value to Scalar Double-FP Value</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/CVTSS2SD.html">CVTSS2SD</a></dd>
<dt>Category</dt>
<dd>sse2,pcksclr,conver</dd>
<dt>Operands</dt>
<dd><b>Vsd</b>,Wss</dd>
<dt>Opcode</dt>
<dd>0xF30F5A /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3845.htm">t3845</a>
</dd>
</dl><pre>
IipCVTSS2SD:: PROC
    MOV EAX,iiMfgDATA_DWORD+iiMfgDATA_QWORD
    MOV CL,0x5A
    JMP IipGroupSSE.2.F3:
 ENDP IipCVTSS2SD::
</pre>

<dl id="IipCVTTPS2DQ">
<dt><a href='#IipGroupSSE'>&uarr; CVTTPS2DQ</a></dt>
<dd>Convert with Trunc. Packed Single-FP Values to DW Integers</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/CVTTPS2DQ.html">CVTTPS2DQ</a></dd>
<dt>Category</dt>
<dd>sse2,pcksp</dd>
<dt>Operands</dt>
<dd><b>Vdq</b>,Wps</dd>
<dt>Opcode</dt>
<dd>0xF30F5B /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3845.htm">t3845</a>
</dd>
</dl><pre>
IipCVTTPS2DQ:: PROC
    MOV EAX,iiMfgDATA_OWORD
    MOV CL,0x5B
    JMP IipGroupSSE.2.F3:
 ENDP IipCVTTPS2DQ::
</pre>

<dl id="IipSUBSS">
<dt><a href='#IipGroupSSE'>&uarr; SUBSS</a></dt>
<dd>Subtract Scalar Single-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/SUBSS.html">SUBSS</a></dd>
<dt>Category</dt>
<dd>sse1,simdfp,arith</dd>
<dt>Operands</dt>
<dd><b>Vss</b>,Wss</dd>
<dt>Opcode</dt>
<dd>0xF30F5C /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3830.htm">t3830</a>
</dd>
</dl><pre>
IipSUBSS:: PROC
    MOV EAX,iiMfgDATA_DWORD
    MOV CL,0x5C
    JMP IipGroupSSE.1.F3:
 ENDP IipSUBSS::
</pre>

<dl id="IipMINSS">
<dt><a href='#IipGroupSSE'>&uarr; MINSS</a></dt>
<dd>Return Minimum Scalar Single-FP Value</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/MINSS.html">MINSS</a></dd>
<dt>Category</dt>
<dd>sse1,simdfp,arith</dd>
<dt>Operands</dt>
<dd><b>Vss</b>,Wss</dd>
<dt>Opcode</dt>
<dd>0xF30F5D /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3835.htm">t3835</a>
</dd>
</dl><pre>
IipMINSS:: PROC
    MOV EAX,iiMfgDATA_DWORD
    MOV CL,0x5D
    JMP IipGroupSSE.1.F3:
 ENDP IipMINSS::
</pre>

<dl id="IipDIVSS">
<dt><a href='#IipGroupSSE'>&uarr; DIVSS</a></dt>
<dd>Divide Scalar Single-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/DIVSS.html">DIVSS</a></dd>
<dt>Category</dt>
<dd>sse1,simdfp,arith</dd>
<dt>Operands</dt>
<dd><b>Vss</b>,Wss</dd>
<dt>Opcode</dt>
<dd>0xF30F5E /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3830.htm">t3830</a>
</dd>
</dl><pre>
IipDIVSS:: PROC
    MOV EAX,iiMfgDATA_DWORD
    MOV CL,0x5E
    JMP IipGroupSSE.1.F3:
 ENDP IipDIVSS::
</pre>

<dl id="IipMAXSS">
<dt><a href='#IipGroupSSE'>&uarr; MAXSS</a></dt>
<dd>Return Maximum Scalar Single-FP Value</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/MAXSS.html">MAXSS</a></dd>
<dt>Category</dt>
<dd>sse1,simdfp,arith</dd>
<dt>Operands</dt>
<dd><b>Vss</b>,Wss</dd>
<dt>Opcode</dt>
<dd>0xF30F5F /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3835.htm">t3835</a>
</dd>
</dl><pre>
IipMAXSS:: PROC
    MOV EAX,iiMfgDATA_DWORD
    MOV CL,0x5F
    JMP IipGroupSSE.1.F3:
 ENDP IipMAXSS::
</pre>

<dl id="IipCVTDQ2PD">
<dt><a href='#IipGroupSSE'>&uarr; CVTDQ2PD</a></dt>
<dd>Convert Packed DW Integers to Double-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/CVTDQ2PD.html">CVTDQ2PD</a></dd>
<dt>Category</dt>
<dd>sse2,pcksclr,conver</dd>
<dt>Operands</dt>
<dd><b>Vpd</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0xF30FE6 /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3845.htm">t3845</a>
</dd>
</dl><pre>
IipCVTDQ2PD:: PROC
    MOV EAX,iiMfgDATA_QWORD+iiMfgDATA_OWORD
    MOV CL,0xE6
    JMP IipGroupSSE.2.F3:
 ENDP IipCVTDQ2PD::
</pre>

<dl id="IipGroupSSE4">
<dt><a href="#IipHandlers">&uarr; <em>IipGroupSSE4</em></a></dt>
<dd>IipGroupSSE4 is a common handler for SSE4 instructions in format <b>xmm,xmm/mem,imm8
</b> encoded with prefix and three-byte opcode <b>0x66,0x0F,0x3A,CL</b>.</dd>
<dt>Input</dt>
<dd><b>CL</b> is the tertiary opcode.
<br/><b>EDX</b> has operand types as set by <a class='EXT' href='ii.htm#IiAssemble'>IiAssemble</a>.
<br/><b>EDI</b> is pointer to <a class='EXT' href='ii.htm#II'>II</a> structure with parsed operands.</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3815.htm">t3815</a>
<a class="EXT" href="../eatests/t3820.htm">t3820</a>
</dd>
</dl><pre>
IipGroupSSE4:: PROC
     IiRequire 686,SSE4.1
     IiEncoding DATA=OWORD
     IiEmitPrefix OTOGGLE
     IiEmitOpcode 0x0F,0x3A,ECX
     IiOpEn RM
     IiModRM /r
     IiEmitImm Operand3, BYTE
     IiDispatchFormat xmm.xmm.imm, xmm.mem.imm
.xmm.xmm.imm:
.xmm.mem.imm:
     RET
 ENDP IipGroupSSE4::
</pre>

<dl id="IipROUNDPS">
<dt><a href='#IipGroupSSE4'>&uarr; ROUNDPS</a></dt>
<dd>Round Packed Single-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/ROUNDPS.html">ROUNDPS</a></dd>
<dt>Category</dt>
<dd>sse41,simdfp,conver</dd>
<dt>Operands</dt>
<dd><b>Vps</b>,Wps,Ib</dd>
<dt>Opcode</dt>
<dd>0x660F3A08 /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3815.htm">t3815</a>
</dd>
</dl><pre>
IipROUNDPS:: PROC
    MOV CL,0x08
    JMP IipGroupSSE4:
 ENDP IipROUNDPS::
</pre>

<dl id="IipROUNDPD">
<dt><a href='#IipGroupSSE4'>&uarr; ROUNDPD</a></dt>
<dd>Round Packed Double-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/ROUNDPD.html">ROUNDPD</a></dd>
<dt>Category</dt>
<dd>sse41,simdfp,conver</dd>
<dt>Operands</dt>
<dd><b>Vps</b>,Wpd,Ib</dd>
<dt>Opcode</dt>
<dd>0x660F3A09 /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3815.htm">t3815</a>
</dd>
</dl><pre>
IipROUNDPD:: PROC
    MOV CL,0x09
    JMP IipGroupSSE4:
 ENDP IipROUNDPD::
</pre>

<dl id="IipROUNDSS">
<dt><a href='#IipGroupSSE4'>&uarr; ROUNDSS</a></dt>
<dd>Round Scalar Single-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/ROUNDSS.html">ROUNDSS</a></dd>
<dt>Category</dt>
<dd>sse41,simdfp,conver</dd>
<dt>Operands</dt>
<dd><b>Vss</b>,Wss,Ib</dd>
<dt>Opcode</dt>
<dd>0x660F3A0A /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3815.htm">t3815</a>
</dd>
</dl><pre>
IipROUNDSS:: PROC
    MOV CL,0x0A
    JMP IipGroupSSE4:
 ENDP IipROUNDSS::
</pre>

<dl id="IipROUNDSD">
<dt><a href='#IipGroupSSE4'>&uarr; ROUNDSD</a></dt>
<dd>Round Scalar Double-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/ROUNDSD.html">ROUNDSD</a></dd>
<dt>Category</dt>
<dd>sse41,simdfp,conver</dd>
<dt>Operands</dt>
<dd><b>Vsd</b>,Wsd,Ib</dd>
<dt>Opcode</dt>
<dd>0x660F3A0B /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3815.htm">t3815</a>
</dd>
</dl><pre>
IipROUNDSD:: PROC
    MOV CL,0x0B
    JMP IipGroupSSE4:
 ENDP IipROUNDSD::
</pre>

<dl id="IipBLENDPS">
<dt><a href='#IipGroupSSE4'>&uarr; BLENDPS</a></dt>
<dd>Blend Packed Single-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/BLENDPS.html">BLENDPS</a></dd>
<dt>Category</dt>
<dd>sse41,simdfp,datamov</dd>
<dt>Operands</dt>
<dd><b>Vps</b>,Wps,Ib</dd>
<dt>Opcode</dt>
<dd>0x660F3A0C /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3815.htm">t3815</a>
</dd>
</dl><pre>
IipBLENDPS:: PROC
    MOV CL,0x0C
    JMP IipGroupSSE4:
 ENDP IipBLENDPS::
</pre>

<dl id="IipBLENDPD">
<dt><a href='#IipGroupSSE4'>&uarr; BLENDPD</a></dt>
<dd>Blend Packed Double-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/BLENDPD.html">BLENDPD</a></dd>
<dt>Category</dt>
<dd>sse41,simdfp,datamov</dd>
<dt>Operands</dt>
<dd><b>Vpd</b>,Wpd,Ib</dd>
<dt>Opcode</dt>
<dd>0x660F3A0D /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3815.htm">t3815</a>
</dd>
</dl><pre>
IipBLENDPD:: PROC
    MOV CL,0x0D
    JMP IipGroupSSE4:
 ENDP IipBLENDPD::
</pre>

<dl id="IipPBLENDW">
<dt><a href='#IipGroupSSE4'>&uarr; PBLENDW</a></dt>
<dd>Blend Packed Words</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PBLENDW.html">PBLENDW</a></dd>
<dt>Category</dt>
<dd>sse41,simdint,datamov</dd>
<dt>Operands</dt>
<dd><b>Vdq</b>,Wdq,Ib</dd>
<dt>Opcode</dt>
<dd>0x660F3A0E /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3815.htm">t3815</a>
</dd>
</dl><pre>
IipPBLENDW:: PROC
    MOV CL,0x0E
    JMP IipGroupSSE4:
 ENDP IipPBLENDW::
</pre>

<dl id="IipINSERTPS">
<dt><a href='#IipGroupSSE4'>&uarr; INSERTPS</a></dt>
<dd>Insert Packed Single-FP Value</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/INSERTPS.html">INSERTPS</a></dd>
<dt>Category</dt>
<dd>sse41,simdfp,datamov</dd>
<dt>Operands</dt>
<dd><b>Vps</b>,Ups,Ib | <b>Vps</b>,Md,Ib</dd>
<dt>Opcode</dt>
<dd>0x660F3A21 /r | 0x660F3A21 /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3815.htm">t3815</a>
</dd>
</dl><pre>
IipINSERTPS:: PROC
    MOV CL,0x21
    JMP IipGroupSSE4:
 ENDP IipINSERTPS::
</pre>

<dl id="IipDPPS">
<dt><a href='#IipGroupSSE4'>&uarr; DPPS</a></dt>
<dd>Dot Product of Packed Single-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/DPPS.html">DPPS</a></dd>
<dt>Category</dt>
<dd>sse41,simdfp,arith</dd>
<dt>Operands</dt>
<dd><b>Vps</b>,Wps</dd>
<dt>Opcode</dt>
<dd>0x660F3A40 /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3820.htm">t3820</a>
</dd>
</dl><pre>
IipDPPS:: PROC
    MOV CL,0x40
    JMP IipGroupSSE4:
 ENDP IipDPPS::
</pre>

<dl id="IipDPPD">
<dt><a href='#IipGroupSSE4'>&uarr; DPPD</a></dt>
<dd>Dot Product of Packed Double-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/DPPD.html">DPPD</a></dd>
<dt>Category</dt>
<dd>sse41,simdfp,arith</dd>
<dt>Operands</dt>
<dd><b>Vpd</b>,Wpd</dd>
<dt>Opcode</dt>
<dd>0x660F3A41 /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3820.htm">t3820</a>
</dd>
</dl><pre>
IipDPPD:: PROC
    MOV CL,0x41
    JMP IipGroupSSE4:
 ENDP IipDPPD::
</pre>

<dl id="IipMPSADBW">
<dt><a href='#IipGroupSSE4'>&uarr; MPSADBW</a></dt>
<dd>Compute Multiple Packed Sums of Absolute Difference</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/MPSADBW.html">MPSADBW</a></dd>
<dt>Category</dt>
<dd>sse41,simdint,arith</dd>
<dt>Operands</dt>
<dd><b>Vdq</b>,Wdq,Ib</dd>
<dt>Opcode</dt>
<dd>0x660F3A42 /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3820.htm">t3820</a>
</dd>
</dl><pre>
IipMPSADBW:: PROC
    MOV CL,0x42
    JMP IipGroupSSE4:
 ENDP IipMPSADBW::
</pre>

<dl id="IipPCMPESTRM">
<dt><a href='#IipGroupSSE4'>&uarr; PCMPESTRM</a></dt>
<dd>Packed Compare Explicit Length Strings, Return Mask
<br/>Modifier DATA=D | DATA=Q specifies if the implicit length registers are EAX,EDX | RAX,RDX.</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PCMPESTRM.html">PCMPESTRM</a></dd>
<dt>Category</dt>
<dd>sse42,strtxt</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: 0, group: xmm, type: -, address: -">XMM0</span></i></b>,Vdq,Wdq,<span title="dst: XMM0 src: Vdq src: Wdq src: Ib src: rAX src: rDX ">...</span></dd>
<dt>Opcode</dt>
<dd>0x660F3A60 /r</dd>
<dt>Flags</dt>
<dd>modified:<b>O..SZAPC</b>, defined:<b>O..SZAPC</b>, values:<b>.....AP.</b></dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3820.htm">t3820</a>
</dd>
</dl><pre>
IipPCMPESTRM:: PROC
     MOV CL,0x60
.op: IiRequire SSE4.2
     IiAllowModifier DATA
     JSt [EDI+II.MfgExplicit],iiMfgDATA_QWORD,.r64:
     IiEncoding DATA=DWORD
     JMP IipGroupSSE4:
.r64:IiAbortIfNot64
     IiEmitPrefix REX.W
     IiEncoding DATA=QWORD
     JMP IipGroupSSE4:
 ENDP IipPCMPESTRM::
</pre>

<dl id="IipPCMPESTRI">
<dt><a href='#IipGroupSSE4'>&uarr; PCMPESTRI</a></dt>
<dd>Packed Compare Explicit Length Strings, Return Index
<br/>Modifier DATA=D | DATA=Q specifies if the implicit length registers are EAX,EDX | RAX,RDX.</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PCMPESTRI.html">PCMPESTRI</a></dd>
<dt>Category</dt>
<dd>sse42,strtxt</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: 1, group: gen, type: dqp, address: -">rCX</span></i></b>,Vdq,Wdq,<span title="dst: rCX src: Vdq src: Wdq src: Ib src: rAX src: rDX ">...</span></dd>
<dt>Opcode</dt>
<dd>0x660F3A61 /r</dd>
<dt>Flags</dt>
<dd>modified:<b>O..SZAPC</b>, defined:<b>O..SZAPC</b>, values:<b>.....AP.</b></dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3820.htm">t3820</a>
</dd>
</dl><pre>
IipPCMPESTRI:: PROC
    MOV CL,0x61
    JMP IipPCMPESTRM.op:
 ENDP IipPCMPESTRI::
</pre>

<dl id="IipPCMPISTRM">
<dt><a href='#IipGroupSSE4'>&uarr; PCMPISTRM</a></dt>
<dd>Packed Compare Implicit Length Strings, Return Mask</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PCMPISTRM.html">PCMPISTRM</a></dd>
<dt>Category</dt>
<dd>sse42,strtxt</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: 0, group: xmm, type: -, address: -">XMM0</span></i></b>,Vdq,Wdq,Ib</dd>
<dt>Opcode</dt>
<dd>0x660F3A62 /r</dd>
<dt>Flags</dt>
<dd>modified:<b>O..SZAPC</b>, defined:<b>O..SZAPC</b>, values:<b>.....AP.</b></dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3820.htm">t3820</a>
</dd>
</dl><pre>
IipPCMPISTRM:: PROC
    MOV CL,0x62
.op:IiRequire SSE4.2
    JMP IipGroupSSE4:
 ENDP IipPCMPISTRM::
</pre>

<dl id="IipPCMPISTRI">
<dt><a href='#IipPCMPISTRM'>&uarr; PCMPISTRI</a></dt>
<dd>Packed Compare Implicit Length Strings, Return Index</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PCMPISTRI.html">PCMPISTRI</a></dd>
<dt>Category</dt>
<dd>sse42,strtxt</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: 1, group: gen, type: dqp, address: -">rCX</span></i></b>,Vdq,Wdq,Ib</dd>
<dt>Opcode</dt>
<dd>0x660F3A63 /r</dd>
<dt>Flags</dt>
<dd>modified:<b>O..SZAPC</b>, defined:<b>O..SZAPC</b>, values:<b>.....AP.</b></dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3820.htm">t3820</a>
</dd>
</dl><pre>
IipPCMPISTRI:: PROC
    MOV CL,0x63
    JMP IipPCMPISTRM.op:
 ENDP IipPCMPISTRI::
</pre>

<dl id="IipSHUFPS">
<dt><a href='#IipHandlers'>&uarr; SHUFPS</a></dt>
<dd>Shuffle Packed Single-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/SHUFPS.html">SHUFPS</a></dd>
<dt>Category</dt>
<dd>sse1,simdfp,shunpck</dd>
<dt>Operands</dt>
<dd><b>Vps</b>,Wps,Ib</dd>
<dt>Opcode</dt>
<dd>0x0FC6 /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3755.htm">t3755</a>
</dd>
</dl><pre>
IipSHUFPS:: PROC
    MOV CL,0xC6
.op:IiRequire 686,SSE2
    IiEncoding DATA=OWORD
    IiEmitOpcode 0x0F,ECX
    IiOpEn RM
    IiModRM /r
; fix to 20240831    IiEmitImm Operand3, BYTE, Max=7
    IiEmitImm Operand3, BYTE, Max=255
    IiDispatchFormat xmm.xmm.imm, xmm.mem.imm
.xmm.xmm.imm:
.xmm.mem.imm:
    RET
 ENDP IipSHUFPS::
</pre>

<dl id="IipPSHUFD">
<dt><a href='#IipSHUFPS'>&uarr; PSHUFD</a></dt>
<dd>Shuffle Packed Doublewords</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PSHUFD.html">PSHUFD</a></dd>
<dt>Category</dt>
<dd>sse2,simdint,shunpck</dd>
<dt>Operands</dt>
<dd><b>Vdq</b>,Wdq,Ib</dd>
<dt>Opcode</dt>
<dd>0x660F70 /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3755.htm">t3755</a>
</dd>
</dl><pre>
IipPSHUFD:: PROC
    IiEmitPrefix OTOGGLE
    MOV CL,0x70
    JMP IipSHUFPS.op:
 ENDP IipPSHUFD::
</pre>

<dl id="IipSHUFPD">
<dt><a href='#IipSHUFPS'>&uarr; SHUFPD</a></dt>
<dd>Shuffle Packed Double-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/SHUFPD.html">SHUFPD</a></dd>
<dt>Category</dt>
<dd>sse2,pcksclr,shunpck</dd>
<dt>Operands</dt>
<dd><b>Vpd</b>,Wpd,Ib</dd>
<dt>Opcode</dt>
<dd>0x660FC6 /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3755.htm">t3755</a>
</dd>
</dl><pre>
IipSHUFPD:: PROC
    IiEmitPrefix OTOGGLE
    MOV CL,0xC6
    JMP IipSHUFPS.op:
 ENDP IipSHUFPD::
</pre>

<dl id="IipPSHUFLW">
<dt><a href='#IipSHUFPS'>&uarr; PSHUFLW</a></dt>
<dd>Shuffle Packed Low Words</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PSHUFLW.html">PSHUFLW</a></dd>
<dt>Category</dt>
<dd>sse2,simdint,shunpck</dd>
<dt>Operands</dt>
<dd><b>Vdq</b>,Wdq,Ib</dd>
<dt>Opcode</dt>
<dd>0xF20F70 /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3755.htm">t3755</a>
</dd>
</dl><pre>
IipPSHUFLW:: PROC
    IiEmitPrefix REPNE
    MOV CL,0x70
    JMP IipSHUFPS.op:
 ENDP IipPSHUFLW::
</pre>

<dl id="IipPSHUFHW">
<dt><a href='#IipSHUFPS'>&uarr; PSHUFHW</a></dt>
<dd>Shuffle Packed High Words</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PSHUFHW.html">PSHUFHW</a></dd>
<dt>Category</dt>
<dd>sse2,simdint,shunpck</dd>
<dt>Operands</dt>
<dd><b>Vdq</b>,Wdq,Ib</dd>
<dt>Opcode</dt>
<dd>0xF30F70 /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3755.htm">t3755</a>
</dd>
</dl><pre>
IipPSHUFHW:: PROC
    IiEmitPrefix REPE
    MOV CL,0x70
    JMP IipSHUFPS.op:
 ENDP IipPSHUFHW::
</pre>

<dl id="IipMOVDQA">
<dt><a href='#IipHandlers'>&uarr; MOVDQA</a></dt>
<dd>Move Aligned Double Quadword</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/MOVDQA:VMOVDQA32:VMOVDQA64.html">MOVDQA</a></dd>
<dt>Category</dt>
<dd>sse2,simdint,datamov</dd>
<dt>Operands</dt>
<dd><b>Vdq</b>,Wdq | <b>Wdq</b>,Vdq</dd>
<dt>Opcode</dt>
<dd>0x660F6F /r | 0x660F7F /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3785.htm">t3785</a>
</dd>
</dl><pre>
IipMOVDQA:: PROC
    IiEmitPrefix OTOGGLE
.pf:IiRequire 686,SSE2
    IiAllowModifier CODE
    IiEmitOpcode 0x0F
    IiModRM /r
    IiDispatchFormat xmm.mem, mem.xmm, xmm.xmm
.mem.xmm:
    IiEmitOpcode 0x7F
    IiEncoding CODE=LONG,DATA=OWORD
    IiOpEn MR
    RET
.xmm.xmm:
    IiDispatchCode LONG=.mem.xmm:
.xmm.mem:
    IiEmitOpcode 0x6F
    IiEncoding CODE=SHORT,DATA=OWORD
    IiOpEn RM
    RET
 ENDP IipMOVDQA::
</pre>

<dl id="IipMOVDQU">
<dt><a href='#IipMOVDQA'>&uarr; MOVDQU</a></dt>
<dd>Move Unaligned Double Quadword</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/MOVDQU:VMOVDQU8:VMOVDQU16:VMOVDQU32:VMOVDQU64.html">MOVDQU</a></dd>
<dt>Category</dt>
<dd>sse2,simdint,datamov</dd>
<dt>Operands</dt>
<dd><b>Vdq</b>,Wdq | <b>Wdq</b>,Vdq</dd>
<dt>Opcode</dt>
<dd>0xF30F6F /r | 0xF30F7F /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3785.htm">t3785</a>
</dd>
</dl><pre>
IipMOVDQU:: PROC
    IiEmitPrefix REPE
    JMP IipMOVDQA.pf:
 ENDP IipMOVDQU::
</pre>

<dl id="IipMASKMOVDQU">
<dt><a href='#IipHandlers'>&uarr; MASKMOVDQU</a></dt>
<dd>Store Selected Bytes of Double Quadword</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/MASKMOVDQU.html">MASKMOVDQU</a></dd>
<dt>Category</dt>
<dd>sse2,cachect</dd>
<dt>Operands</dt>
<dd><b>mmx,mmx</b> or <b>[ES:rDI],xmm,xmm</b></dd>
<dt>Opcode</dt>
<dd>0x660FF7 /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3780.htm">t3780</a>
</dd>
</dl><pre>
IipMASKMOVDQU:: PROC
    IiRequire 686,SSE2
    IiEncoding DATA=OWORD
    IiEmitPrefix OTOGGLE
    IiEmitOpcode 0x0F,0xF7
    IiDispatchFormat xmm.xmm, mem.xmm.xmm
.mem.xmm.xmm:
    IiStringDestination Operand1, AllowSeg=YES
    IiSwap Operand1,Operand2 ; Get rid of Operand1.
    IiSwap Operand2,Operand3
.xmm.xmm:
    IiOpEn RM
    IiModRM /r
    RET
 ENDP IipMASKMOVDQU::
</pre>

<dl id="IipLDDQU">
<dt><a href='#IipHandlers'>&uarr; LDDQU</a></dt>
<dd>Load Unaligned Integer 128 Bits</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/LDDQU.html">LDDQU</a></dd>
<dt>Category</dt>
<dd>sse3,cachect</dd>
<dt>Operands</dt>
<dd><b>Vdq</b>,Mdq</dd>
<dt>Opcode</dt>
<dd>0xF20FF0 /r</dd>
<dt>CPU</dt>
<dd>P4++</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3790.htm">t3790</a>
</dd>
</dl><pre>
IipLDDQU:: PROC
    IiRequire 686,SSE3
    IiEncoding DATA=OWORD
    IiEmitPrefix REPNE
    IiEmitOpcode 0x0F,0xF0
    IiOpEn RM
    IiModRM /r
    IiDispatchFormat xmm.mem
.xmm.mem:
    RET
 ENDP IipLDDQU::
</pre>

<dl id="IipGroupCLMUL">
<dt><a href="#IipHandlers">&uarr; <em>IipGroupCLMUL</em></a></dt>
<dd>IipGroupCLMUL is a common handler for carry-less instructions in format <b>xmm,xmm/m128,imm8
</b> encoded with prefix 0x66 and three-byte opcode <b>0x0F, 0x3A, 0x44</b>.</dd>
<dt>Input</dt>
<dd><b>CL</b> is immediate value which selects quadwords to operate on.
<br/><b>EDX</b> has operand types as set by <a class='EXT' href='ii.htm#IiAssemble'>IiAssemble
</a> with eliminated 3rd immediate operand.
<br/><b>EDI</b> is pointer to <a class='EXT' href='ii.htm#II'>II</a> structure with parsed operands.</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3875.htm">t3875</a>
</dd>
</dl><pre>
IipGroupCLMUL:: PROC
    IiRequire 686,SSE4
    IiEncoding DATA=QWORD
    IiEncoding DATA=OWORD,IMM=BYTE
    MOV [EDI+II.ImmLow],CL
    IiEmitPrefix OTOGGLE
    IiEmitOpcode 0x0F,0x3A,0x44
    IiOpEn RM
    IiModRM /r
    IiDispatchFormat xmm.xmm, xmm.mem
.xmm.xmm:
.xmm.mem:
    RET
 ENDP IipGroupCLMUL::
</pre>

<dl id="IipPCLMULQDQ">
<dt><a href='#IipGroupCLMUL'>&uarr; PCLMULQDQ</a></dt>
<dd>Carry-Less Multiplication Qword</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PCLMULQDQ.html">PCLMULQDQ</a></dd>
<dt>Category</dt>
<dd>SSE, CLMUL</dd>
<dt>Operands</dt>
<dd>xmm, xmm/m128, imm8</dd>
<dt>Opcode</dt>
<dd>0x660F3A44 /r ib</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3875.htm">t3875</a>
</dd>
</dl><pre>
IipPCLMULQDQ:: PROC
     IiDispatchFormat xmm.xmm.imm, xmm.mem.imm
.xmm.xmm.imm:
.xmm.mem.imm:
     SHR EDX,8 ; Eliminate imm operand.
     MOV ECX,[EDI+II.Operand3+EXP.Low]
     JMP IipGroupCLMUL:
 ENDP IipPCLMULQDQ::
</pre>

<dl id="IipPCLMULLQLQDQ">
<dt><a href='#IipGroupCLMUL'>&uarr; PCLMULLQLQDQ</a></dt>
<dd>Carry-Less Multiplication Qword imm=0x00</dd>
<dt>Category</dt>
<dd>SSE, CLMUL</dd>
<dt>Operands</dt>
<dd>xxm, xxm/m128</dd>
<dt>Opcode</dt>
<dd>0x660F3A44/r00</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3875.htm">t3875</a>
</dd>
</dl><pre>
IipPCLMULLQLQDQ:: PROC
    MOV CL,0x00
    JMP IipGroupCLMUL:
 ENDP IipPCLMULLQLQDQ::
</pre>

<dl id="IipPCLMULHQLQDQ">
<dt><a href='#IipGroupCLMUL'>&uarr; PCLMULHQLQDQ</a></dt>
<dd>Carry-Less Multiplication Qword imm=0x01</dd>
<dt>Category</dt>
<dd>SSE, CLMUL</dd>
<dt>Operands</dt>
<dd>xxm, xxm/m128</dd>
<dt>Opcode</dt>
<dd>0x660F3A44/r01</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3875.htm">t3875</a>
</dd>
</dl><pre>
IipPCLMULHQLQDQ:: PROC
    MOV CL,0x01
    JMP IipGroupCLMUL:
 ENDP IipPCLMULHQLQDQ::
</pre>

<dl id="IipPCLMULLQHQDQ">
<dt><a href='#IipGroupCLMUL'>&uarr; PCLMULLQHQDQ</a></dt>
<dd>Carry-Less Multiplication Qword imm=0x10</dd>
<dt>Category</dt>
<dd>SSE, CLMUL</dd>
<dt>Operands</dt>
<dd>xxm, xxm/m128</dd>
<dt>Opcode</dt>
<dd>0x660F3A44/r10</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3875.htm">t3875</a>
</dd>
</dl><pre>
IipPCLMULLQHQDQ:: PROC
    MOV CL,0x10
    JMP IipGroupCLMUL:
 ENDP IipPCLMULLQHQDQ::
</pre>

<dl id="IipPCLMULHQHQDQ">
<dt><a href='#IipGroupCLMUL'>&uarr; PCLMULHQHQDQ</a></dt>
<dd>Carry-Less Multiplication Qword imm=0x11</dd>
<dt>Category</dt>
<dd>SSE, CLMUL</dd>
<dt>Operands</dt>
<dd>xxm, xxm/m128</dd>
<dt>Opcode</dt>
<dd>0x660F3A44/r11</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3875.htm">t3875</a>
</dd>
</dl><pre>
IipPCLMULHQHQDQ:: PROC
    MOV CL,0x11
    JMP IipGroupCLMUL:
 ENDP IipPCLMULHQHQDQ::
</pre>

<dl id="IipGroupBLEND">
<dt><a href="#IipHandlers">&uarr; <em>IipGroupBLEND</em></a></dt>
<dd>IipGroupBLEND is a common handler for SSE4.1 blending instructions in format <b>xmm,xmm/m128,XMM0
</b> encoded with prefix 0x66 and three-byte opcode <b>0x0F, 0x38, CL</b>.
<br/>The third operand (XMM0) may be omitted.</dd>
<dt>Input</dt>
<dd><b>CL</b> is tertiary opcode.
<br/><b>EDX</b> has operand types as set by <a class='EXT' href='ii.htm#IiAssemble'>IiAssemble
</a> with eliminated 3rd immediate operand.
<br/><b>EDI</b> is pointer to <a class='EXT' href='ii.htm#II'>II</a> structure with parsed operands.</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3825.htm">t3825</a>
</dd>
</dl><pre>
IipGroupBLEND:: PROC
    IiRequire 686,SSE4.1
    IiEncoding DATA=QWORD
    IiEmitPrefix OTOGGLE
    IiEmitOpcode 0x0F,0x38,ECX
    IiOpEn RM
    IiModRM /r
    IiDispatchFormat xmm.xmm, xmm.mem, xmm.xmm.xmm, xmm.mem.xmm
.xmm.xmm.xmm:
.xmm.mem.xmm:
     IiAbortIfNot Operand3,XMM0
.xmm.xmm:
.xmm.mem:
    RET
 ENDP IipGroupBLEND::
</pre>

<dl id="IipPBLENDVB">
<dt><a href='#IipGroupBLEND'>&uarr; PBLENDVB</a></dt>
<dd>Variable Blend Packed Bytes</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PBLENDVB.html">PBLENDVB</a></dd>
<dt>Category</dt>
<dd>sse41,simdint,datamov</dd>
<dt>Operands</dt>
<dd><b>Vdq</b>,Wdq,<i><span title="nr: 0, group: xmm, type: -, address: -">XMM0</span></i></dd>
<dt>Opcode</dt>
<dd>0x660F3810 /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3825.htm">t3825</a>
</dd>
</dl><pre>
IipPBLENDVB:: PROC
    MOV CL,0x10
    JMP IipGroupBLEND
 ENDP IipPBLENDVB::
</pre>

<dl id="IipBLENDVPS">
<dt><a href='#IipGroupBLEND'>&uarr; BLENDVPS</a></dt>
<dd>Variable Blend Packed Single-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/BLENDVPS.html">BLENDVPS</a></dd>
<dt>Category</dt>
<dd>sse41,simdint,datamov</dd>
<dt>Operands</dt>
<dd><b>Vps</b>,Wps,<i><span title="nr: 0, group: xmm, type: -, address: -">XMM0</span></i></dd>
<dt>Opcode</dt>
<dd>0x660F3814 /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3825.htm">t3825</a>
</dd>
</dl><pre>
IipBLENDVPS:: PROC
    MOV CL,0x14
    JMP IipGroupBLEND
 ENDP IipBLENDVPS::
</pre>

<dl id="IipBLENDVPD">
<dt><a href='#IipGroupBLEND'>&uarr; BLENDVPD</a></dt>
<dd>Variable Blend Packed Double-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/BLENDVPD.html">BLENDVPD</a></dd>
<dt>Category</dt>
<dd>sse41,simdint,datamov</dd>
<dt>Operands</dt>
<dd><b>Vpd</b>,Wpd,<i><span title="nr: 0, group: xmm, type: -, address: -">XMM0</span></i></dd>
<dt>Opcode</dt>
<dd>0x660F3815 /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3825.htm">t3825</a>
</dd>
</dl><pre>
IipBLENDVPD:: PROC
    MOV CL,0x15
    JMP IipGroupBLEND
 ENDP IipBLENDVPD::
</pre>

<dl id="IipCMPSS">
<dt><a href='#IipHandlers'>&uarr; CMPSS</a></dt>
<dd>Compare Scalar Single-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/CMPSS.html">CMPSS</a></dd>
<dt>Category</dt>
<dd>sse1,simdfp,compar</dd>
<dt>Operands</dt>
<dd><b>Vss</b>,Wss,Ib</dd>
<dt>Opcode</dt>
<dd>0xF30FC2 /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
</dl><pre>
IipCMPSS:: PROC
    IiRequire SSE1
    IiEncoding DATA=DWORD
    IiEmitPrefix REPE
    IiEmitOpcode 0x0F,0xC2
    IiOpEn RM
    IiModRM /r
    IiEmitImm Operand3, BYTE, Max=7
    IiDispatchFormat xmm.xmm.imm, xmm.mem.imm
.xmm.xmm.imm:
.xmm.mem.imm
    RET
.cc:IiImmCreate CL,OpPosition=Operand3 ; Entry for CL=cc from mnemonic.
    JMP IipCMPSS:    
 ENDP IipCMPSS::
</pre>

<dl id="IipCMPEQSS">
<dt><a href="#IipCMPSS">&uarr; CMPEQSS</a></dt>
<dd>Compare Scalar Single-FP values Equal</dd>
<dt>Category</dt>
<dd>sse1,simdfp, compar</dd>
<dt>Operands</dt>
<dd>xmm, xmm/mem128</dd>
<dt>Opcode</dt>
<dd>0xF30FC2 /r 0x00</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3882.htm">t3882</a>
</dd>
</dl><pre>
IipCMPEQSS:: PROC
    MOV CL,0x00
    JMP IipCMPSS.cc:
 ENDP IipCMPEQSS::
</pre>

<dl id="IipCMPLTSS">
<dt><a href="#IipCMPSS">&uarr; CMPLTSS</a></dt>
<dd>Compare Scalar Single-FP values Less Than</dd>
<dt>Category</dt>
<dd>sse1,simdfp, compar</dd>
<dt>Operands</dt>
<dd>xmm, xmm/mem128</dd>
<dt>Opcode</dt>
<dd>0xF30FC2 /r 0x01</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3882.htm">t3882</a>
</dd>
</dl><pre>
IipCMPLTSS:: PROC
    MOV CL,0x01
    JMP IipCMPSS.cc:
 ENDP IipCMPLTSS::
</pre>

<dl id="IipCMPLESS">
<dt><a href="#IipCMPSS">&uarr; CMPLESS</a></dt>
<dd>Compare Scalar Single-FP values Less than or Equal</dd>
<dt>Category</dt>
<dd>sse1,simdfp, compar</dd>
<dt>Operands</dt>
<dd>xmm, xmm/mem128</dd>
<dt>Opcode</dt>
<dd>0xF30FC2 /r 0x02</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3882.htm">t3882</a>
</dd>
</dl><pre>
IipCMPLESS:: PROC
    MOV CL,0x02
    JMP IipCMPSS.cc:
 ENDP IipCMPLESS::
</pre>

<dl id="IipCMPUNORDSS">
<dt><a href="#IipCMPSS">&uarr; CMPUNORDSS</a></dt>
<dd>Compare Scalar Single-FP values Unordered</dd>
<dt>Category</dt>
<dd>sse1,simdfp, compar</dd>
<dt>Operands</dt>
<dd>xmm, xmm/mem128</dd>
<dt>Opcode</dt>
<dd>0xF30FC2 /r 0x03</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3882.htm">t3882</a>
</dd>
</dl><pre>
IipCMPUNORDSS:: PROC
    MOV CL,0x03
    JMP IipCMPSS.cc:
 ENDP IipCMPUNORDSS::
</pre>

<dl id="IipCMPNEQSS">
<dt><a href="#IipCMPSS">&uarr; CMPNEQSS</a></dt>
<dd>Compare Scalar Single-FP values Not Equal</dd>
<dt>Category</dt>
<dd>sse1,simdfp, compar</dd>
<dt>Operands</dt>
<dd>xmm, xmm/mem128</dd>
<dt>Opcode</dt>
<dd>0xF30FC2 /r 0x04</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3882.htm">t3882</a>
</dd>
</dl><pre>
IipCMPNEQSS:: PROC
    MOV CL,0x04
    JMP IipCMPSS.cc:
 ENDP IipCMPNEQSS::
</pre>

<dl id="IipCMPNLTSS">
<dt><a href="#IipCMPSS">&uarr; CMPNLTSS</a></dt>
<dd>Compare Scalar Single-FP values Not Less Than</dd>
<dt>Category</dt>
<dd>sse1,simdfp, compar</dd>
<dt>Operands</dt>
<dd>xmm, xmm/mem128</dd>
<dt>Opcode</dt>
<dd>0xF30FC2 /r 0x05</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3882.htm">t3882</a>
</dd>
</dl><pre>
IipCMPNLTSS:: PROC
    MOV CL,0x05
    JMP IipCMPSS.cc:
 ENDP IipCMPNLTSS::
</pre>

<dl id="IipCMPNLESS">
<dt><a href="#IipCMPSS">&uarr; CMPNLESS</a></dt>
<dd>Compare Scalar Single-FP values Not Less than or Equal</dd>
<dt>Category</dt>
<dd>sse1,simdfp, compar</dd>
<dt>Operands</dt>
<dd>xmm, xmm/mem128</dd>
<dt>Opcode</dt>
<dd>0xF30FC2 /r 0x06</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3882.htm">t3882</a>
</dd>
</dl><pre>
IipCMPNLESS:: PROC
    MOV CL,0x06
    JMP IipCMPSS.cc:
 ENDP IipCMPNLESS::
</pre>

<dl id="IipCMPORDSS">
<dt><a href="#IipCMPSS">&uarr; CMPORDSS</a></dt>
<dd>Compare Scalar Single-FP values Ordered</dd>
<dt>Category</dt>
<dd>sse1,simdfp, compar</dd>
<dt>Operands</dt>
<dd>xmm, xmm/mem128</dd>
<dt>Opcode</dt>
<dd>0xF30FC2 /r 0x07</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3882.htm">t3882</a>
</dd>
</dl><pre>
IipCMPORDSS:: PROC
    MOV CL,0x07
    JMP IipCMPSS.cc:
 ENDP IipCMPORDSS::
</pre>

<dl id="IipCMPPS">
<dt><a href='#IipHandlers'>&uarr; CMPPS</a></dt>
<dd>Compare Packed Single-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/CMPPS.html">CMPPS</a></dd>
<dt>Category</dt>
<dd>sse1,simdfp,compar</dd>
<dt>Operands</dt>
<dd><b>Vps</b>,Wps,Ib</dd>
<dt>Opcode</dt>
<dd>0x0FC2 /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3884.htm">t3884</a>
</dd>
</dl><pre>
IipCMPPS:: PROC
    IiRequire SSE1
    IiEncoding DATA=DWORD
    IiEmitOpcode 0x0F,0xC2
    IiOpEn RM
    IiModRM /r
    IiEmitImm Operand3, BYTE, Max=7
    IiDispatchFormat xmm.xmm.imm, xmm.mem.imm
.xmm.xmm.imm:
.xmm.mem.imm
    RET
.cc:IiImmCreate CL,OpPosition=Operand3 ; Entry for CL=cc from mnemonic.
    JMP IipCMPPS:    
 ENDP IipCMPPS::
</pre>

<dl id="IipCMPEQPS">
<dt><a href="#IipCMPPS">&uarr; CMPEQPS</a></dt>
<dd>Compare Packed Single-FP values Equal</dd>
<dt>Category</dt>
<dd>sse1,simdfp, compar</dd>
<dt>Operands</dt>
<dd>xmm, xmm/mem128</dd>
<dt>Opcode</dt>
<dd>0x0FC2 /r 0x00</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3884.htm">t3884</a>
</dd>
</dl><pre>
IipCMPEQPS:: PROC
    MOV CL,0x00
    JMP IipCMPPS.cc:
 ENDP IipCMPEQPS::
</pre>

<dl id="IipCMPLTPS">
<dt><a href="#IipCMPPS">&uarr; CMPLTPS</a></dt>
<dd>Compare Packed Single-FP values Less Than</dd>
<dt>Category</dt>
<dd>sse1,simdfp, compar</dd>
<dt>Operands</dt>
<dd>xmm, xmm/mem128</dd>
<dt>Opcode</dt>
<dd>0x0FC2 /r 0x01</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3884.htm">t3884</a>
</dd>
</dl><pre>
IipCMPLTPS:: PROC
    MOV CL,0x01
    JMP IipCMPPS.cc:
 ENDP IipCMPLTPS::
</pre>

<dl id="IipCMPLEPS">
<dt><a href="#IipCMPPS">&uarr; CMPLEPS</a></dt>
<dd>Compare Packed Single-FP values Less than or Equal</dd>
<dt>Category</dt>
<dd>sse1,simdfp, compar</dd>
<dt>Operands</dt>
<dd>xmm, xmm/mem128</dd>
<dt>Opcode</dt>
<dd>0x0FC2 /r 0x02</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3884.htm">t3884</a>
</dd>
</dl><pre>
IipCMPLEPS:: PROC
    MOV CL,0x02
    JMP IipCMPPS.cc:
 ENDP IipCMPLEPS::
</pre>

<dl id="IipCMPUNORDPS">
<dt><a href="#IipCMPPS">&uarr; CMPUNORDPS</a></dt>
<dd>Compare Packed Single-FP values Unordered</dd>
<dt>Category</dt>
<dd>sse1,simdfp, compar</dd>
<dt>Operands</dt>
<dd>xmm, xmm/mem128</dd>
<dt>Opcode</dt>
<dd>0x0FC2 /r 0x03</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3884.htm">t3884</a>
</dd>
</dl><pre>
IipCMPUNORDPS:: PROC
    MOV CL,0x03
    JMP IipCMPPS.cc:
 ENDP IipCMPUNORDPS::
</pre>

<dl id="IipCMPNEQPS">
<dt><a href="#IipCMPPS">&uarr; CMPNEQPS</a></dt>
<dd>Compare Packed Single-FP values Not Equal</dd>
<dt>Category</dt>
<dd>sse1,simdfp, compar</dd>
<dt>Operands</dt>
<dd>xmm, xmm/mem128</dd>
<dt>Opcode</dt>
<dd>0x0FC2 /r 0x04</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3884.htm">t3884</a>
</dd>
</dl><pre>
IipCMPNEQPS:: PROC
    MOV CL,0x04
    JMP IipCMPPS.cc:
 ENDP IipCMPNEQPS::
</pre>

<dl id="IipCMPNLTPS">
<dt><a href="#IipCMPPS">&uarr; CMPNLTPS</a></dt>
<dd>Compare Packed Single-FP values Not Less Than</dd>
<dt>Category</dt>
<dd>sse1,simdfp, compar</dd>
<dt>Operands</dt>
<dd>xmm, xmm/mem128</dd>
<dt>Opcode</dt>
<dd>0x0FC2 /r 0x05</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3884.htm">t3884</a>
</dd>
</dl><pre>
IipCMPNLTPS:: PROC
    MOV CL,0x05
    JMP IipCMPPS.cc:
 ENDP IipCMPNLTPS::
</pre>

<dl id="IipCMPNLEPS">
<dt><a href="#IipCMPPS">&uarr; CMPNLEPS</a></dt>
<dd>Compare Packed Single-FP values Not Less than or Equal</dd>
<dt>Category</dt>
<dd>sse1,simdfp, compar</dd>
<dt>Operands</dt>
<dd>xmm, xmm/mem128</dd>
<dt>Opcode</dt>
<dd>0x0FC2 /r 0x06</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3884.htm">t3884</a>
</dd>
</dl><pre>
IipCMPNLEPS:: PROC
    MOV CL,0x06
    JMP IipCMPPS.cc:
 ENDP IipCMPNLEPS::
</pre>

<dl id="IipCMPORDPS">
<dt><a href="#IipCMPPS">&uarr; CMPORDPS</a></dt>
<dd>Compare Packed Single-FP values Ordered</dd>
<dt>Category</dt>
<dd>sse1,simdfp, compar</dd>
<dt>Operands</dt>
<dd>xmm, xmm/mem128</dd>
<dt>Opcode</dt>
<dd>0x0FC2 /r 0x07</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3884.htm">t3884</a>
</dd>
</dl><pre>
IipCMPORDPS:: PROC
    MOV CL,0x07
    JMP IipCMPPS.cc:
 ENDP IipCMPORDPS::
</pre>

<dl id="IipCMPSD">
<dt><a href='#IipHandlers'>&uarr; CMPSD</a></dt>
<dd>Compare Packed Double-FP Values / overloaded as
<a class="EXT" href="iig.htm#IigCMPSD">Compare string operands, DATA=D</a></dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/CMPSD.html">CMPSD</a></dd>
<dt>Category</dt>
<dd>sse2,pcksclr,compar</dd>
<dt>Operands</dt>
<dd><b>Vpd</b>,Wpd,Ib</dd>
<dt>Opcode</dt>
<dd>0x660FC2 /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3886.htm">t3886</a>
</dd>
</dl><pre>
IipCMPSD:: PROC
    IiRequire SSE2
    IiEncoding DATA=QWORD
    IiEmitPrefix REPNE
    IiEmitOpcode 0x0F,0xC2
    IiOpEn RM
    IiModRM /r
    IiEmitImm Operand3, BYTE, Max=7
    IiDispatchFormat xmm.xmm.imm, xmm.mem.imm
.xmm.xmm.imm:
.xmm.mem.imm
    RET
.cc:IiImmCreate CL,OpPosition=Operand3 ; Entry for CL=cc from mnemonic.
    JMP IipCMPSD:    
 ENDP IipCMPSD::
</pre>

<dl id="IipCMPEQSD">
<dt><a href="#IipCMPSD">&uarr; CMPEQSD</a></dt>
<dd>Compare Scalar Double-FP values Equal</dd>
<dt>Category</dt>
<dd>sse2,pcksclr,compar</dd>
<dt>Operands</dt>
<dd>xmm, xmm/mem128</dd>
<dt>Opcode</dt>
<dd>0xF20FC2 /r 0x00</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3886.htm">t3886</a>
</dd>
</dl><pre>
IipCMPEQSD:: PROC
    MOV CL,0x00
    JMP IipCMPSD.cc:
 ENDP IipCMPEQSD::
</pre>

<dl id="IipCMPLTSD">
<dt><a href="#IipCMPSD">&uarr; CMPLTSD</a></dt>
<dd>Compare Scalar Double-FP values Less Than</dd>
<dt>Category</dt>
<dd>sse2,pcksclr,compar</dd>
<dt>Operands</dt>
<dd>xmm, xmm/mem128</dd>
<dt>Opcode</dt>
<dd>0xF20FC2 /r 0x01</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3886.htm">t3886</a>
</dd>
</dl><pre>
IipCMPLTSD:: PROC
    MOV CL,0x01
    JMP IipCMPSD.cc:
 ENDP IipCMPLTSD::
</pre>

<dl id="IipCMPLESD">
<dt><a href="#IipCMPSD">&uarr; CMPLESD</a></dt>
<dd>Compare Scalar Double-FP values Less than or Equal</dd>
<dt>Category</dt>
<dd>sse2,pcksclr,compar</dd>
<dt>Operands</dt>
<dd>xmm, xmm/mem128</dd>
<dt>Opcode</dt>
<dd>0xF20FC2 /r 0x02</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3886.htm">t3886</a>
</dd>
</dl><pre>
IipCMPLESD:: PROC
    MOV CL,0x02
    JMP IipCMPSD.cc:
 ENDP IipCMPLESD::
</pre>

<dl id="IipCMPUNORDSD">
<dt><a href="#IipCMPSD">&uarr; CMPUNORDSD</a></dt>
<dd>Compare Scalar Double-FP values Unordered</dd>
<dt>Category</dt>
<dd>sse2,pcksclr,compar</dd>
<dt>Operands</dt>
<dd>xmm, xmm/mem128</dd>
<dt>Opcode</dt>
<dd>0xF20FC2 /r 0x03</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3886.htm">t3886</a>
</dd>
</dl><pre>
IipCMPUNORDSD:: PROC
    MOV CL,0x03
    JMP IipCMPSD.cc:
 ENDP IipCMPUNORDSD::
</pre>

<dl id="IipCMPNEQSD">
<dt><a href="#IipCMPSD">&uarr; CMPNEQSD</a></dt>
<dd>Compare Scalar Double-FP values Not Equal</dd>
<dt>Category</dt>
<dd>sse2,pcksclr,compar</dd>
<dt>Operands</dt>
<dd>xmm, xmm/mem128</dd>
<dt>Opcode</dt>
<dd>0xF20FC2 /r 0x04</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3886.htm">t3886</a>
</dd>
</dl><pre>
IipCMPNEQSD:: PROC
    MOV CL,0x04
    JMP IipCMPSD.cc:
 ENDP IipCMPNEQSD::
</pre>

<dl id="IipCMPNLTSD">
<dt><a href="#IipCMPSD">&uarr; CMPNLTSD</a></dt>
<dd>Compare Scalar Double-FP values Not Less Than</dd>
<dt>Category</dt>
<dd>sse2,pcksclr,compar</dd>
<dt>Operands</dt>
<dd>xmm, xmm/mem128</dd>
<dt>Opcode</dt>
<dd>0xF20FC2 /r 0x05</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3886.htm">t3886</a>
</dd>
</dl><pre>
IipCMPNLTSD:: PROC
    MOV CL,0x05
    JMP IipCMPSD.cc:
 ENDP IipCMPNLTSD::
</pre>

<dl id="IipCMPNLESD">
<dt><a href="#IipCMPSD">&uarr; CMPNLESD</a></dt>
<dd>Compare Scalar Double-FP values Not Less than or Equal</dd>
<dt>Category</dt>
<dd>sse2,pcksclr,compar</dd>
<dt>Operands</dt>
<dd>xmm, xmm/mem128</dd>
<dt>Opcode</dt>
<dd>0xF20FC2 /r 0x06</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3886.htm">t3886</a>
</dd>
</dl><pre>
IipCMPNLESD:: PROC
    MOV CL,0x06
    JMP IipCMPSD.cc:
 ENDP IipCMPNLESD::
</pre>

<dl id="IipCMPORDSD">
<dt><a href="#IipCMPSD">&uarr; CMPORDSD</a></dt>
<dd>Compare Scalar Double-FP values Ordered</dd>
<dt>Category</dt>
<dd>sse2,pcksclr,compar</dd>
<dt>Operands</dt>
<dd>xmm, xmm/mem128</dd>
<dt>Opcode</dt>
<dd>0xF20FC2 /r 0x07</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3886.htm">t3886</a>
</dd>
</dl><pre>
IipCMPORDSD:: PROC
    MOV CL,0x07
    JMP IipCMPSD.cc:
 ENDP IipCMPORDSD::
</pre>

<dl id="IipCMPPD">
<dt><a href='#IipHandlers'>&uarr; CMPPD</a></dt>
<dd>Compare Packed Double-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/CMPPD.html">CMPPD</a></dd>
<dt>Category</dt>
<dd>sse2,pcksclr,compar</dd>
<dt>Operands</dt>
<dd><b>Vpd</b>,Wpd,Ib</dd>
<dt>Opcode</dt>
<dd>0x660FC2 /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3888.htm">t3888</a>
</dd>
</dl><pre>
IipCMPPD:: PROC
    IiRequire SSE2
    IiEncoding DATA=QWORD
    IiEmitPrefix OTOGGLE
    IiEmitOpcode 0x0F,0xC2
    IiOpEn RM
    IiModRM /r
    IiEmitImm Operand3, BYTE, Max=7
    IiDispatchFormat xmm.xmm.imm, xmm.mem.imm
.xmm.xmm.imm:
.xmm.mem.imm
    RET
.cc:IiImmCreate CL,OpPosition=Operand3 ; Entry for CL=cc from mnemonic.
    JMP IipCMPPD:    
 ENDP IipCMPPD::
</pre>

<dl id="IipCMPEQPD">
<dt><a href="#IipCMPPD">&uarr; CMPEQPD</a></dt>
<dd>Compare Packed Double-FP values Equal</dd>
<dt>Category</dt>
<dd>sse2,pcksclr,compar</dd>
<dt>Operands</dt>
<dd>xmm, xmm/mem128</dd>
<dt>Opcode</dt>
<dd>0x660FC2 /r 0x00</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3888.htm">t3888</a>
</dd>
</dl><pre>
IipCMPEQPD:: PROC
    MOV CL,0x00
    JMP IipCMPPD.cc:
 ENDP IipCMPEQPD::
</pre>

<dl id="IipCMPLTPD">
<dt><a href="#IipCMPPD">&uarr; CMPLTPD</a></dt>
<dd>Compare Packed Double-FP values Less Than</dd>
<dt>Category</dt>
<dd>sse2,pcksclr,compar</dd>
<dt>Operands</dt>
<dd>xmm, xmm/mem128</dd>
<dt>Opcode</dt>
<dd>0x660FC2 /r 0x01</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3888.htm">t3888</a>
</dd>
</dl><pre>
IipCMPLTPD:: PROC
    MOV CL,0x01
    JMP IipCMPPD.cc:
 ENDP IipCMPLTPD::
</pre>

<dl id="IipCMPLEPD">
<dt><a href="#IipCMPPD">&uarr; CMPLEPD</a></dt>
<dd>Compare Packed Double-FP values Less than or Equal</dd>
<dt>Category</dt>
<dd>sse2,pcksclr,compar</dd>
<dt>Operands</dt>
<dd>xmm, xmm/mem128</dd>
<dt>Opcode</dt>
<dd>0x660FC2 /r 0x02</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3888.htm">t3888</a>
</dd>
</dl><pre>
IipCMPLEPD:: PROC
    MOV CL,0x02
    JMP IipCMPPD.cc:
 ENDP IipCMPLEPD::
</pre>

<dl id="IipCMPUNORDPD">
<dt><a href="#IipCMPPD">&uarr; CMPUNORDPD</a></dt>
<dd>Compare Packed Double-FP values Unordered</dd>
<dt>Category</dt>
<dd>sse2,pcksclr,compar</dd>
<dt>Operands</dt>
<dd>xmm, xmm/mem128</dd>
<dt>Opcode</dt>
<dd>0x660FC2 /r 0x03</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3888.htm">t3888</a>
</dd>
</dl><pre>
IipCMPUNORDPD:: PROC
    MOV CL,0x03
    JMP IipCMPPD.cc:
 ENDP IipCMPUNORDPD::
</pre>

<dl id="IipCMPNEQPD">
<dt><a href="#IipCMPPD">&uarr; CMPNEQPD</a></dt>
<dd>Compare Packed Double-FP values Not Equal</dd>
<dt>Category</dt>
<dd>sse2,pcksclr,compar</dd>
<dt>Operands</dt>
<dd>xmm, xmm/mem128</dd>
<dt>Opcode</dt>
<dd>0x660FC2 /r 0x04</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3888.htm">t3888</a>
</dd>
</dl><pre>
IipCMPNEQPD:: PROC
    MOV CL,0x04
    JMP IipCMPPD.cc:
 ENDP IipCMPNEQPD::
</pre>

<dl id="IipCMPNLTPD">
<dt><a href="#IipCMPPD">&uarr; CMPNLTPD</a></dt>
<dd>Compare Packed Double-FP values Not Less Than</dd>
<dt>Category</dt>
<dd>sse2,pcksclr,compar</dd>
<dt>Operands</dt>
<dd>xmm, xmm/mem128</dd>
<dt>Opcode</dt>
<dd>0x660FC2 /r 0x05</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3888.htm">t3888</a>
</dd>
</dl><pre>
IipCMPNLTPD:: PROC
    MOV CL,0x05
    JMP IipCMPPD.cc:
 ENDP IipCMPNLTPD::
</pre>

<dl id="IipCMPNLEPD">
<dt><a href="#IipCMPPD">&uarr; CMPNLEPD</a></dt>
<dd>Compare Packed Double-FP values Not Less than or Equal</dd>
<dt>Category</dt>
<dd>sse2,pcksclr,compar</dd>
<dt>Operands</dt>
<dd>xmm, xmm/mem128</dd>
<dt>Opcode</dt>
<dd>0x660FC2 /r 0x06</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3888.htm">t3888</a>
</dd>
</dl><pre>
IipCMPNLEPD:: PROC
    MOV CL,0x06
    JMP IipCMPPD.cc:
 ENDP IipCMPNLEPD::
</pre>

<dl id="IipCMPORDPD">
<dt><a href="#IipCMPPD">&uarr; CMPORDPD</a></dt>
<dd>Compare Packed Double-FP values Ordered</dd>
<dt>Category</dt>
<dd>sse2,pcksclr,compar</dd>
<dt>Operands</dt>
<dd>xmm, xmm/mem128</dd>
<dt>Opcode</dt>
<dd>0x660FC2 /r 0x07</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3888.htm">t3888</a>
</dd>
</dl><pre>
IipCMPORDPD:: PROC
    MOV CL,0x07
    JMP IipCMPPD.cc:
 ENDP IipCMPORDPD::
</pre>

<dl id="IipMOVNTSS">
<dt><a href='#IipHandlers'>&uarr; MOVNTSS</a></dt>
<dd>Move Non-Temporal Scalar Single-Precision Floating-Point</dd>
<dt>Category</dt>
<dd>SSE4 AMD</dd>
<dt>Operands</dt>
<dd>mem32, xmm</dd>
<dt>Opcode</dt>
<dd>F3042B /r</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3685.htm">t3685</a>
</dd>
</dl><pre>
IipMOVNTSS:: PROC
    IiRequire 686,SSE4,AMD
    IiEncoding DATA=DWORD
    IiEmitPrefix REPE
    IiEmitOpcode 0x0F,0x2B
    IiOpEn MR
    IiModRM /r
    IiDispatchFormat mem.xmm
.mem.xmm:
    RET
 ENDP IipMOVNTSS::
</pre>

<dl id="IipMOVNTSD">
<dt><a href='#IipHandlers'>&uarr; MOVNTSD</a></dt>
<dd>Move Non-Temporal Scalar Double-Precision Floating-Point</dd>
<dt>Category</dt>
<dd>SSE4 AMD</dd>
<dt>Operands</dt>
<dd>mem64,xmm</dd>
<dt>Opcode</dt>
<dd>0xF20F2B /r</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3685.htm">t3685</a>
</dd>
</dl><pre>
IipMOVNTSD:: PROC
    IiRequire 686,SSE4,AMD
    IiEncoding DATA=QWORD
    IiEmitPrefix REPNE
    IiEmitOpcode 0x0F,0x2B
    IiOpEn MR
    IiModRM /r
    IiDispatchFormat mem.xmm
.mem.xmm:
    RET
 ENDP IipMOVNTSD::
</pre>

<dl id="IipEXTRQ">
<dt><a href='#IipHandlers'>&uarr; EXTRQ</a></dt>
<dd>Extract Field From Register</dd>
<dt>Category</dt>
<dd>SSE4 AMD</dd>
<dt>Operands</dt>
<dd>xmm,xmm | xmm,imm8,imm8</dd>
<dt>Opcode</dt>
<dd>660F79 /r | 660F78 /0 ib ib</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3775.htm">t3775</a>
</dd>
</dl><pre>
IipEXTRQ:: PROC
    IiRequire 686,SSE4,AMD
    IiEmitPrefix OTOGGLE
    IiEmitOpcode 0x0F
    IiDispatchFormat xmm.xmm, xmm.imm.imm
.xmm.xmm:
    IiEmitOpcode 0x79
    IiOpEn RM
    IiModRM /r
    RET
.xmm.imm.imm:
    IiEmitOpcode 0x78
    IiOpEn M
    IiModRM /0
    IiEmitImm Operand2, BYTE
    IiEmitImm2 Operand3
    RET
 ENDP IipEXTRQ::
</pre>

<dl id="IipINSERTQ">
<dt><a href='#IipHandlers'>&uarr; INSERTQ</a></dt>
<dd>Insert Field</dd>
<dt>Category</dt>
<dd>SSE4 AMD</dd>
<dt>Operands</dt>
<dd>xmm,xmm,imm8,imm8 | xmm,xmm</dd>
<dt>Opcode</dt>
<dd>0xF20F78 /r ib ib | 0xF20F79 /r</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3775.htm">t3775</a>
</dd>
</dl><pre>
IipINSERTQ:: PROC
    IiRequire 686,SSE4,AMD
    IiEmitPrefix REPNE
    IiEmitOpcode 0x0F
    IiModRM /r
    IiDispatchFormat xmm.xmm, xmm.xmm.imm.imm
.xmm.xmm:
    IiEmitOpcode 0x79
    IiOpEn RM
    RET
.xmm.xmm.imm.imm:
    IiEmitOpcode 0x78
    IiOpEn MR ; AMD does not specify operand encoding, NASM uses MR here.
    IiEmitImm Operand3, BYTE
    IiEmitImm2 Operand4
    RET
 ENDP IipINSERTQ::
</pre>

<!--IipEpilogue--><pre>
  ENDPROGRAM iip
</pre><!--TAILMENU-->
<!--Contents below the marker {!==TAILMENU==} was generated by "generate.php".-->
<br class='CLEAR'/><a id='bottom' href='#top'>&#x25B2;Back to the top&#x25B2;</a>
</body></html>
