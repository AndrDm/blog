<!doctype html><html lang='en'><head>
<meta http-equiv='Content-Type' content='text/html; charset=utf-8'/>
<meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=2.0, user-scalable=yes'>
<meta name='robots' content='ALL,FOLLOW'/>
<meta name='description' content='iim.htm source file'/>
<meta name='version' content='20250318'/>
<meta name='author' content='Pavel vitsoft Šrubař'/>
<link rel='stylesheet' href='../euroasm.css' type='text/css'/>
<link rel='shortcut icon' href='../favicon.ico'/>
<title>iim.htm source file</title>
</head>
<body class='EASOURCE' id='top'><div class='HEADMENU'><table>
<tr><td rowspan='2' title='&euro;ASM - assembler and linker'><img src='../favicon.ico' alt='EuroAssembler' />
<td><a href='../index.htm' title='Alphabetical index of all &euro;ASM elements, directives and instructions'>Index</a></td>
<td><a href='../eadoc/' class='EADOC' title='Documentation of EuroAssembler'>Manual</a></td>
<td><a href='https://euroassembler.eu/download/' title='History &amp; download of the latest and previous versions'>Download</a></td>
<td><a href='../easource/' class='EASOURCE' title='Source files of EuroAssembler itself'>Source</a></td>
<td><a href='../maclib/' class='MACLIB' title='Macro libraries shipped with &euro;ASM'>Macros</a></td>
<td rowspan='2' title='Find the searched token in any text file on this site'>
<form method='post' action='../search.php' enctype='multipart/form-data' accept-charset='utf-8'>
<input type='text' id='q' placeholder='Searched word(s)' name='q' value=''/>
<br/><label title='Check the box to find the expression even if it is surrounded by other letters | digits.'>
<input type='checkbox' name='EW'/><small>Embedded word</small></label>
<br/><label title='Check the box for case-insensitive search.'>
<input type='checkbox' name='CI'/><small>Case ins.</small></label>
<input type='submit' title='Search for the specified word|expression in all site files.' name='find' value='Search'/>
</form></td></tr><tr>
<td><a href='../sitemap.htm' title='List of directories and files on this site'>Sitemap</a></td>
<td><a href='../eadoc/links.htm' class='EADOC' title='References and external links to resources used in EuroAssembler developement'>Links</a></td>
<td><a href='https://euroassembler.eu/forum/' title='Discussion forum concerning EuroAssembler'>Forum</a></td>
<td><a href='../eatests/' class='EATESTS' title='Program snippets for testing the function of &euro;ASM'>Tests</a></td>
<td><a href='../objlib/' class='OBJLIB' title='Skeletons and sample objects and projects shipped with &euro;ASM'>Projects</a></td>
</tr></table></div>
<!--Contents above the marker {!==/HEADMENU==} was generated by "generate.php".-->
<!--/HEADMENU-->
<h1>iim.htm
<br/><i>Enumerations</i>
<br/><a href="#IimList">IimList</a>
<br/><i>Group handlers</i>
<br/><a href="#IimGroupSSE2">IimGroupSSE2</a>
<br/><a href="#IimGroupSSE3">IimGroupSSE3</a>
<br/><i>Instruction handlers</i><br/><span class="ILIST">
<a href="#IimCVTPD2PI">CVTPD2PI</a>
<a href="#IimCVTPI2PD">CVTPI2PD</a>
<a href="#IimCVTPI2PS">CVTPI2PS</a>
<a href="#IimCVTPS2PI">CVTPS2PI</a>
<a href="#IimCVTTPD2PI">CVTTPD2PI</a>
<a href="#IimCVTTPS2PI">CVTTPS2PI</a>
<a href="#IimEMMS">EMMS</a>
<a href="#IimMASKMOVQ">MASKMOVQ</a>
<a href="#IimMOVDQ2Q">MOVDQ2Q</a>
<a href="#IimMOVNTQ">MOVNTQ </a>
<a href="#IimMOVQ2DQ">MOVQ2DQ</a>
<a href="#IimPABSB">PABSB</a>
<a href="#IimPABSD">PABSD</a>
<a href="#IimPABSW">PABSW</a>
<a href="#IimPACKSSDW">PACKSSDW</a>
<a href="#IimPACKSSWB">PACKSSWB</a>
<a href="#IimPACKUSWB">PACKUSWB</a>
<a href="#IimPADDB">PADDB</a>
<a href="#IimPADDD">PADDD</a>
<a href="#IimPADDQ">PADDQ</a>
<a href="#IimPADDSB">PADDSB</a>
<a href="#IimPADDSW">PADDSW</a>
<a href="#IimPADDUSB">PADDUSB</a>
<a href="#IimPADDUSW">PADDUSW</a>
<a href="#IimPADDW">PADDW</a>
<a href="#IimPALIGNR">PALIGNR</a>
<a href="#IimPAND">PAND</a>
<a href="#IimPANDN">PANDN</a>
<a href="#IimPAVGB">PAVGB</a>
<a href="#IimPAVGW">PAVGW</a>
<a href="#IimPCMPEQB">PCMPEQB</a>
<a href="#IimPCMPEQD">PCMPEQD</a>
<a href="#IimPCMPEQW">PCMPEQW</a>
<a href="#IimPCMPGTB">PCMPGTB</a>
<a href="#IimPCMPGTD">PCMPGTD</a>
<a href="#IimPCMPGTW">PCMPGTW</a>
<a href="#IimPEXTRW">PEXTRW</a>
<a href="#IimPHADDD">PHADDD</a>
<a href="#IimPHADDSW">PHADDSW</a>
<a href="#IimPHADDW">PHADDW</a>
<a href="#IimPHSUBD">PHSUBD</a>
<a href="#IimPHSUBSW">PHSUBSW</a>
<a href="#IimPHSUBW">PHSUBW</a>
<a href="#IimPINSRW">PINSRW</a>
<a href="#IimPMADDUBSW">PMADDUBSW</a>
<a href="#IimPMADDWD">PMADDWD</a>
<a href="#IimPMAXSW">PMAXSW</a>
<a href="#IimPMAXUB">PMAXUB</a>
<a href="#IimPMINSW">PMINSW</a>
<a href="#IimPMINUB">PMINUB</a>
<a href="#IimPMOVMSKB">PMOVMSKB</a>
<a href="#IimPMULHRSW">PMULHRSW</a>
<a href="#IimPMULHUW">PMULHUW</a>
<a href="#IimPMULHW">PMULHW</a>
<a href="#IimPMULLW">PMULLW</a>
<a href="#IimPMULUDQ">PMULUDQ</a>
<a href="#IimPOR">POR</a>
<a href="#IimPSADBW">PSADBW</a>
<a href="#IimPSHUFB">PSHUFB</a>
<a href="#IimPSHUFW">PSHUFW</a>
<a href="#IimPSIGNB">PSIGNB</a>
<a href="#IimPSIGND">PSIGND</a>
<a href="#IimPSIGNW">PSIGNW</a>
<a href="#IimPSLLD">PSLLD</a>
<a href="#IimPSLLQ">PSLLQ</a>
<a href="#IimPSLLW">PSLLW</a>
<a href="#IimPSRAD">PSRAD</a>
<a href="#IimPSRAW">PSRAW</a>
<a href="#IimPSRLD">PSRLD</a>
<a href="#IimPSRLQ">PSRLQ</a>
<a href="#IimPSRLW">PSRLW</a>
<a href="#IimPSUBB">PSUBB</a>
<a href="#IimPSUBD">PSUBD</a>
<a href="#IimPSUBQ">PSUBQ</a>
<a href="#IimPSUBSB">PSUBSB</a>
<a href="#IimPSUBSW">PSUBSW</a>
<a href="#IimPSUBUSB">PSUBUSB</a>
<a href="#IimPSUBUSW">PSUBUSW</a>
<a href="#IimPSUBW">PSUBW</a>
<a href="#IimPUNPCKHBW">PUNPCKHBW</a>
<a href="#IimPUNPCKHDQ">PUNPCKHDQ</a>
<a href="#IimPUNPCKHWD">PUNPCKHWD</a>
<a href="#IimPUNPCKLBW">PUNPCKLBW</a>
<a href="#IimPUNPCKLDQ">PUNPCKLDQ</a>
<a href="#IimPUNPCKLWD">PUNPCKLWD</a>
<a href="#IimPXOR">PXOR</a>
</span><!--IimAList-->
</h1>
<dl id="IimHandlers"><dt><a href="#top">&uarr; <em>IimHandlers</em></a> </dt>
<dd> assemble MMX <b>multimedia</b> machine instructions.</dd>
<dt>See also</dt><dd><a class="EXT" href="ii.htm#IiHandlers">IiHandlers</a>,
<a class="EXTL" href="../eadoc/links.htm#IntelVol2">[IntelVol2]</a>.
</dd></dl><pre>
iim PROGRAM FORMAT=COFF,MODEL=FLAT,WIDTH=32
    INCLUDEHEAD euroasm.htm, \  Interface (structures, symbols and macros) of other modules used in this source.
                ea.htm,eaopt.htm,exp.htm,ii.htm,msg.htm,pgm.htm,pgmopt.htm,sss.htm,stm.htm,sym.htm
</pre><br class="CLEAR"/><pre>
iim HEAD ; Start of module interface.
</pre>

<dl id="IimList"><dt><a href="#top">&uarr; %IimList</a></dt><dd> enumerates machine instructions
<!---->of this family which &euro;ASM can assemble.
<br/>Each instruction declared in <code>%IimList</code> requires the corresponding
<a href="#IimHandlers">handler</a> in this file.</dd>
<dt>See also</dt><dd><a class="EXT" href="dict.htm#DictLookupIi">DictLookupIi</a></dd></dl><pre>
%IimList %SET \
PSLLW, \
PSLLD, \
PSLLQ, \
PSRAW, \
PSRAD, \
PSRLW, \
PSRLD, \
PSRLQ, \
PUNPCKLBW, \
PUNPCKLWD, \
PUNPCKLDQ, \
PACKSSWB, \
PCMPGTB, \
PCMPGTW, \
PCMPGTD, \
PACKUSWB, \
PUNPCKHBW, \
PUNPCKHWD, \
PUNPCKHDQ, \
PACKSSDW, \
PCMPEQB, \
PCMPEQW, \
PCMPEQD, \
PADDQ, \
PMULLW, \
PSUBUSB, \
PSUBUSW, \
PMINUB, \
PAND, \
PADDUSB, \
PADDUSW, \
PMAXUB, \
PANDN, \
PAVGB, \
PAVGW, \
PMULHUW, \
PMULHW, \
PSUBSB, \
PSUBSW, \
PMINSW, \
POR, \
PADDSB, \
PADDSW, \
PMAXSW, \
PXOR, \
PMULUDQ, \
PMADDWD, \
PSADBW, \
PSUBB, \
PSUBW, \
PSUBD, \
PSUBQ, \
PADDB, \
PADDW, \
PADDD, \
EMMS, \
MASKMOVQ, \
MOVNTQ , \
PINSRW, \
PMOVMSKB, \
PSHUFW, \
PEXTRW, \
PALIGNR, \
PSHUFB, \
PHADDW, \
PHADDD, \
PHADDSW, \
PMADDUBSW, \
PHSUBW, \
PHSUBD, \
PHSUBSW, \
PSIGNB, \
PSIGNW, \
PSIGND, \
PMULHRSW, \
PABSB, \
PABSW, \
PABSD, \
CVTPI2PD, \
CVTTPD2PI, \
CVTPD2PI, \
CVTPS2PI, \
CVTPI2PS, \
CVTTPS2PI, \
MOVDQ2Q, \
MOVQ2DQ, \
<!--IimList-->
;
</pre><pre>
  ENDHEAD iim ; End of module interface.
</pre>

<dl id="IimPSRLW">
<dt><a href='#IimHandlers'>&uarr; PSRLW</a></dt>
<dd>Shift Packed Data Right Logical</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PSRLW:PSRLD:PSRLQ.html">PSRLW</a></dd>
<dt>Category</dt>
<dd>mmx,shift</dd>
<dt>Operands</dt>
<dd><b>Nq</b>,Ib | <b>Udq</b>,Ib | <b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0F71 /2 | 0x660F71 /2 | 0x0FD1 /r | 0x660FD1 /r</dd>
<dt>CPU</dt>
<dd>PX+</dd>
</dl><pre>
IimPSRLW:: PROC
    MOV CL,0xD1
    MOV EAX,iiPpgModRMd + 2<<28 ; ModRM /2                                                       ;; >>
.W: MOV CH,0x71
    IiEncoding DATA=WORD
.cc:IiEmitOpcode 0x0F
    IiDispatchFormat mmx.mmx, mmx.mem, mmx.imm, xmm.xmm, xmm.mem, xmm.imm
.xmm.xmm:
.xmm.mem:
     IiRequire SSE2
     IiEmitPrefix OTOGGLE
.mmx.mmx:
.mmx.mem:
     IiEmitOpcode ECX
     IiOpEn RM
     IiModRM /r
     RET
.xmm.imm:
     IiRequire SSE2
     IiEmitPrefix OTOGGLE
.mmx.imm:
     SHR ECX,8
     IiEmitOpcode ECX
     IiOpEn M
     IiModRM EAX
     IiEmitImm Operand2, BYTE
     RET
 ENDP IimPSRLW::
</pre>

<dl id="IimPSRLD">
<dt><a href='#IimPSRLW'>&uarr; PSRLD</a></dt>
<dd>Shift Double Quadword Right Logical</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PSRLW:PSRLD:PSRLQ.html">PSRLD</a></dd>
<dt>Category</dt>
<dd>mmx,shift</dd>
<dt>Operands</dt>
<dd><b>Nq</b>,Ib | <b>Udq</b>,Ib | <b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0F72 /2 | 0x660F72 /2 | 0x0FD2 /r | 0x660FD2 /r</dd>
<dt>CPU</dt>
<dd>PX+</dd>
</dl><pre>
IimPSRLD:: PROC
    MOV CL,0xD2
    MOV EAX,iiPpgModRMd + 2<<28 ; ModRM /2                                                      ;; >>
.D: IiEncoding DATA=DWORD
    MOV CH,0x72
    JMP IimPSRLW.cc:
 ENDP IimPSRLD::
</pre>

<dl id="IimPSRLQ">
<dt><a href='#IimPSRLW'>&uarr; PSRLQ</a></dt>
<dd>Shift Packed Data Right Logical</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PSRLW:PSRLD:PSRLQ.html">PSRLQ</a></dd>
<dt>Category</dt>
<dd>mmx,shift</dd>
<dt>Operands</dt>
<dd><b>Nq</b>,Ib | <b>Udq</b>,Ib | <b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0F73 /2 | 0x660F73 /2 | 0x0FD3 /r | 0x660FD3 /r</dd>
<dt>CPU</dt>
<dd>PX+</dd>
</dl><pre>
IimPSRLQ:: PROC
    MOV CL,0xD3
    MOV EAX,iiPpgModRMd + 2<<28 ; ModRM /2                                                      ;; >>    
.Q: IiEncoding DATA=QWORD
    MOV CH,0x73
    JMP IimPSRLW.cc:
 ENDP IimPSRLQ::
</pre>

<dl id="IimPSRAW">
<dt><a href='#IimPSRLD'>&uarr; PSRAW</a></dt>
<dd>Shift Packed Data Right Arithmetic</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PSRAW:PSRAD:PSRAQ.html">PSRAW</a></dd>
<dt>Category</dt>
<dd>mmx,shift</dd>
<dt>Operands</dt>
<dd><b>Nq</b>,Ib | <b>Udq</b>,Ib | <b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0F71 /4 | 0x660F71 /4 | 0x0FE1 /r | 0x660FE1 /r</dd>
<dt>CPU</dt>
<dd>PX+</dd>
</dl><pre>
IimPSRAW:: PROC
    MOV CL,0xE1
    MOV EAX,iiPpgModRMd + 4<<28  ; ModRM /4                                                     ;; >>
    JMP IimPSRLW.W:
 ENDP IimPSRAW::
</pre>

<dl id="IimPSRAD">
<dt><a href='#IimPSRLQ'>&uarr; PSRAD</a></dt>
<dd>Shift Packed Data Right Arithmetic</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PSRAW:PSRAD:PSRAQ.html">PSRAD</a></dd>
<dt>Category</dt>
<dd>mmx,shift</dd>
<dt>Operands</dt>
<dd><b>Nq</b>,Ib | <b>Udq</b>,Ib | <b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0F72 /4 | 0x660F72 /4 | 0x0FE2 /r | 0x660FE2 /r</dd>
<dt>CPU</dt>
<dd>PX+</dd>
</dl><pre>
IimPSRAD:: PROC
    MOV CL,0xE2
    MOV EAX,iiPpgModRMd + 4<<28  ; ModRM /4                                                     ;; >>
    JMP IimPSRLD.D:
 ENDP IimPSRAD::
</pre>

<dl id="IimPSLLW">
<dt><a href='#IimPSRLW'>&uarr; PSLLW</a></dt>
<dd>Shift Packed Data Left Logical</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PSLLW:PSLLD:PSLLQ.html">PSLLW</a></dd>
<dt>Category</dt>
<dd>mmx,shift</dd>
<dt>Operands</dt>
<dd><b>Nq</b>,Ib | <b>Udq</b>,Ib | <b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0F71 /6 | 0x660F71 /6 | 0x0FF1 /r | 0x660FF1 /r</dd>
<dt>CPU</dt>
<dd>PX+</dd>
</dl><pre>
IimPSLLW:: PROC
    MOV CL,0xF1
    MOV EAX,iiPpgModRMd + 6<<28  ; ModRM /6                                                     ;; >>
    JMP IimPSRLW.W:
 ENDP IimPSLLW::
</pre>

<dl id="IimPSLLD">
<dt><a href='#IimPSRLD'>&uarr; PSLLD</a></dt>
<dd>Shift Packed Data Left Logical</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PSLLW:PSLLD:PSLLQ.html">PSLLD</a></dd>
<dt>Category</dt>
<dd>mmx,shift</dd>
<dt>Operands</dt>
<dd><b>Nq</b>,Ib | <b>Udq</b>,Ib | <b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0F72 /6 | 0x660F72 /6 | 0x0FF2 /r | 0x660FF2 /r</dd>
<dt>CPU</dt>
<dd>PX+</dd>
</dl><pre>
IimPSLLD:: PROC
    MOV CL,0xF2
    MOV EAX,iiPpgModRMd + 6<<28  ; ModRM /6                                                     ;; >>
    JMP IimPSRLD.D:
 ENDP IimPSLLD::
</pre>

<dl id="IimPSLLQ">
<dt><a href='#IimPSRLQ'>&uarr; PSLLQ</a></dt>
<dd>Shift Packed Data Left Logical</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PSLLW:PSLLD:PSLLQ.html">PSLLQ</a></dd>
<dt>Category</dt>
<dd>mmx,shift</dd>
<dt>Operands</dt>
<dd><b>Nq</b>,Ib | <b>Udq</b>,Ib | <b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0F73 /6 | 0x660F73 /6 | 0x0FF3 /r | 0x660FF3 /r</dd>
<dt>CPU</dt>
<dd>PX+</dd>
</dl><pre>
IimPSLLQ:: PROC
    MOV CL,0xF3
    MOV EAX,iiPpgModRMd + 6<<28  ; ModRM /6                                                     ;; >>
    JMP IimPSRLQ.Q:
 ENDP IimPSLLQ::
</pre>

<dl id="IimGroupSSE2">
<dt><a href="#IimHandlers">&uarr; <em>IimGroupSSE2</em></a></dt>
<dd>IimGroupSSE2 is a common handler for MMX and SSE2 instructions with format <b>mmx,mmx/mem</b> and
<b>xmm,xmm/mem</b> with two-byte opcode 0x0F.</dd>
<dt>Input</dt>
<dd><b>CL</b> is secondary opcode.
<br/><b>EDI</b> is pointer to <a class='EXT' href='ii.htm#II'>II</a> structure with parsed operands.
<br/><b>EDX</b> has operand types as set by <a class='EXT' href='ii.htm#IiAssemble'>IiAssemble</a>.</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3615.htm">t3615</a>
<a class="EXT" href="../eatests/t3620.htm">t3620</a>
<a class="EXT" href="../eatests/t3625.htm">t3625</a>
<a class="EXT" href="../eatests/t3630.htm">t3630</a>
<a class="EXT" href="../eatests/t3635.htm">t3635</a>
<a class="EXT" href="../eatests/t3640.htm">t3640</a>
</dd>
</dl><pre>
IimGroupSSE2:: PROC
     IiEmitOpcode 0x0F,ECX
     IiOpEn RM
     IiModRM /r
     IiDispatchFormat mmx.mmx, mmx.mem, xmm.xmm, xmm.mem
.xmm.xmm:
.xmm.mem:
     IiRequire SSE2
     IiEmitPrefix OTOGGLE
.mmx.mmx:
.mmx.mem:
     RET
 ENDP IimGroupSSE2::
</pre>

<dl id="IimPUNPCKLBW">
<dt><a href='#IimGroupSSE2'>&uarr; PUNPCKLBW</a></dt>
<dd>Unpack Low Data</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PUNPCKLBW:PUNPCKLWD:PUNPCKLDQ:PUNPCKLQDQ.html">PUNPCKLBW</a></dd>
<dt>Category</dt>
<dd>mmx,unpack</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qd | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0F60 /r | 0x660F60 /r</dd>
<dt>CPU</dt>
<dd>PX+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3615.htm">t3615</a>
</dd>
</dl><pre>
IimPUNPCKLBW:: PROC
    MOV CL,0x60
    JMP IimGroupSSE2
 ENDP IimPUNPCKLBW::
</pre>

<dl id="IimPUNPCKLWD">
<dt><a href='#IimGroupSSE2'>&uarr; PUNPCKLWD</a></dt>
<dd>Unpack Low Data</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PUNPCKLBW:PUNPCKLWD:PUNPCKLDQ:PUNPCKLQDQ.html">PUNPCKLWD</a></dd>
<dt>Category</dt>
<dd>mmx,unpack</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qd | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0F61 /r | 0x660F61 /r</dd>
<dt>CPU</dt>
<dd>PX+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3615.htm">t3615</a>
</dd>
</dl><pre>
IimPUNPCKLWD:: PROC
    MOV CL,0x61
    JMP IimGroupSSE2
 ENDP IimPUNPCKLWD::
</pre>

<dl id="IimPUNPCKLDQ">
<dt><a href='#IimGroupSSE2'>&uarr; PUNPCKLDQ</a></dt>
<dd>Unpack Low Data</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PUNPCKLBW:PUNPCKLWD:PUNPCKLDQ:PUNPCKLQDQ.html">PUNPCKLDQ</a></dd>
<dt>Category</dt>
<dd>mmx,unpack</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qd | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0F62 /r | 0x660F62 /r</dd>
<dt>CPU</dt>
<dd>PX+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3615.htm">t3615</a>
</dd>
</dl><pre>
IimPUNPCKLDQ:: PROC
    MOV CL,0x62
    JMP IimGroupSSE2
 ENDP IimPUNPCKLDQ::
</pre>

<dl id="IimPACKSSWB">
<dt><a href='#IimGroupSSE2'>&uarr; PACKSSWB</a></dt>
<dd>Pack with Signed Saturation</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PACKSSWB:PACKSSDW.html">PACKSSWB</a></dd>
<dt>Category</dt>
<dd>mmx,conver</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qd | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0F63 /r | 0x660F63 /r</dd>
<dt>CPU</dt>
<dd>PX+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3615.htm">t3615</a>
</dd>
</dl><pre>
IimPACKSSWB:: PROC
    MOV CL,0x63
    JMP IimGroupSSE2
 ENDP IimPACKSSWB::
</pre>

<dl id="IimPCMPGTB">
<dt><a href='#IimGroupSSE2'>&uarr; PCMPGTB</a></dt>
<dd>Compare Packed Signed Integers for Greater Than</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PCMPGTB:PCMPGTW:PCMPGTD.html">PCMPGTB</a></dd>
<dt>Category</dt>
<dd>mmx,compar</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qd | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0F64 /r | 0x660F64 /r</dd>
<dt>CPU</dt>
<dd>PX+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3615.htm">t3615</a>
</dd>
</dl><pre>
IimPCMPGTB:: PROC
    MOV CL,0x64
    JMP IimGroupSSE2
 ENDP IimPCMPGTB::
</pre>

<dl id="IimPCMPGTW">
<dt><a href='#IimGroupSSE2'>&uarr; PCMPGTW</a></dt>
<dd>Compare Packed Signed Integers for Greater Than</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PCMPGTB:PCMPGTW:PCMPGTD.html">PCMPGTW</a></dd>
<dt>Category</dt>
<dd>mmx,compar</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qd | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0F65 /r | 0x660F65 /r</dd>
<dt>CPU</dt>
<dd>PX+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3615.htm">t3615</a>
</dd>
</dl><pre>
IimPCMPGTW:: PROC
    MOV CL,0x65
    JMP IimGroupSSE2
 ENDP IimPCMPGTW::
</pre>

<dl id="IimPCMPGTD">
<dt><a href='#IimGroupSSE2'>&uarr; PCMPGTD</a></dt>
<dd>Compare Packed Signed Integers for Greater Than</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PCMPGTB:PCMPGTW:PCMPGTD.html">PCMPGTD</a></dd>
<dt>Category</dt>
<dd>mmx,compar</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qd | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0F66 /r | 0x660F66 /r</dd>
<dt>CPU</dt>
<dd>PX+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3615.htm">t3615</a>
</dd>
</dl><pre>
IimPCMPGTD:: PROC
    MOV CL,0x66
    JMP IimGroupSSE2
 ENDP IimPCMPGTD::
</pre>

<dl id="IimPACKUSWB">
<dt><a href='#IimGroupSSE2'>&uarr; PACKUSWB</a></dt>
<dd>Pack with Unsigned Saturation</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PACKUSWB.html">PACKUSWB</a></dd>
<dt>Category</dt>
<dd>mmx,conver</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0F67 /r | 0x660F67 /r</dd>
<dt>CPU</dt>
<dd>PX+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3615.htm">t3615</a>
</dd>
</dl><pre>
IimPACKUSWB:: PROC
    MOV CL,0x67
    JMP IimGroupSSE2
 ENDP IimPACKUSWB::
</pre>

<dl id="IimPUNPCKHBW">
<dt><a href='#IimGroupSSE2'>&uarr; PUNPCKHBW</a></dt>
<dd>Unpack High Data</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PUNPCKHBW:PUNPCKHWD:PUNPCKHDQ:PUNPCKHQDQ.html">PUNPCKHBW</a></dd>
<dt>Category</dt>
<dd>mmx,unpack</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0F68 /r | 0x660F68 /r</dd>
<dt>CPU</dt>
<dd>PX+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3620.htm">t3620</a>
</dd>
</dl><pre>
IimPUNPCKHBW:: PROC
    MOV CL,0x68
    JMP IimGroupSSE2
 ENDP IimPUNPCKHBW::
</pre>

<dl id="IimPUNPCKHWD">
<dt><a href='#IimGroupSSE2'>&uarr; PUNPCKHWD</a></dt>
<dd>Unpack High Data</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PUNPCKHBW:PUNPCKHWD:PUNPCKHDQ:PUNPCKHQDQ.html">PUNPCKHWD</a></dd>
<dt>Category</dt>
<dd>mmx,unpack</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0F69 /r | 0x660F69 /r</dd>
<dt>CPU</dt>
<dd>PX+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3620.htm">t3620</a>
</dd>
</dl><pre>
IimPUNPCKHWD:: PROC
    MOV CL,0x69
    JMP IimGroupSSE2
 ENDP IimPUNPCKHWD::
</pre>

<dl id="IimPUNPCKHDQ">
<dt><a href='#IimGroupSSE2'>&uarr; PUNPCKHDQ</a></dt>
<dd>Unpack High Data</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PUNPCKHBW:PUNPCKHWD:PUNPCKHDQ:PUNPCKHQDQ.html">PUNPCKHDQ</a></dd>
<dt>Category</dt>
<dd>mmx,unpack</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0F6A /r | 0x660F6A /r</dd>
<dt>CPU</dt>
<dd>PX+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3620.htm">t3620</a>
</dd>
</dl><pre>
IimPUNPCKHDQ:: PROC
    MOV CL,0x6A
    JMP IimGroupSSE2
 ENDP IimPUNPCKHDQ::
</pre>

<dl id="IimPACKSSDW">
<dt><a href='#IimGroupSSE2'>&uarr; PACKSSDW</a></dt>
<dd>Pack with Signed Saturation</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PACKSSWB:PACKSSDW.html">PACKSSDW</a></dd>
<dt>Category</dt>
<dd>mmx,conver</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0F6B /r | 0x660F6B /r</dd>
<dt>CPU</dt>
<dd>PX+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3620.htm">t3620</a>
</dd>
</dl><pre>
IimPACKSSDW:: PROC
    MOV CL,0x6B
    JMP IimGroupSSE2
 ENDP IimPACKSSDW::
</pre>

<dl id="IimPCMPEQB">
<dt><a href='#IimGroupSSE2'>&uarr; PCMPEQB</a></dt>
<dd>Compare Packed Data for Equal</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PCMPEQB:PCMPEQW:PCMPEQD.html">PCMPEQB</a></dd>
<dt>Category</dt>
<dd>mmx,compar</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0F74 /r | 0x660F74 /r</dd>
<dt>CPU</dt>
<dd>PX+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3620.htm">t3620</a>
</dd>
</dl><pre>
IimPCMPEQB:: PROC
    MOV CL,0x74
    JMP IimGroupSSE2
 ENDP IimPCMPEQB::
</pre>

<dl id="IimPCMPEQW">
<dt><a href='#IimGroupSSE2'>&uarr; PCMPEQW</a></dt>
<dd>Compare Packed Data for Equal</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PCMPEQB:PCMPEQW:PCMPEQD.html">PCMPEQW</a></dd>
<dt>Category</dt>
<dd>mmx,compar</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0F75 /r | 0x660F75 /r</dd>
<dt>CPU</dt>
<dd>PX+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3620.htm">t3620</a>
</dd>
</dl><pre>
IimPCMPEQW:: PROC
    MOV CL,0x75
    JMP IimGroupSSE2
 ENDP IimPCMPEQW::
</pre>

<dl id="IimPCMPEQD">
<dt><a href='#IimGroupSSE2'>&uarr; PCMPEQD</a></dt>
<dd>Compare Packed Data for Equal</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PCMPEQB:PCMPEQW:PCMPEQD.html">PCMPEQD</a></dd>
<dt>Category</dt>
<dd>mmx,compar</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0F76 /r | 0x660F76 /r</dd>
<dt>CPU</dt>
<dd>PX+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3620.htm">t3620</a>
</dd>
</dl><pre>
IimPCMPEQD:: PROC
    MOV CL,0x76
    JMP IimGroupSSE2
 ENDP IimPCMPEQD::
</pre>

<dl id="IimPADDQ">
<dt><a href='#IimGroupSSE2'>&uarr; PADDQ</a></dt>
<dd>Add Packed Quadword Integers</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PADDB:PADDW:PADDD:PADDQ.html">PADDQ</a></dd>
<dt>Category</dt>
<dd>sse2,simdint,arith</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0FD4 /r | 0x660FD4 /r</dd>
<dt>CPU</dt>
<dd>PX+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3620.htm">t3620</a>
</dd>
</dl><pre>
IimPADDQ:: PROC
    MOV CL,0xD4
    JMP IimGroupSSE2
 ENDP IimPADDQ::
</pre>

<dl id="IimPMULLW">
<dt><a href='#IimGroupSSE2'>&uarr; PMULLW</a></dt>
<dd>Multiply Packed Signed Integers and Store Low Result</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PMULLW.html">PMULLW</a></dd>
<dt>Category</dt>
<dd>mmx,arith</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0FD5 /r | 0x660FD5 /r</dd>
<dt>CPU</dt>
<dd>PX+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3625.htm">t3625</a>
</dd>
</dl><pre>
IimPMULLW:: PROC
    MOV CL,0xD5
    JMP IimGroupSSE2
 ENDP IimPMULLW::
</pre>

<dl id="IimPSUBUSB">
<dt><a href='#IimGroupSSE2'>&uarr; PSUBUSB</a></dt>
<dd>Subtract Packed Unsigned Integers with Unsigned Saturation</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PSUBUSB:PSUBUSW.html">PSUBUSB</a></dd>
<dt>Category</dt>
<dd>mmx,arith</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0FD8 /r | 0x660FD8 /r</dd>
<dt>CPU</dt>
<dd>PX+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3625.htm">t3625</a>
</dd>
</dl><pre>
IimPSUBUSB:: PROC
    MOV CL,0xD8
    JMP IimGroupSSE2
 ENDP IimPSUBUSB::
</pre>

<dl id="IimPSUBUSW">
<dt><a href='#IimGroupSSE2'>&uarr; PSUBUSW</a></dt>
<dd>Subtract Packed Unsigned Integers with Unsigned Saturation</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PSUBUSB:PSUBUSW.html">PSUBUSW</a></dd>
<dt>Category</dt>
<dd>mmx,arith</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0FD9 /r | 0x660FD9 /r</dd>
<dt>CPU</dt>
<dd>PX+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3625.htm">t3625</a>
</dd>
</dl><pre>
IimPSUBUSW:: PROC
    MOV CL,0xD9
    JMP IimGroupSSE2
 ENDP IimPSUBUSW::
</pre>

<dl id="IimPMINUB">
<dt><a href='#IimGroupSSE2'>&uarr; PMINUB</a></dt>
<dd>Minimum of Packed Unsigned Byte Integers</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PMINUB:PMINUW.html">PMINUB</a></dd>
<dt>Category</dt>
<dd>sse1,simdint</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0FDA /r | 0x660FDA /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3625.htm">t3625</a>
</dd>
</dl><pre>
IimPMINUB:: PROC
    MOV CL,0xDA
    JMP IimGroupSSE2
 ENDP IimPMINUB::
</pre>

<dl id="IimPAND">
<dt><a href='#IimGroupSSE2'>&uarr; PAND</a></dt>
<dd>Logical AND</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PAND.html">PAND</a></dd>
<dt>Category</dt>
<dd>mmx,logical</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qd | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0FDB /r | 0x660FDB /r</dd>
<dt>CPU</dt>
<dd>PX+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3625.htm">t3625</a>
</dd>
</dl><pre>
IimPAND:: PROC
    MOV CL,0xDB
    JMP IimGroupSSE2
 ENDP IimPAND::
</pre>

<dl id="IimPADDUSB">
<dt><a href='#IimGroupSSE2'>&uarr; PADDUSB</a></dt>
<dd>Add Packed Unsigned Integers with Unsigned Saturation</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PADDUSB:PADDUSW.html">PADDUSB</a></dd>
<dt>Category</dt>
<dd>mmx,arith</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0FDC /r | 0x660FDC /r</dd>
<dt>CPU</dt>
<dd>PX+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3625.htm">t3625</a>
</dd>
</dl><pre>
IimPADDUSB:: PROC
    MOV CL,0xDC
    JMP IimGroupSSE2
 ENDP IimPADDUSB::
</pre>

<dl id="IimPADDUSW">
<dt><a href='#IimGroupSSE2'>&uarr; PADDUSW</a></dt>
<dd>Add Packed Unsigned Integers with Unsigned Saturation</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PADDUSB:PADDUSW.html">PADDUSW</a></dd>
<dt>Category</dt>
<dd>mmx,arith</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0FDD /r | 0x660FDD /r</dd>
<dt>CPU</dt>
<dd>PX+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3625.htm">t3625</a>
</dd>
</dl><pre>
IimPADDUSW:: PROC
    MOV CL,0xDD
    JMP IimGroupSSE2
 ENDP IimPADDUSW::
</pre>

<dl id="IimPMAXUB">
<dt><a href='#IimGroupSSE2'>&uarr; PMAXUB</a></dt>
<dd>Maximum of Packed Unsigned Byte Integers</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PMAXUB:PMAXUW.html">PMAXUB</a></dd>
<dt>Category</dt>
<dd>sse1,simdint</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0FDE /r | 0x660FDE /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3625.htm">t3625</a>
</dd>
</dl><pre>
IimPMAXUB:: PROC
    MOV CL,0xDE
    JMP IimGroupSSE2
 ENDP IimPMAXUB::
</pre>

<dl id="IimPANDN">
<dt><a href='#IimGroupSSE2'>&uarr; PANDN</a></dt>
<dd>Logical AND NOT</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PANDN.html">PANDN</a></dd>
<dt>Category</dt>
<dd>mmx,logical</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0FDF /r | 0x660FDF /r</dd>
<dt>CPU</dt>
<dd>PX+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3630.htm">t3630</a>
</dd>
</dl><pre>
IimPANDN:: PROC
    MOV CL,0xDF
    JMP IimGroupSSE2
 ENDP IimPANDN::
</pre>

<dl id="IimPAVGB">
<dt><a href='#IimGroupSSE2'>&uarr; PAVGB</a></dt>
<dd>Average Packed Integers</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PAVGB:PAVGW.html">PAVGB</a></dd>
<dt>Category</dt>
<dd>sse1,simdint</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0FE0 /r | 0x660FE0 /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3630.htm">t3630</a>
</dd>
</dl><pre>
IimPAVGB:: PROC
    MOV CL,0xE0
    JMP IimGroupSSE2
 ENDP IimPAVGB::
</pre>

<dl id="IimPAVGW">
<dt><a href='#IimGroupSSE2'>&uarr; PAVGW</a></dt>
<dd>Average Packed Integers</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PAVGB:PAVGW.html">PAVGW</a></dd>
<dt>Category</dt>
<dd>sse1,simdint</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0FE3 /r | 0x660FE3 /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3630.htm">t3630</a>
</dd>
</dl><pre>
IimPAVGW:: PROC
    MOV CL,0xE3
    JMP IimGroupSSE2
 ENDP IimPAVGW::
</pre>

<dl id="IimPMULHUW">
<dt><a href='#IimGroupSSE2'>&uarr; PMULHUW</a></dt>
<dd>Multiply Packed Unsigned Integers and Store High Result</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PMULHUW.html">PMULHUW</a></dd>
<dt>Category</dt>
<dd>sse1,simdint</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0FE4 /r | 0x660FE4 /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3630.htm">t3630</a>
</dd>
</dl><pre>
IimPMULHUW:: PROC
    MOV CL,0xE4
    JMP IimGroupSSE2
 ENDP IimPMULHUW::
</pre>

<dl id="IimPMULHW">
<dt><a href='#IimGroupSSE2'>&uarr; PMULHW</a></dt>
<dd>Multiply Packed Signed Integers and Store High Result</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PMULHW.html">PMULHW</a></dd>
<dt>Category</dt>
<dd>mmx,arith</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0FE5 /r | 0x660FE5 /r</dd>
<dt>CPU</dt>
<dd>PX+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3630.htm">t3630</a>
</dd>
</dl><pre>
IimPMULHW:: PROC
    MOV CL,0xE5
    JMP IimGroupSSE2
 ENDP IimPMULHW::
</pre>

<dl id="IimPSUBSB">
<dt><a href='#IimGroupSSE2'>&uarr; PSUBSB</a></dt>
<dd>Subtract Packed Signed Integers with Signed Saturation</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PSUBSB:PSUBSW.html">PSUBSB</a></dd>
<dt>Category</dt>
<dd>mmx,arith</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0FE8 /r | 0x660FE8 /r</dd>
<dt>CPU</dt>
<dd>PX+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3630.htm">t3630</a>
</dd>
</dl><pre>
IimPSUBSB:: PROC
    MOV CL,0xE8
    JMP IimGroupSSE2
 ENDP IimPSUBSB::
</pre>

<dl id="IimPSUBSW">
<dt><a href='#IimGroupSSE2'>&uarr; PSUBSW</a></dt>
<dd>Subtract Packed Signed Integers with Signed Saturation</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PSUBSB:PSUBSW.html">PSUBSW</a></dd>
<dt>Category</dt>
<dd>mmx,arith</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0FE9 /r | 0x660FE9 /r</dd>
<dt>CPU</dt>
<dd>PX+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3630.htm">t3630</a>
</dd>
</dl><pre>
IimPSUBSW:: PROC
    MOV CL,0xE9
    JMP IimGroupSSE2
 ENDP IimPSUBSW::
</pre>

<dl id="IimPMINSW">
<dt><a href='#IimGroupSSE2'>&uarr; PMINSW</a></dt>
<dd>Minimum of Packed Signed Word Integers</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PMINSB:PMINSW.html">PMINSW</a></dd>
<dt>Category</dt>
<dd>sse1,simdint</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0FEA /r | 0x660FEA /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3630.htm">t3630</a>
</dd>
</dl><pre>
IimPMINSW:: PROC
    MOV CL,0xEA
    JMP IimGroupSSE2
 ENDP IimPMINSW::
</pre>

<dl id="IimPOR">
<dt><a href='#IimGroupSSE2'>&uarr; POR</a></dt>
<dd>Bitwise Logical OR</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/POR.html">POR</a></dd>
<dt>Category</dt>
<dd>mmx,logical</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0FEB /r | 0x660FEB /r</dd>
<dt>CPU</dt>
<dd>PX+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3635.htm">t3635</a>
</dd>
</dl><pre>
IimPOR:: PROC
    MOV CL,0xEB
    JMP IimGroupSSE2
 ENDP IimPOR::
</pre>

<dl id="IimPADDSB">
<dt><a href='#IimGroupSSE2'>&uarr; PADDSB</a></dt>
<dd>Add Packed Signed Integers with Signed Saturation</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PADDSB:PADDSW.html">PADDSB</a></dd>
<dt>Category</dt>
<dd>mmx,arith</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0FEC /r | 0x660FEC /r</dd>
<dt>CPU</dt>
<dd>PX+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3635.htm">t3635</a>
</dd>
</dl><pre>
IimPADDSB:: PROC
    MOV CL,0xEC
    JMP IimGroupSSE2
 ENDP IimPADDSB::
</pre>

<dl id="IimPADDSW">
<dt><a href='#IimGroupSSE2'>&uarr; PADDSW</a></dt>
<dd>Add Packed Signed Integers with Signed Saturation</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PADDSB:PADDSW.html">PADDSW</a></dd>
<dt>Category</dt>
<dd>mmx,arith</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0FED /r | 0x660FED /r</dd>
<dt>CPU</dt>
<dd>PX+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3635.htm">t3635</a>
</dd>
</dl><pre>
IimPADDSW:: PROC
    MOV CL,0xED
    JMP IimGroupSSE2
 ENDP IimPADDSW::
</pre>

<dl id="IimPMAXSW">
<dt><a href='#IimGroupSSE2'>&uarr; PMAXSW</a></dt>
<dd>Maximum of Packed Signed Word Integers</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PMAXSB:PMAXSW:PMAXSD:PMAXSQ.html">PMAXSW</a></dd>
<dt>Category</dt>
<dd>sse1,simdint</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0FEE /r | 0x660FEE /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3635.htm">t3635</a>
</dd>
</dl><pre>
IimPMAXSW:: PROC
    MOV CL,0xEE
    JMP IimGroupSSE2
 ENDP IimPMAXSW::
</pre>

<dl id="IimPXOR">
<dt><a href='#IimGroupSSE2'>&uarr; PXOR</a></dt>
<dd>Logical Exclusive OR</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PXOR.html">PXOR</a></dd>
<dt>Category</dt>
<dd>mmx,logical</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0FEF /r | 0x660FEF /r</dd>
<dt>CPU</dt>
<dd>PX+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3635.htm">t3635</a>
</dd>
</dl><pre>
IimPXOR:: PROC
    MOV CL,0xEF
    JMP IimGroupSSE2
 ENDP IimPXOR::
</pre>

<dl id="IimPMULUDQ">
<dt><a href='#IimGroupSSE2'>&uarr; PMULUDQ</a></dt>
<dd>Multiply Packed Unsigned DW Integers</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PMULUDQ.html">PMULUDQ</a></dd>
<dt>Category</dt>
<dd>sse2,simdint,arith</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0FF4 /r | 0x660FF4 /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3635.htm">t3635</a>
</dd>
</dl><pre>
IimPMULUDQ:: PROC
    MOV CL,0xF4
    JMP IimGroupSSE2
 ENDP IimPMULUDQ::
</pre>

<dl id="IimPMADDWD">
<dt><a href='#IimGroupSSE2'>&uarr; PMADDWD</a></dt>
<dd>Multiply and Add Packed Integers</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PMADDWD.html">PMADDWD</a></dd>
<dt>Category</dt>
<dd>mmx,arith</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qd | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0FF5 /r | 0x660FF5 /r</dd>
<dt>CPU</dt>
<dd>PX+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3635.htm">t3635</a>
</dd>
</dl><pre>
IimPMADDWD:: PROC
    MOV CL,0xF5
    JMP IimGroupSSE2
 ENDP IimPMADDWD::
</pre>

<dl id="IimPSADBW">
<dt><a href='#IimGroupSSE2'>&uarr; PSADBW</a></dt>
<dd>Compute Sum of Absolute Differences</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PSADBW.html">PSADBW</a></dd>
<dt>Category</dt>
<dd>sse1,simdint</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0FF6 /r | 0x660FF6 /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3635.htm">t3635</a>
</dd>
</dl><pre>
IimPSADBW:: PROC
    MOV CL,0xF6
    JMP IimGroupSSE2
 ENDP IimPSADBW::
</pre>

<dl id="IimPSUBB">
<dt><a href='#IimGroupSSE2'>&uarr; PSUBB</a></dt>
<dd>Subtract Packed Integers</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PSUBB:PSUBW:PSUBD.html">PSUBB</a></dd>
<dt>Category</dt>
<dd>mmx,arith</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0FF8 /r | 0x660FF8 /r</dd>
<dt>CPU</dt>
<dd>PX+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3640.htm">t3640</a>
</dd>
</dl><pre>
IimPSUBB:: PROC
    MOV CL,0xF8
    JMP IimGroupSSE2
 ENDP IimPSUBB::
</pre>

<dl id="IimPSUBW">
<dt><a href='#IimGroupSSE2'>&uarr; PSUBW</a></dt>
<dd>Subtract Packed Integers</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PSUBB:PSUBW:PSUBD.html">PSUBW</a></dd>
<dt>Category</dt>
<dd>mmx,arith</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0FF9 /r | 0x660FF9 /r</dd>
<dt>CPU</dt>
<dd>PX+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3640.htm">t3640</a>
</dd>
</dl><pre>
IimPSUBW:: PROC
    MOV CL,0xF9
    JMP IimGroupSSE2
 ENDP IimPSUBW::
</pre>

<dl id="IimPSUBD">
<dt><a href='#IimGroupSSE2'>&uarr; PSUBD</a></dt>
<dd>Subtract Packed Integers</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PSUBB:PSUBW:PSUBD.html">PSUBD</a></dd>
<dt>Category</dt>
<dd>mmx,arith</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0FFA /r | 0x660FFA /r</dd>
<dt>CPU</dt>
<dd>PX+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3640.htm">t3640</a>
</dd>
</dl><pre>
IimPSUBD:: PROC
    MOV CL,0xFA
    JMP IimGroupSSE2
 ENDP IimPSUBD::
</pre>

<dl id="IimPSUBQ">
<dt><a href='#IimGroupSSE2'>&uarr; PSUBQ</a></dt>
<dd>Subtract Packed Quadword Integers</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PSUBQ.html">PSUBQ</a></dd>
<dt>Category</dt>
<dd>sse2,simdint,arith</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0FFB /r | 0x660FFB /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3640.htm">t3640</a>
</dd>
</dl><pre>
IimPSUBQ:: PROC
    MOV CL,0xFB
    JMP IimGroupSSE2
 ENDP IimPSUBQ::
</pre>

<dl id="IimPADDB">
<dt><a href='#IimGroupSSE2'>&uarr; PADDB</a></dt>
<dd>Add Packed Integers</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PADDB:PADDW:PADDD:PADDQ.html">PADDB</a></dd>
<dt>Category</dt>
<dd>mmx,arith</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0FFC /r | 0x660FFC /r</dd>
<dt>CPU</dt>
<dd>PX+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3640.htm">t3640</a>
</dd>
</dl><pre>
IimPADDB:: PROC
    MOV CL,0xFC
    JMP IimGroupSSE2
 ENDP IimPADDB::
</pre>

<dl id="IimPADDW">
<dt><a href='#IimGroupSSE2'>&uarr; PADDW</a></dt>
<dd>Add Packed Integers</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PADDB:PADDW:PADDD:PADDQ.html">PADDW</a></dd>
<dt>Category</dt>
<dd>mmx,arith</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0FFD /r | 0x660FFD /r</dd>
<dt>CPU</dt>
<dd>PX+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3640.htm">t3640</a>
</dd>
</dl><pre>
IimPADDW:: PROC
    MOV CL,0xFD
    JMP IimGroupSSE2
 ENDP IimPADDW::
</pre>

<dl id="IimPADDD">
<dt><a href='#IimGroupSSE2'>&uarr; PADDD</a></dt>
<dd>Add Packed Integers</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PADDB:PADDW:PADDD:PADDQ.html">PADDD</a></dd>
<dt>Category</dt>
<dd>mmx,arith</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0FFE /r | 0x660FFE /r</dd>
<dt>CPU</dt>
<dd>PX+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3640.htm">t3640</a>
</dd>
</dl><pre>
IimPADDD:: PROC
    MOV CL,0xFE
    JMP IimGroupSSE2
 ENDP IimPADDD::
</pre>

<dl id="IimEMMS">
<dt><a href='#IimHandlers'>&uarr; EMMS</a></dt>
<dd>Empty MMX Technology State</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/EMMS.html">EMMS</a></dd>
<dt>Category</dt>
<dd>mmx,x87fpu,control</dd>
<dt>Opcode</dt>
<dd>0x0F77</dd>
<dt>CPU</dt>
<dd>PX+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3645.htm">t3645</a>
</dd>
</dl><pre>
IimEMMS:: PROC
    IiRequire MMX,FPU
    IiEmitOpcode 0x0F,0x77
    IiDispatchFormat none
.none:RET
 ENDP IimEMMS::
</pre>

<dl id="IimMASKMOVQ">
<dt><a href='#IimHandlers'>&uarr; MASKMOVQ</a></dt>
<dd>Store Selected Bytes of Quadword</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/MASKMOVQ.html">MASKMOVQ</a></dd>
<dt>Category</dt>
<dd>sse1,cachect</dd>
<dt>Operands</dt>
<dd><b><i><span title="nr: -, group: -, type: q, address: BD">BDq</span></i></b>,<b>Pq</b>,Nq</dd>
<dt>Opcode</dt>
<dd>0x0FF7 /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_MASKMOVQ_0FF7"><sup>40</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3645.htm">t3645</a>
</dd>
</dl><pre>
IimMASKMOVQ:: PROC
    IiEmitOpcode 0x0F,0xF7
    IiDispatchFormat mmx.mmx, mem.mmx.mmx
.mem.mmx.mmx:
    IiStringDestination Operand1, AllowSeg=YES
    IiSwap Operand1,Operand2 ; Get rid of Operand1.
    IiSwap Operand2,Operand3
.mmx.mmx:
    IiOpEn RM
    IiModRM /r
    RET
 ENDP IimMASKMOVQ::
</pre>

<dl id="IimMOVNTQ">
<dt><a href='#IimHandlers'>&uarr; MOVNTQ </a></dt>
<dd>Store of Quadword Using Non-Temporal Hint</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/MOVNTQ.html">MOVNTQ</a></dd>
<dt>Operands</dt>
<dd>m64,mm</dd>
<dt>Opcode</dt>
<dd>0F E7 /r</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3645.htm">t3645</a>
</dd>
</dl><pre>
IimMOVNTQ:: PROC
    IiRequire 686,SSE1
    IiEmitOpcode 0x0F,0xE7
    IiOpEn MR
    IiModRM /r
    IiDispatchFormat mem.mmx
.mem.mmx:RET
 ENDP IimMOVNTQ::
</pre>

<dl id="IimPINSRW">
<dt><a href='#IimHandlers'>&uarr; PINSRW</a></dt>
<dd>Insert Word</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PINSRW.html">PINSRW</a></dd>
<dt>Category</dt>
<dd>sse1,simdint</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Rdqp,Ib | <b>Pq</b>,Mw,Ib | <b>Vdq</b>,Rdqp,Ib | <b>Vdq</b>,Mw,Ib</dd>
<dt>Opcode</dt>
<dd>0x0FC4 /r | 0x0FC4 /r | 0x660FC4 /r | 0x660FC4 /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3645.htm">t3645</a>
<a class="EXT" href="../eatests/t3730.htm">t3730</a>
</dd>
</dl><pre>
IimPINSRW:: PROC
    IiEmitOpcode 0x0F,0xC4
    IiOpEn RM
    IiModRM /r
    IiEmitImm Operand3,BYTE
    IiDispatchFormat xmm.r16.imm, xmm.r32.imm, xmm.r64.imm, xmm.mem.imm, \
                     mmx.r16.imm, mmx.r32.imm, mmx.r64.imm, mmx.mem.imm
.xmm.r16.imm:
.xmm.r32.imm:
.xmm.r64.imm:
.xmm.mem.imm:
    IiRequire SSE2
    IiEmitPrefix OTOGGLE
.mmx.r16.imm:
.mmx.r32.imm:
.mmx.r64.imm:
.mmx.mem.imm:
    RET
 ENDP IimPINSRW::
</pre>

<dl id="IimPMOVMSKB">
<dt><a href='#IimHandlers'>&uarr; PMOVMSKB</a></dt>
<dd>Move Byte Mask</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PMOVMSKB.html">PMOVMSKB</a></dd>
<dt>Category</dt>
<dd>sse1,simdint</dd>
<dt>Operands</dt>
<dd><b>Gdqp</b>,Nq | <b>Gdqp</b>,Udq</dd>
<dt>Opcode</dt>
<dd>0x0FD7 /r | 0x660FD7 /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3645.htm">t3645</a>
</dd>
</dl><pre>
IimPMOVMSKB:: PROC
    IiRequire 686,SSE
    IiEmitOpcode 0x0F,0xD7
    IiOpEn RM
    IiModRM /r
    IiDispatchFormat r32.mmx, r32.xmm
.r32.xmm:
    IiEmitPrefix OTOGGLE
.r32.mmx:
    RET
 ENDP IimPMOVMSKB::
</pre>

<dl id="IimPSHUFW">
<dt><a href='#IimHandlers'>&uarr; PSHUFW</a></dt>
<dd>Shuffle Packed Words</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PSHUFW.html">PSHUFW</a></dd>
<dt>Category</dt>
<dd>sse1,simdint</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq,Ib</dd>
<dt>Opcode</dt>
<dd>0x0F70 /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3645.htm">t3645</a>
</dd>
</dl><pre>
IimPSHUFW:: PROC
    IiRequire 686,SSE
    IiEmitOpcode 0x0F,0x70
    IiOpEn RM
    IiModRM /r
    IiEmitImm Operand3,BYTE
    IiDispatchFormat mmx.mmx.imm, mmx.mem.imm
.mmx.mem.imm:
.mmx.mmx.imm:
    RET
 ENDP IimPSHUFW::
</pre>

<dl id="IimPALIGNR">
<dt><a href='#IimHandlers'>&uarr; PALIGNR</a></dt>
<dd>Packed Align Right</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PALIGNR.html">PALIGNR</a></dd>
<dt>Category</dt>
<dd>ssse3,simdint</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0F3A0F /r | 0x660F3A0F /r</dd>
<dt>CPU</dt>
<dd>C2+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3600.htm">t3600</a>
</dd>
</dl><pre>
IimPALIGNR:: PROC
    IiRequire SSSE3
    IiEmitOpcode 0x0F,0x3A,0x0F
    IiOpEn RM
    IiModRM /r
    IiEmitImm Operand3,BYTE
    IiDispatchFormat mmx.mmx.imm, mmx.mem.imm, xmm.xmm.imm, xmm.mem.imm
.xmm.xmm.imm:
.xmm.mem.imm:
    IiEmitPrefix OTOGGLE
.mmx.mmx.imm:
.mmx.mem.imm:
    RET
 ENDP IimPALIGNR::
</pre>

<dl id="IimGroupSSE3">
<dt><a href="#IimHandlers">&uarr; <em>IimGroupSSE3</em></a></dt>
<dd>IimGroupSSE3 is a common handler for MMX and SSE instructions with format <b>mmx,mmx/mem</b> and
<b>xmm,xmm/mem</b> with three-byte opcode 0x0F,0x38,CL.</dd>
<dt>Input</dt>
<dd><b>CL</b> is tertiary opcode.
<br/><b>EDI</b> is pointer to <a class='EXT' href='ii.htm#II'>II</a> structure with parsed operands.
<br/><b>EDX</b> has operand types as set by <a class='EXT' href='ii.htm#IiAssemble'>IiAssemble</a>.</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3650.htm">t3650</a>
<a class="EXT" href="../eatests/t3655.htm">t3655</a>
</dd>
</dl><pre>
IimGroupSSE3:: PROC
     IiRequire SSSE3
     IiEmitOpcode 0x0F,0x38,ECX
     IiOpEn RM
     IiModRM /r
     IiDispatchFormat mmx.mmx, mmx.mem, xmm.xmm, xmm.mem
.xmm.xmm:
.xmm.mem:
     IiEmitPrefix OTOGGLE
.mmx.mmx:
.mmx.mem:
     RET
 ENDP IimGroupSSE3::
</pre>

<dl id="IimPSHUFB">
<dt><a href='#IimGroupSSE3'>&uarr; PSHUFB</a></dt>
<dd>Packed Shuffle Bytes</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PSHUFB.html">PSHUFB</a></dd>
<dt>Category</dt>
<dd>ssse3,simdint</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0F3800 /r | 0x660F3800 /r</dd>
<dt>CPU</dt>
<dd>C2+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3650.htm">t3650</a>
</dd>
</dl><pre>
IimPSHUFB:: PROC
    MOV CL,0x00
    JMP IimGroupSSE3:
 ENDP IimPSHUFB::
</pre>

<dl id="IimPHADDW">
<dt><a href='#IimGroupSSE3'>&uarr; PHADDW</a></dt>
<dd>Packed Horizontal Add</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PHADDW:PHADDD.html">PHADDW</a></dd>
<dt>Category</dt>
<dd>ssse3,simdint</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0F3801 /r | 0x660F3801 /r</dd>
<dt>CPU</dt>
<dd>C2+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3650.htm">t3650</a>
</dd>
</dl><pre>
IimPHADDW:: PROC
    MOV CL,0x01
    JMP IimGroupSSE3:
 ENDP IimPHADDW::
</pre>

<dl id="IimPHADDD">
<dt><a href='#IimGroupSSE3'>&uarr; PHADDD</a></dt>
<dd>Packed Horizontal Add</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PHADDW:PHADDD.html">PHADDD</a></dd>
<dt>Category</dt>
<dd>ssse3,simdint</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0F3802 /r | 0x660F3802 /r</dd>
<dt>CPU</dt>
<dd>C2+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3650.htm">t3650</a>
</dd>
</dl><pre>
IimPHADDD:: PROC
    MOV CL,0x02
    JMP IimGroupSSE3:
 ENDP IimPHADDD::
</pre>

<dl id="IimPHADDSW">
<dt><a href='#IimGroupSSE3'>&uarr; PHADDSW</a></dt>
<dd>Packed Horizontal Add and Saturate</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PHADDSW.html">PHADDSW</a></dd>
<dt>Category</dt>
<dd>ssse3,simdint</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0F3803 /r | 0x660F3803 /r</dd>
<dt>CPU</dt>
<dd>C2+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3650.htm">t3650</a>
</dd>
</dl><pre>
IimPHADDSW:: PROC
    MOV CL,0x03
    JMP IimGroupSSE3:
 ENDP IimPHADDSW::
</pre>

<dl id="IimPMADDUBSW">
<dt><a href='#IimGroupSSE3'>&uarr; PMADDUBSW</a></dt>
<dd>Multiply and Add Packed Signed and Unsigned Bytes</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PMADDUBSW.html">PMADDUBSW</a></dd>
<dt>Category</dt>
<dd>ssse3,simdint</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0F3804 /r | 0x660F3804 /r</dd>
<dt>CPU</dt>
<dd>C2+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3650.htm">t3650</a>
</dd>
</dl><pre>
IimPMADDUBSW:: PROC
    MOV CL,0x04
    JMP IimGroupSSE3:
 ENDP IimPMADDUBSW::
</pre>

<dl id="IimPHSUBW">
<dt><a href='#IimGroupSSE3'>&uarr; PHSUBW</a></dt>
<dd>Packed Horizontal Subtract</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PHSUBW:PHSUBD.html">PHSUBW</a></dd>
<dt>Category</dt>
<dd>ssse3,simdint</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0F3805 /r | 0x660F3805 /r</dd>
<dt>CPU</dt>
<dd>C2+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3650.htm">t3650</a>
</dd>
</dl><pre>
IimPHSUBW:: PROC
    MOV CL,0x05
    JMP IimGroupSSE3:
 ENDP IimPHSUBW::
</pre>

<dl id="IimPHSUBD">
<dt><a href='#IimGroupSSE3'>&uarr; PHSUBD</a></dt>
<dd>Packed Horizontal Subtract</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PHSUBW:PHSUBD.html">PHSUBD</a></dd>
<dt>Category</dt>
<dd>ssse3,simdint</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0F3806 /r | 0x660F3806 /r</dd>
<dt>CPU</dt>
<dd>C2+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3650.htm">t3650</a>
</dd>
</dl><pre>
IimPHSUBD:: PROC
    MOV CL,0x06
    JMP IimGroupSSE3:
 ENDP IimPHSUBD::
</pre>

<dl id="IimPHSUBSW">
<dt><a href='#IimGroupSSE3'>&uarr; PHSUBSW</a></dt>
<dd>Packed Horizontal Subtract and Saturate</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PHSUBSW.html">PHSUBSW</a></dd>
<dt>Category</dt>
<dd>ssse3,simdint</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0F3807 /r | 0x660F3807 /r</dd>
<dt>CPU</dt>
<dd>C2+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3650.htm">t3650</a>
</dd>
</dl><pre>
IimPHSUBSW:: PROC
    MOV CL,0x07
    JMP IimGroupSSE3:
 ENDP IimPHSUBSW::
</pre>

<dl id="IimPSIGNB">
<dt><a href='#IimGroupSSE3'>&uarr; PSIGNB</a></dt>
<dd>Packed SIGN</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PSIGNB:PSIGNW:PSIGND.html">PSIGNB</a></dd>
<dt>Category</dt>
<dd>ssse3,simdint</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0F3808 /r | 0x660F3808 /r</dd>
<dt>CPU</dt>
<dd>C2+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3655.htm">t3655</a>
</dd>
</dl><pre>
IimPSIGNB:: PROC
    MOV CL,0x08
    JMP IimGroupSSE3:
 ENDP IimPSIGNB::
</pre>

<dl id="IimPSIGNW">
<dt><a href='#IimGroupSSE3'>&uarr; PSIGNW</a></dt>
<dd>Packed SIGN</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PSIGNB:PSIGNW:PSIGND.html">PSIGNW</a></dd>
<dt>Category</dt>
<dd>ssse3,simdint</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0F3809 /r | 0x660F3809 /r</dd>
<dt>CPU</dt>
<dd>C2+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3655.htm">t3655</a>
</dd>
</dl><pre>
IimPSIGNW:: PROC
    MOV CL,0x09
    JMP IimGroupSSE3:
 ENDP IimPSIGNW::
</pre>

<dl id="IimPSIGND">
<dt><a href='#IimGroupSSE3'>&uarr; PSIGND</a></dt>
<dd>Packed SIGN</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PSIGNB:PSIGNW:PSIGND.html">PSIGND</a></dd>
<dt>Category</dt>
<dd>ssse3,simdint</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0F380A /r | 0x660F380A /r</dd>
<dt>CPU</dt>
<dd>C2+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3655.htm">t3655</a>
</dd>
</dl><pre>
IimPSIGND:: PROC
    MOV CL,0x0A
    JMP IimGroupSSE3:
 ENDP IimPSIGND::
</pre>

<dl id="IimPMULHRSW">
<dt><a href='#IimGroupSSE3'>&uarr; PMULHRSW</a></dt>
<dd>Packed Multiply High with Round and Scale</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PMULHRSW.html">PMULHRSW</a></dd>
<dt>Category</dt>
<dd>ssse3,simdint</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0F380B /r | 0x660F380B /r</dd>
<dt>CPU</dt>
<dd>C2+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3655.htm">t3655</a>
</dd>
</dl><pre>
IimPMULHRSW:: PROC
    MOV CL,0x0B
    JMP IimGroupSSE3:
 ENDP IimPMULHRSW::
</pre>

<dl id="IimPABSB">
<dt><a href='#IimGroupSSE3'>&uarr; PABSB</a></dt>
<dd>Packed Absolute Value</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PABSB:PABSW:PABSD:PABSQ.html">PABSB</a></dd>
<dt>Category</dt>
<dd>ssse3,simdint</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0F381C /r | 0x660F381C /r</dd>
<dt>CPU</dt>
<dd>C2+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3655.htm">t3655</a>
</dd>
</dl><pre>
IimPABSB:: PROC
    MOV CL,0x1C
    JMP IimGroupSSE3:
 ENDP IimPABSB::
</pre>

<dl id="IimPABSW">
<dt><a href='#IimGroupSSE3'>&uarr; PABSW</a></dt>
<dd>Packed Absolute Value</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PABSB:PABSW:PABSD:PABSQ.html">PABSW</a></dd>
<dt>Category</dt>
<dd>ssse3,simdint</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0F381D /r | 0x660F381D /r</dd>
<dt>CPU</dt>
<dd>C2+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3655.htm">t3655</a>
</dd>
</dl><pre>
IimPABSW:: PROC
    MOV CL,0x1D
    JMP IimGroupSSE3:
 ENDP IimPABSW::
</pre>

<dl id="IimPABSD">
<dt><a href='#IimGroupSSE3'>&uarr; PABSD</a></dt>
<dd>Packed Absolute Value</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PABSB:PABSW:PABSD:PABSQ.html">PABSD</a></dd>
<dt>Category</dt>
<dd>ssse3,simdint</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Qq | <b>Vdq</b>,Wdq</dd>
<dt>Opcode</dt>
<dd>0x0F381E /r | 0x660F381E /r</dd>
<dt>CPU</dt>
<dd>C2+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3655.htm">t3655</a>
</dd>
</dl><pre>
IimPABSD:: PROC
    MOV CL,0x1E
    JMP IimGroupSSE3:
 ENDP IimPABSD::
</pre>

<dl id="IimCVTPI2PD">
<dt><a href='#IimHandlers'>&uarr; CVTPI2PD</a></dt>
<dd>Convert Packed DW Integers to Double-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/CVTPI2PD.html">CVTPI2PD</a></dd>
<dt>Category</dt>
<dd>sse2,pcksclr,conver</dd>
<dt>Operands</dt>
<dd><b>Vpd</b>,Qpi</dd>
<dt>Opcode</dt>
<dd>0x660F2A /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3660.htm">t3660</a>
</dd>
</dl><pre>
IimCVTPI2PD:: PROC
    IiRequire 686,SSE2
    IiEmitPrefix OTOGGLE
    IiEmitOpcode 0x0F,0x2A
    IiOpEn RM
    IiModRM /r
    IiDispatchFormat xmm.mmx, xmm.mem
.xmm.mem:
.xmm.mmx:
    RET
 ENDP IimCVTPI2PD::
</pre>

<dl id="IimCVTTPD2PI">
<dt><a href='#IimHandlers'>&uarr; CVTTPD2PI</a></dt>
<dd>Convert with Trunc. Packed Double-FP Values to DW Integers</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/CVTTPD2PI.html">CVTTPD2PI</a></dd>
<dt>Category</dt>
<dd>sse2,pcksclr,conver</dd>
<dt>Operands</dt>
<dd><b>Ppi</b>,Wpd</dd>
<dt>Opcode</dt>
<dd>0x660F2C /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3660.htm">t3660</a>
</dd>
</dl><pre>
IimCVTTPD2PI:: PROC
    IiRequire 686,SSE2
    IiEmitPrefix OTOGGLE
    IiEmitOpcode 0x0F,0x2C
    IiOpEn RM
    IiModRM /r
    IiDispatchFormat mmx.xmm, mmx.mem
.mmx.mem:
.mmx.xmm:
    RET
 ENDP IimCVTTPD2PI::
</pre>

<dl id="IimCVTPD2PI">
<dt><a href='#IimHandlers'>&uarr; CVTPD2PI</a></dt>
<dd>Convert Packed Double-FP Values to DW Integers</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/CVTPD2PI.html">CVTPD2PI</a></dd>
<dt>Category</dt>
<dd>sse2,pcksclr,conver</dd>
<dt>Operands</dt>
<dd><b>Ppi</b>,Wpd</dd>
<dt>Opcode</dt>
<dd>0x660F2D /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3660.htm">t3660</a>
</dd>
</dl><pre>
IimCVTPD2PI:: PROC
    IiRequire 686,SSE2
    IiEmitPrefix OTOGGLE
    IiEmitOpcode 0x0F,0x2D
    IiOpEn RM
    IiModRM /r
    IiDispatchFormat mmx.xmm, mmx.mem
.mmx.mem:
.mmx.xmm:
    RET
 ENDP IimCVTPD2PI::
</pre>

<dl id="IimCVTPS2PI">
<dt><a href='#IimHandlers'>&uarr; CVTPS2PI</a></dt>
<dd>Convert Packed Single-FP Values to DW Integers</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/CVTPS2PI.html">CVTPS2PI</a></dd>
<dt>Category</dt>
<dd>sse1,conver</dd>
<dt>Operands</dt>
<dd><b>Ppi</b>,Wpsq</dd>
<dt>Opcode</dt>
<dd>0x0F2D /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3660.htm">t3660</a>
</dd>
</dl><pre>
IimCVTPS2PI:: PROC
    IiRequire 686,SSE
    IiEmitOpcode 0x0F,0x2D
    IiOpEn RM
    IiModRM /r
    IiDispatchFormat mmx.xmm, mmx.mem
.mmx.mem:
.mmx.xmm:
    RET
 ENDP IimCVTPS2PI::
</pre>

<dl id="IimCVTTPS2PI">
<dt><a href='#IimHandlers'>&uarr; CVTTPS2PI</a></dt>
<dd>Convert with Trunc. Packed Single-FP Values to DW Integers</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/CVTTPS2PI.html">CVTTPS2PI</a></dd>
<dt>Category</dt>
<dd>sse1,conver</dd>
<dt>Operands</dt>
<dd><b>Ppi</b>,Wpsq</dd>
<dt>Opcode</dt>
<dd>0x0F2C /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3660.htm">t3660</a>
</dd>
</dl><pre>
IimCVTTPS2PI:: PROC
    IiRequire 686,SSE
    IiEmitOpcode 0x0F,0x2C
    IiOpEn RM
    IiModRM /r
    IiDispatchFormat mmx.xmm, mmx.mem
.mmx.mem:
.mmx.xmm:
    RET
 ENDP IimCVTTPS2PI::
</pre>

<dl id="IimCVTPI2PS">
<dt><a href='#IimHandlers'>&uarr; CVTPI2PS</a></dt>
<dd>Convert Packed DW Integers to Single-FP Values</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/CVTPI2PS.html">CVTPI2PS</a></dd>
<dt>Category</dt>
<dd>sse1,conver</dd>
<dt>Operands</dt>
<dd><b>Vps</b>,Qpi</dd>
<dt>Opcode</dt>
<dd>0x0F2A /r</dd>
<dt>CPU</dt>
<dd>P3+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3660.htm">t3660</a>
</dd>
</dl><pre>
IimCVTPI2PS:: PROC
    IiEmitOpcode 0x0F,0x2A
    IiOpEn RM
    IiModRM /r
    IiDispatchFormat xmm.mmx,xmm.mem
.xmm.mmx:
.xmm.mem:
    RET
 ENDP IimCVTPI2PS::
</pre>

<dl id="IimMOVDQ2Q">
<dt><a href='#IimHandlers'>&uarr; MOVDQ2Q</a></dt>
<dd>Move Quadword from XMM to MMX Technology Register</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/MOVDQ2Q.html">MOVDQ2Q</a></dd>
<dt>Category</dt>
<dd>sse2,simdint,datamov</dd>
<dt>Operands</dt>
<dd><b>Pq</b>,Uq</dd>
<dt>Opcode</dt>
<dd>0xF20FD6 /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3660.htm">t3660</a>
</dd>
</dl><pre>
IimMOVDQ2Q:: PROC
    IiRequire 686,SSE2
    IiEmitPrefix REPNE
    IiEmitOpcode 0x0F,0xD6
    IiOpEn RM
    IiModRM /r
    IiDispatchFormat mmx.xmm
.mmx.xmm:RET
 ENDP IimMOVDQ2Q::
</pre>

<dl id="IimMOVQ2DQ">
<dt><a href='#IimHandlers'>&uarr; MOVQ2DQ</a></dt>
<dd>Move Quadword from MMX Technology to XMM Register</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/MOVQ2DQ.html">MOVQ2DQ</a></dd>
<dt>Category</dt>
<dd>sse2,simdint,datamov</dd>
<dt>Operands</dt>
<dd><b>Vdq</b>,Nq</dd>
<dt>Opcode</dt>
<dd>0xF30FD6 /r</dd>
<dt>CPU</dt>
<dd>P4+</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3660.htm">t3660</a>
</dd>
</dl><pre>
IimMOVQ2DQ:: PROC
    IiRequire 686,SSE2
    IiEmitPrefix REPE
    IiEmitOpcode 0x0F,0xD6
    IiOpEn RM
    IiModRM /r
    IiDispatchFormat xmm.mmx
.xmm.mmx:RET
 ENDP IimMOVQ2DQ::
</pre>

<dl id="IimPEXTRW">
<dt><a href='#IimHandlers'>&uarr; PEXTRW</a></dt>
<dd>Extract Word</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PEXTRW.html">PEXTRW</a></dd>
<dt>Category</dt>
<dd>sse41,simdint,datamov</dd>
<dt>Operands</dt>
<dd><b>Mw</b>,Vdq,Ib | <b>Rdqp</b>,Vdq,Ib | <b>Gdqp</b>,Nq,Ib | <b>Gdqp</b>,Udq,Ib</dd>
<dt>Opcode</dt>
<dd>0x660F3A15 /r | 0x660F3A15 /r | 0x0FC5 /r | 0x660FC5 /r</dd>
<dt>CPU</dt>
<dd>C2++</dd>
<dt>Documented</dt>
<dd>D<a href="http://ref.x86asm.net/geek-abc.html#gen_note_SSE4_amd"><sup>43</sup></a></dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3695.htm">t3695</a>
</dd>
</dl><pre>
IimPEXTRW:: PROC
    IiAllowModifier CODE
    IiEmitOpcode 0x0F
    IiModRM /r
    IiEmitImm Operand3,BYTE
    IiDispatchFormat mem.xmm.imm, r32.xmm.imm, r32.mmx.imm, \
                     mem.xmm.imm, r64.xmm.imm, r64.mmx.imm
.mem.xmm.imm:
    IiEncoding CODE=LONG,DATA=WORD
    IiRequire SSE4.1
    IiEmitPrefix OTOGGLE
    IiEmitOpcode 0x3A,0x15
    IiOpEn MR
    RET
.r64.xmm.imm:
    IiEmitPrefix REX.W
.r32.xmm.imm:
    IiDispatchCode LONG=.mem.xmm.imm:
    IiEmitPrefix OTOGGLE
    JMPS .r32.mmx.imm:
.r64.mmx.imm:
    IiEmitPrefix REX.W    
.r32.mmx.imm:
    IiEncoding CODE=SHORT,DATA=WORD
    IiEmitOpcode 0xC5
    IiOpEn RM
    RET
 ENDP IimPEXTRW::
</pre>
<!--IimEpilogue--><pre>
  ENDPROGRAM iim
</pre><!--TAILMENU-->
<!--Contents below the marker {!==TAILMENU==} was generated by "generate.php".-->
<br class='CLEAR'/><a id='bottom' href='#top'>&#x25B2;Back to the top&#x25B2;</a>
</body></html>
