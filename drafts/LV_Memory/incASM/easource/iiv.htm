<!doctype html><html lang='en'><head>
<meta http-equiv='Content-Type' content='text/html; charset=utf-8'/>
<meta name='viewport' content='width=device-width, initial-scale=1.0, maximum-scale=2.0, user-scalable=yes'>
<meta name='robots' content='ALL,FOLLOW'/>
<meta name='description' content='iiv.htm source file'/>
<meta name='version' content='20250318'/>
<meta name='author' content='Pavel vitsoft Šrubař'/>
<link rel='stylesheet' href='../euroasm.css' type='text/css'/>
<link rel='shortcut icon' href='../favicon.ico'/>
<title>iiv.htm source file</title>
</head>
<body class='EASOURCE' id='top'><div class='HEADMENU'><table>
<tr><td rowspan='2' title='&euro;ASM - assembler and linker'><img src='../favicon.ico' alt='EuroAssembler' />
<td><a href='../index.htm' title='Alphabetical index of all &euro;ASM elements, directives and instructions'>Index</a></td>
<td><a href='../eadoc/' class='EADOC' title='Documentation of EuroAssembler'>Manual</a></td>
<td><a href='https://euroassembler.eu/download/' title='History &amp; download of the latest and previous versions'>Download</a></td>
<td><a href='../easource/' class='EASOURCE' title='Source files of EuroAssembler itself'>Source</a></td>
<td><a href='../maclib/' class='MACLIB' title='Macro libraries shipped with &euro;ASM'>Macros</a></td>
<td rowspan='2' title='Find the searched token in any text file on this site'>
<form method='post' action='../search.php' enctype='multipart/form-data' accept-charset='utf-8'>
<input type='text' id='q' placeholder='Searched word(s)' name='q' value=''/>
<br/><label title='Check the box to find the expression even if it is surrounded by other letters | digits.'>
<input type='checkbox' name='EW'/><small>Embedded word</small></label>
<br/><label title='Check the box for case-insensitive search.'>
<input type='checkbox' name='CI'/><small>Case ins.</small></label>
<input type='submit' title='Search for the specified word|expression in all site files.' name='find' value='Search'/>
</form></td></tr><tr>
<td><a href='../sitemap.htm' title='List of directories and files on this site'>Sitemap</a></td>
<td><a href='../eadoc/links.htm' class='EADOC' title='References and external links to resources used in EuroAssembler developement'>Links</a></td>
<td><a href='https://euroassembler.eu/forum/' title='Discussion forum concerning EuroAssembler'>Forum</a></td>
<td><a href='../eatests/' class='EATESTS' title='Program snippets for testing the function of &euro;ASM'>Tests</a></td>
<td><a href='../objlib/' class='OBJLIB' title='Skeletons and sample objects and projects shipped with &euro;ASM'>Projects</a></td>
</tr></table></div>
<!--Contents above the marker {!==/HEADMENU==} was generated by "generate.php".-->
<!--/HEADMENU-->
<h1>iiv.htm
<br/><i>Enumerations</i>
<br/><a href="#IivList">IivList</a>
<br/><i>Instruction handlers</i><br/><span class="ILIST">
<a href="#IivADCX">ADCX</a>
<a href="#IivADOX">ADOX</a>
<a href="#IivBEXTR">BEXTR</a>
<a href="#IivBLSI">BLSI</a>
<a href="#IivBLSMSK">BLSMSK</a>
<a href="#IivBLSR">BLSR</a>
<a href="#IivBZHI">BZHI</a>
<a href="#IivCLWB">CLWB</a>
<a href="#IivMULX">MULX</a>
<a href="#IivPCOMMIT">PCOMMIT</a>
<a href="#IivPDEP">PDEP</a>
<a href="#IivPEXT">PEXT</a>
<a href="#IivRDFSBASE">RDFSBASE</a>
<a href="#IivRDGSBASE">RDGSBASE</a>
<a href="#IivRORX">RORX</a>
<a href="#IivSARX">SARX</a>
<a href="#IivSHLX">SHLX</a>
<a href="#IivSHRX">SHRX</a>
<a href="#IivVPCLMULHQHQDQ">VPCLMULHQHQDQ</a>
<a href="#IivVPCLMULHQLQDQ">VPCLMULHQLQDQ</a>
<a href="#IivVPCLMULLQHQDQ">VPCLMULLQHQDQ</a>
<a href="#IivVPCLMULLQLQDQ">VPCLMULLQLQDQ</a>
<a href="#IivVPCLMULQDQ">VPCLMULQDQ</a>
<a href="#IivWRFSBASE">WRFSBASE</a>
<a href="#IivWRGSBASE">WRGSBASE</a>
</span><!--IivAList-->
</h1>

<dl id="IivHandlers"><dt><a href="#top">&uarr; <em>IivHandlers</em></a> </dt>
<dd> assemble AVX <b>vector</b> machine instructions.
<dt>See also</dt><dd><a class="EXT" href="ii.htm#IiHandlers">IiHandlers</a>,
<a class="EXT" href="../eadoc/links.htm#IntelVol2">[IntelVol2]</a>
<a class="EXT" href="../eadoc/links.htm#IntelAVX512">[IntelAVX512]</a>
</dd></dl><pre>
iiv PROGRAM FORMAT=COFF,MODEL=FLAT,WIDTH=32
    INCLUDEHEAD euroasm.htm, \  Interface (structures, symbols and macros) of other modules used in this source.
                ea.htm,eaopt.htm,exp.htm,ii.htm,msg.htm,pgm.htm,pgmopt.htm,sss.htm,stm.htm,sym.htm
</pre><br class="CLEAR"/><pre>
iiv HEAD ; Start of module interface.
</pre>

<dl id="IivList"><dt><a href="#top">&uarr; %IivList</a></dt><dd> enumerates machine instructions
<!---->of this family which &euro;ASM can assemble.
<br/>Each instruction declared in <code>%IivList</code> requires the corresponding
<a href="#IivHandlers">handler</a> in this file.</dd>
<dt>See also</dt><dd><a class="EXT" href="dict.htm#DictLookupIi">DictLookupIi</a></dd></dl><pre>
%IivList %SET \
BLSR, \
BLSMSK, \
BLSI, \
BZHI, \
BEXTR, \
ADCX, \
ADOX, \
RORX, \
SHLX, \
SARX, \
SHRX, \
PEXT, \
PDEP, \
MULX, \
VPCLMULQDQ, \
RDFSBASE, \
RDGSBASE, \
WRFSBASE, \
WRGSBASE, \
PCOMMIT, \
CLWB, \
VPCLMULLQLQDQ, \
VPCLMULHQLQDQ, \
VPCLMULLQHQDQ, \
VPCLMULHQHQDQ, \
<!--IivList-->
;
</pre><pre>
  ENDHEAD iiv ; End of module interface.
</pre>

<dl id="IivBLSR">
<dt><a href="#IivHandlers">&uarr; BLSR</a></dt>
<dd>Reset Lowest Set Bit</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/BLSR.html">BLSR</a></dd>
<dt>Intel reference</dt>
<dd><table>
<tr><th>BLSR r32, r/m32
</th><td>VEX.NDD.LZ.0F38.W0 F3 /1 
</td></tr>
<tr><th>BLSR r64, r/m64
</th><td>VEX.NDD.LZ.0F38.W1 F3 /1 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>0xF3</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4410.htm">t4410</a>
</dd>
</dl><pre>
IivBLSR:: PROC
    IiModRM /1
.rm:IiRequire ABM
    IiEmitOpcode 0xF3
    IiOpEn VM
    IiDispatchFormat  r32.r32, r32.mem, r64.r64, r64.mem
.r32.r32:
.r32.mem:
    IiEncoding DATA=DWORD
    IiEmitPrefix VEX.NDD.LZ.0F38.W0
    RET
.r64.r64:
.r64.mem:
    IiEncoding DATA=QWORD
    IiEmitPrefix VEX.NDD.LZ.0F38.W1
    RET
  ENDP IivBLSR::
</pre>

<dl id="IivBLSMSK">
<dt><a href="#IivBLSR">&uarr; BLSMSK</a></dt>
<dd>Get Mask Up to Lowest Set Bit</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/BLSMSK.html">BLSMSK</a></dd>
<dt>Intel reference</dt>
<dd><table>
<tr><th>BLSMSK r32, r/m32
</th><td>VEX.NDD.LZ.0F38.W0 F3 /2 
</td></tr>
<tr><th>BLSMSK r64, r/m64
</th><td>VEX.NDD.LZ.0F38.W1 F3 /2 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>0xF3</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4410.htm">t4410</a>
</dd>
</dl><pre>
IivBLSMSK:: PROC
    IiModRM /2
    JMP IivBLSR.rm:
  ENDP IivBLSMSK::
</pre>

<dl id="IivBLSI">
<dt><a href="#IivBLSR">&uarr; BLSI</a></dt>
<dd>Extract Lowest Set Isolated Bit</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/BLSI.html">BLSI</a></dd>
<dt>Intel reference</dt>
<dd><table>
<tr><th>BLSI r32, r/m32
</th><td>VEX.NDD.LZ.0F38.W0 F3 /3 
</td></tr>
<tr><th>BLSI r64, r/m64
</th><td>VEX.NDD.LZ.0F38.W1 F3 /3
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>0xF3</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4410.htm">t4410</a>
</dd>
</dl><pre>
IivBLSI:: PROC
    IiModRM /3
    JMP IivBLSR.rm:
  ENDP IivBLSI::
</pre>

<dl id="IivBZHI">
<dt><a href="#IivHandlers">&uarr; BZHI</a></dt>
<dd>Zero High Bits Starting with Specified Bit Position</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/BZHI.html">BZHI</a></dd>
<dt>Intel reference</dt>
<dd><table>
<tr><th>BZHI r32a, r/m32, r32b
</th><td>VEX.NDS.LZ.0F38.W0 F5 /r
</td></tr>
<tr><th>BZHI r64a, r/m64, r64b
</th><td>VEX.NDS.LZ.0F38.W1 F5 /r
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>0xF5</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4420.htm">t4420</a>
</dd>
</dl><pre>
IivBZHI:: PROC
    IiEmitOpcode 0xF5
.op:IiRequire ABM
    IiOpEn RMV
    IiModRM /r
    IiDispatchFormat  r32.r32.r32, r32.mem.r32, r64.r64.r64, r64.mem.r64
.r32.r32.r32:
.r32.mem.r32:
    IiEncoding DATA=DWORD
    IiEmitPrefix VEX.NDS.LZ.0F38.W0
    RET
.r64.r64.r64:
.r64.mem.r64:
    IiEncoding DATA=QWORD
    IiEmitPrefix VEX.NDS.LZ.0F38.W1
    RET
  ENDP IivBZHI::
</pre>

<dl id="IivBEXTR">
<dt><a href="#IivBZHI">&uarr; BEXTR</a></dt>
<dd>Bit Field Extract</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/BEXTR.html">BEXTR</a></dd>
<dt>Intel reference</dt>
<dd><table>
<tr><th>BEXTR r32a, r/m32, r32b
</th><td>VEX.NDS.LZ.0F38.W0 F7 /r
</td></tr>
<tr><th>BEXTR r64a, r/m64, r64b
</th><td>VEX.NDS.LZ.0F38.W1 F7 /r
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>0xF7</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4420.htm">t4420</a>
</dd>
</dl><pre>
IivBEXTR:: PROC
    IiEmitOpcode 0xF7
    JMP IivBZHI.op:
  ENDP IivBEXTR::
</pre>

<dl id="IivADCX">
<dt><a href="#IivHandlers">&uarr; ADCX</a></dt>
<dd>Unsigned Integer Addition of Two Operands with Carry Flag</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/ADCX.html">ADCX</a></dd>
<dt>Intel reference</dt>
<dd><table>
<tr><th>ADCX r32, r/m32
</th><td>66 0F 38 F6 /r 
</td></tr>
<tr><th>ADCX r64, r/m64
</th><td>66 REX.w 0F 38 F6 /r 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>0xF6</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4420.htm">t4420</a>
</dd>
</dl><pre>
IivADCX:: PROC
    IiEmitPrefix OTOGGLE
.pf:IiRequire SPEC
    IiEmitOpcode 0x0F,0x38,0xF6
    IiOpEn RM
    IiModRM /r
    IiDispatchFormat  r32.r32, r32.mem, r64.r64, r64.mem
.r32.r32:
.r32.mem:
    IiEncoding DATA=DWORD
    RET
.r64.r64:
.r64.mem:
    IiEncoding DATA=QWORD
    IiEmitPrefix REX.W
    RET
  ENDP IivADCX::
</pre>

<dl id="IivADOX">
<dt><a href="#IivADCX">&uarr; ADOX</a></dt>
<dd>Unsigned Integer Addition of Two Operands with Overflow Flag</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/ADOX.html">ADOX</a></dd>
<dt>Intel reference</dt>
<dd><table>
<tr><th>ADOX r32, r/m32
</th><td>F3 0F 38 F6 /r 
</td></tr>
<tr><th>ADOX r64, r/m64
</th><td>F3 REX.w 0F 38 F6 /r 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>0xF6</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4420.htm">t4420</a>
</dd>
</dl><pre>
IivADOX:: PROC
    IiEmitPrefix REPE
    JMP IivADCX.pf:
  ENDP IivADOX::
</pre>

<dl id="IivRORX">
<dt><a href="#IivHandlers">&uarr; RORX</a></dt>
<dd>Rotate Right Logical Without Affecting Flags</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/RORX.html">RORX</a></dd>
<dt>Intel reference</dt>
<dd><table>
<tr><th>RORX r32, r/m32, imm8
</th><td>VEX.LZ.F2.0F3A.W0 F0 /r ib 
</td></tr>
<tr><th>RORX r64, r/m64, imm8
</th><td>VEX.LZ.F2.0F3A.W1 F0 /r ib 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>0xF0</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4422.htm">t4422</a>
</dd>
</dl><pre>
IivRORX:: PROC
    IiRequire ABM
    IiEmitOpcode 0xF0
    IiOpEn RM
    IiModRM /r
    IiEmitImm Operand3, BYTE
    IiDispatchFormat  r32.r32.imm, r32.mem.imm, r64.r64.imm, r64.mem.imm
.r32.r32.imm:
.r32.mem.imm:
    IiEmitPrefix VEX.LZ.F2.0F3A.W0
    RET
.r64.r64.imm:
.r64.mem.imm:
    IiEmitPrefix VEX.LZ.F2.0F3A.W1
    RET
  ENDP IivRORX::
</pre>

<dl id="IivSHLX">
<dt><a href="#IivHandlers">&uarr; SHLX</a></dt>
<dd>Shift Logical Left Without Affecting Flags</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/SARX:SHLX:SHRX.html">SHLX</a></dd>
<dt>Intel reference</dt>
<dd><table>
<tr><th>SHLX r32a, r/m32, r32b
</th><td>VEX.NDS.LZ.66.0F38.W0 F7 /r
</td></tr>
<tr><th>SHLX r64a, r/m64, r64b
</th><td>VEX.NDS.LZ.66.0F38.W1 F7 /r
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>0xF7</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4422.htm">t4422</a>
</dd>
</dl><pre>
IivSHLX:: PROC
    IiRequire ABM
    IiEmitOpcode 0xF7
    IiOpEn RMV
    IiModRM /r
    IiDispatchFormat  r32.r32.r32, r32.mem.r32, r64.r64.r64, r64.mem.r64
.r32.r32.r32:
.r32.mem.r32:
    IiEmitPrefix VEX.NDS.LZ.66.0F38.W0
    RET
.r64.r64.r64:
.r64.mem.r64:
    IiEmitPrefix VEX.NDS.LZ.66.0F38.W1
    RET
  ENDP IivSHLX::
</pre>

<dl id="IivSARX">
<dt><a href="#IivHandlers">&uarr; SARX</a></dt>
<dd>Shift Arithmetic Right Without Affecting Flags</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/SARX:SHLX:SHRX.html">SARX</a></dd>
<dt>Intel reference</dt>
<dd><table>
<tr><th>SARX r32a, r/m32, r32b
</th><td>VEX.NDS.LZ.F3.0F38.W0 F7 /r
</td></tr>
<tr><th>SARX r64a, r/m64, r64b
</th><td>VEX.NDS.LZ.F3.0F38.W1 F7 /r
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>0xF7</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4422.htm">t4422</a>
</dd>
</dl><pre>
IivSARX:: PROC
    IiRequire ABM
    IiEmitOpcode 0xF7
    IiOpEn RMV
    IiModRM /r
    IiDispatchFormat  r32.r32.r32, r32.mem.r32, r64.r64.r64, r64.mem.r64
.r32.r32.r32:
.r32.mem.r32:
    IiEmitPrefix VEX.NDS.LZ.F3.0F38.W0
    RET
.r64.r64.r64:
.r64.mem.r64:
    IiEmitPrefix VEX.NDS.LZ.F3.0F38.W1
    RET
  ENDP IivSARX::
</pre>

<dl id="IivSHRX">
<dt><a href="#IivHandlers">&uarr; SHRX</a></dt>
<dd>Shift Logical Right Without Affecting Flags</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/SARX:SHLX:SHRX.html">SHRX</a></dd>
<dt>Intel reference</dt>
<dd><table>
<tr><th>SHRX r32a, r/m32, r32b
</th><td>VEX.NDS.LZ.F2.0F38.W0 F7 /r
</td></tr>
<tr><th>SHRX r64a, r/m64, r64b
</th><td>VEX.NDS.LZ.F2.0F38.W1 F7 /r
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>0xF7</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4422.htm">t4422</a>
</dd>
</dl><pre>
IivSHRX:: PROC
    IiRequire ABM
    IiEmitOpcode 0xF7
    IiOpEn RMV
    IiModRM /r
    IiDispatchFormat  r32.r32.r32, r32.mem.r32, r64.r64.r64, r64.mem.r64
.r32.r32.r32:
.r32.mem.r32:
    IiEmitPrefix VEX.NDS.LZ.F2.0F38.W0
    RET
.r64.r64.r64:
.r64.mem.r64:
    IiEmitPrefix VEX.NDS.LZ.F2.0F38.W1
    RET
  ENDP IivSHRX::
</pre>

<dl id="IivPEXT">
<dt><a href="#IivHandlers">&uarr; PEXT</a></dt>
<dd>Parallel Bits Extract</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PEXT.html">PEXT</a></dd>
<dt>Intel reference</dt>
<dd><table>
<tr><th>PEXT r32a, r32b, r/m32
</th><td>VEX.NDS.LZ.F3.0F38.W0 F5 /r 
</td></tr>
<tr><th>PEXT r64a, r64b, r/m64
</th><td>VEX.NDS.LZ.F3.0F38.W1 F5 /r 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>0xF5</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4424.htm">t4424</a>
</dd>
</dl><pre>
IivPEXT:: PROC
    IiRequire ABM 
    IiEmitOpcode 0xF5
    IiOpEn RVM
    IiModRM /r
    IiDispatchFormat  r32.r32.r32, r32.r32.mem, r64.r64.r64, r64.r64.mem
.r32.r32.r32:
.r32.r32.mem:
    IiEncoding DATA=DWORD
    IiEmitPrefix VEX.NDS.LZ.F3.0F38.W0
    RET
.r64.r64.r64:
.r64.r64.mem:
    IiEncoding DATA=QWORD
    IiEmitPrefix VEX.NDS.LZ.F3.0F38.W1
    RET
  ENDP IivPEXT::
</pre>

<dl id="IivPDEP">
<dt><a href="#IivHandlers">&uarr; PDEP</a></dt>
<dd>Parallel Bits Deposit</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/PDEP.html">PDEP</a></dd>
<dt>Intel reference</dt>
<dd><table>
<tr><th>PDEP r32a, r32b, r/m32
</th><td>VEX.NDS.LZ.F2.0F38.W0 F5 /r 
</td></tr>
<tr><th>PDEP r64a, r64b, r/m64
</th><td>VEX.NDS.LZ.F2.0F38.W1 F5 /r 
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>0xF5</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4424.htm">t4424</a>
</dd>
</dl><pre>
IivPDEP:: PROC
    IiRequire ABM
    IiEmitOpcode 0xF5
    IiOpEn RVM
    IiModRM /r
    IiDispatchFormat  r32.r32.r32, r32.r32.mem, r64.r64.r64, r64.r64.mem
.r32.r32.r32:
.r32.r32.mem:
    IiEncoding DATA=DWORD
    IiEmitPrefix VEX.NDS.LZ.F2.0F38.W0
    RET
.r64.r64.r64:
.r64.r64.mem:
    IiEncoding DATA=QWORD
    IiEmitPrefix VEX.NDS.LZ.F2.0F38.W1
    RET
  ENDP IivPDEP::
</pre>

<dl id="IivMULX">
<dt><a href="#IivHandlers">&uarr; MULX</a></dt>
<dd>Unsigned Multiply by EDX/RDX Without Affecting Flags</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/MULX.html">MULX</a></dd>
<dt>Intel reference</dt>
<dd><table>
<tr><th>MULX r32a, r32b, r/m32
</th><td>VEX.NDD.LZ.F2.0F38.W0 F6 /r 
</td></tr>
<tr><th>MULX r64a, r64b, r/m64
</th><td>VEX.NDD.LZ.F2.0F38.W1 F6 /r 
</td></tr>
</table></dd>
<dt>Comment</dt>
<dd>&euro;ASM tolerates implied rDX register as 4th operand.</dd>
<dt>Opcode</dt>
<dd>0xF6</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4424.htm">t4424</a>
</dd>
</dl><pre>
IivMULX:: PROC
    IiRequire ABM
    IiEmitOpcode 0xF6
    IiOpEn RVM
    IiModRM /r
    IiDispatchFormat  r32.r32.r32, r32.r32.mem, r64.r64.r64, r64.r64.mem, \
    r32.r32.r32.r32, r32.r32.mem.r32, r64.r64.r64.r64, r64.r64.mem.r64
.r32.r32.r32.r32:
.r32.r32.mem.r32:
    IiAbortIfNot Operand4,EDX
.r32.r32.r32:
.r32.r32.mem:
    IiEncoding DATA=DWORD
    IiEmitPrefix VEX.NDD.LZ.F2.0F38.W0
    RET
.r64.r64.r64.r64:
.r64.r64.mem.r64:
    IiAbortIfNot Operand4,RDX
.r64.r64.r64:
.r64.r64.mem:
    IiEncoding DATA=QWORD
    IiEmitPrefix VEX.NDD.LZ.F2.0F38.W1
    RET
  ENDP IivMULX::
</pre>

<dl id="IivVPCLMULQDQ">
<dt><a href="#IivHandlers">&uarr; VPCLMULQDQ</a></dt>
<dd>Carry-Less Multiplication Quadword</dd>
<dt>Intel reference</dt>
<dd><table>
<tr><th>VPCLMULQDQ xmm1, xmm2, xmm3/m128, imm8
</th><td>VEX.NDS.128.66.0F3A.WIG 44 /r ib
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>0x44</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4426.htm">t4426</a>
</dd>
</dl><pre>
IivVPCLMULQDQ:: PROC
    IiRequire SPEC
    IiEmitOpcode 0x44
    IiOpEn RVM
    IiModRM /r
    IiEmitImm Operand4, BYTE, Max=17
    IiEmitPrefix VEX.NDS.128.66.0F3A.WIG
    IiDispatchFormat  xmm.xmm.xmm.imm, xmm.xmm.mem.imm
.xmm.xmm.xmm.imm:
.xmm.xmm.mem.imm:
    RET
  ENDP IivVPCLMULQDQ::
</pre>

<dl id="IivVPCLMULLQLQDQ">
<dt><a href="#IivHandlers">&uarr; VPCLMULLQLQDQ</a></dt>
<dd>Carry-Less Multiplication Qword imm=0x00</dd>
<dt>Intel reference</dt>
<dd><table>
<tr><th>VPCLMULLQLQDQ xmm1, xmm2, xmm3/m128
</th><td>VEX.NDS.128.66.0F3A.WIG 44 /r 00
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>0x44</dd>
<dt>See also</dt>
<dd><a href="#IivVPCLMULQDQ">VPCLMULQDQ</a>.</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4426.htm">t4426</a>
</dd>
</dl><pre>
IivVPCLMULLQLQDQ:: PROC
    MOV CL,0x00
.im:IiImmCreate CL
    IiEmitOpcode 0x44
    IiOpEn RVM
    IiModRM /r
    IiEmitImm Operand4, BYTE
    IiEmitPrefix VEX.NDS.128.66.0F3A.WIG
    IiDispatchFormat  xmm.xmm.xmm.imm, xmm.xmm.mem.imm
.xmm.xmm.xmm.imm:
.xmm.xmm.mem.imm:
    RET
  ENDP IivVPCLMULLQLQDQ::
</pre>

<dl id="IivVPCLMULHQLQDQ">
<dt><a href="#IivVPCLMULLQLQDQ">&uarr; VPCLMULHQLQDQ</a></dt>
<dd>Carry-Less Multiplication Qword imm=0x01</dd>
<dt>Intel reference</dt>
<dd><table>
<tr><th>VPCLMULHQLQDQ xmm1, xmm2, xmm3/m128
</th><td>VEX.NDS.128.66.0F3A.WIG 44 /r 01
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>0x44</dd>
<dt>See also</dt>
<dd><a href="#IivVPCLMULQDQ">VPCLMULQDQ</a>.</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4426.htm">t4426</a>
</dd>
</dl><pre>
IivVPCLMULHQLQDQ:: PROC
    MOV CL,0x01
    JMP IivVPCLMULLQLQDQ.im:
  ENDP IivVPCLMULHQLQDQ::
</pre>

<dl id="IivVPCLMULLQHQDQ">
<dt><a href="#IivVPCLMULLQLQDQ">&uarr; VPCLMULLQHQDQ</a></dt>
<dd>Carry-Less Multiplication Qword imm=0x10</dd>
<dt>Intel reference</dt>
<dd><table>
<tr><th>VPCLMULLQHQDQ xmm1, xmm2, xmm3/m128
</th><td>VEX.NDS.128.66.0F3A.WIG 44 /r 10
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>0x44</dd>
<dt>See also</dt>
<dd><a href="#IivVPCLMULQDQ">VPCLMULQDQ</a>.</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4426.htm">t4426</a>
</dd>
</dl><pre>
IivVPCLMULLQHQDQ:: PROC
    MOV CL,0x10
    JMP IivVPCLMULLQLQDQ.im:
  ENDP IivVPCLMULLQHQDQ::
</pre>

<dl id="IivVPCLMULHQHQDQ">
<dt><a href="#IivVPCLMULLQLQDQ">&uarr; VPCLMULHQHQDQ</a></dt>
<dd>Carry-Less Multiplication Qword imm=0x11</dd>
<dt>Intel reference</dt>
<dd><table>
<tr><th>VPCLMULHQHQDQ xmm1, xmm2, xmm3/m128
</th><td>VEX.NDS.128.66.0F3A.WIG 44 /r 11
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>0x44</dd>
<dt>See also</dt>
<dd><a href="#IivVPCLMULQDQ">VPCLMULQDQ</a>.</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4426.htm">t4426</a>
</dd>
</dl><pre>
IivVPCLMULHQHQDQ:: PROC
    MOV CL,0x11
    JMP IivVPCLMULLQLQDQ.im:
  ENDP IivVPCLMULHQHQDQ::
</pre>

<dl id="IivRDFSBASE">
<dt><a href="#IivHandlers">&uarr; RDFSBASE</a></dt>
<dd>Read FS Segment Base</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/RDFSBASE:RDGSBASE.html">RDFSBASE</a></dd>
<dt>Intel reference</dt>
<dd><table>
<tr><th>RDFSBASE r32
</th><td>F3 0F AE /0
</td></tr>
<tr><th>RDFSBASE r64
</th><td>F3 REX.W 0F AE /0
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>0xAE</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3910.htm">t3910</a>
</dd>
</dl><pre>
IivRDFSBASE:: PROC
     IiModRM /0
 .rm:IiAbortIfNot64
     IiOpEn M
     IiEmitPrefix REPE
     IiEmitOpcode 0x0F,0xAE
     IiDispatchFormat  r32, r64
.r32:IiEncoding DATA=DWORD
     RET
.r64:IiEncoding DATA=QWORD
     IiEmitPrefix REX.W
     RET
  ENDP IivRDFSBASE::
</pre>

<dl id="IivRDGSBASE">
<dt><a href="#IivRDFSBASE">&uarr; RDGSBASE</a></dt>
<dd>Read GS Segment Base</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/RDFSBASE:RDGSBASE.html">RDGSBASE</a></dd>
<dt>Intel reference</dt>
<dd><table>
<tr><th>RDGSBASE r32
</th><td>F3 0F AE /1
</td></tr>
<tr><th>RDGSBASE r64
</th><td>F3 REX.W 0F AE /1
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>0xAE</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3910.htm">t3910</a>
</dd>
</dl><pre>
IivRDGSBASE:: PROC
    IiModRM /1
    JMP IivRDFSBASE.rm:
  ENDP IivRDGSBASE::
</pre>

<dl id="IivWRFSBASE">
<dt><a href="#IivRDFSBASE">&uarr; WRFSBASE</a></dt>
<dd>Write FS Segment Base</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/WRFSBASE:WRGSBASE.html">WRFSBASE</a></dd>
<dt>Intel reference</dt>
<dd><table>
<tr><th>WRFSBASE r32
</th><td>F3 0F AE /2
</td></tr>
<tr><th>WRFSBASE r64
</th><td>F3 REX.W 0F AE /2
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>0xAE</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3910.htm">t3910</a>
</dd>
</dl><pre>
IivWRFSBASE:: PROC
    IiModRM /2
    JMP IivRDFSBASE.rm:
  ENDP IivWRFSBASE::
</pre>

<dl id="IivWRGSBASE">
<dt><a href="#IivRDFSBASE">&uarr; WRGSBASE</a></dt>
<dd>Write GS Segment Base</dd>
<dt>Description</dt>
<dd><a class="EXTW" href="http://www.felixcloutier.com/x86/WRFSBASE:WRGSBASE.html">WRGSBASE</a></dd>
<dt>Intel reference</dt>
<dd><table>
<tr><th>WRGSBASE r32
</th><td>F3 0F AE /3
</td></tr>
<tr><th>WRGSBASE r64
</th><td>F3 REX.W 0F AE /3
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>0xAE</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t3910.htm">t3910</a>
</dd>
</dl><pre>
IivWRGSBASE:: PROC
    IiModRM /3
    JMP IivRDFSBASE.rm:
  ENDP IivWRGSBASE::
</pre>

<dl id="IivPCOMMIT">
<dt><a href="#IivHandlers">&uarr; PCOMMIT</a></dt>
<dd>Commits stores to persistent memory</dd>
<dt>Intel reference</dt>
<dd><table>
<tr><th>PCOMMIT
</th><td>66 0F AE F8
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>0xAE</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4142.htm">t4142</a>
</dd>
</dl><pre>
IivPCOMMIT:: PROC
    IiEmitPrefix OTOGGLE
    IiEmitOpcode 0x0F,0xAE,0xF8
    IiDispatchFormat none
.none:RET
  ENDP IivPCOMMIT::
</pre>

<dl id="IivCLWB">
<dt><a href="#IivHandlers">&uarr; CLWB</a></dt>
<dd>Cache Line Write Back</dd>
<dt>Intel reference</dt>
<dd><table>
<tr><th>CLWB m8
</th><td>66 0F AE /6
</td></tr>
</table></dd>
<dt>Opcode</dt>
<dd>0xAE</dd>
<dt>Tested by</dt>
<dd><a class="EXT" href="../eatests/t4142.htm">t4142</a>
</dd>
</dl><pre>
IivCLWB:: PROC
    IiEmitPrefix OTOGGLE
    IiEmitOpcode 0x0F,0xAE
    IiOpEn M
    IiModRM /6
    IiDispatchFormat  mem
.mem:RET
  ENDP IivCLWB::
</pre>

<!--IivEpilogue--><pre>
  ENDPROGRAM iiv
</pre><!--TAILMENU-->
<!--Contents below the marker {!==TAILMENU==} was generated by "generate.php".-->
<br class='CLEAR'/><a id='bottom' href='#top'>&#x25B2;Back to the top&#x25B2;</a>
</body></html>
